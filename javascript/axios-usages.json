{"objectSlices":[{"code":"","fullName":"bin/GithubAPI.js::program","signature":"","fileName":"bin/GithubAPI.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"util","typeFullName":"util:util","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/GithubAPI.js::program:require","isExternal":null,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"promisify","resolvedMethod":"util.promisify","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":7,"columnNumber":13}],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"promisify","typeFullName":"ANY","resolvedMethod":"util:util:promisify","isExternal":true,"lineNumber":311,"columnNumber":36,"label":"CALL"},"definedBy":{"name":"promisify","typeFullName":"ANY","resolvedMethod":"util:util:promisify","isExternal":true,"lineNumber":311,"columnNumber":36,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"__ecma.Array:forEach","isExternal":true,"lineNumber":589,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"__ecma.Array:forEach","isExternal":true,"lineNumber":589,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"__ecma.Array.factory","typeFullName":"ANY","resolvedMethod":"__ecma.Array.factory","isExternal":true,"lineNumber":212,"columnNumber":61,"label":"CALL"},"definedBy":{"name":"__ecma.Array.factory","typeFullName":"ANY","resolvedMethod":"__ecma.Array.factory","isExternal":true,"lineNumber":212,"columnNumber":61,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/GithubAPI.js::program:require","isExternal":true,"lineNumber":5,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/GithubAPI.js::program:require","isExternal":true,"lineNumber":5,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:<init>","signature":"","fileName":"bin/GithubAPI.js","lineNumber":10,"columnNumber":2,"usages":[{"targetObj":{"name":"<operator>.throw","typeFullName":"ANY","resolvedMethod":"<operator>.throw","isExternal":true,"lineNumber":579,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"<operator>.throw","typeFullName":"ANY","resolvedMethod":"<operator>.throw","isExternal":true,"lineNumber":579,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"create","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosInstance:create","isExternal":true,"lineNumber":21,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"create","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosInstance:create","isExternal":true,"lineNumber":21,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.logicalNot","typeFullName":"ANY","resolvedMethod":"<operator>.logicalNot","isExternal":true,"lineNumber":646,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"<operator>.logicalNot","typeFullName":"ANY","resolvedMethod":"<operator>.logicalNot","isExternal":true,"lineNumber":646,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.formatString","typeFullName":"ANY","resolvedMethod":"<operator>.formatString","isExternal":true,"lineNumber":74,"columnNumber":32,"label":"CALL"},"definedBy":{"name":"<operator>.formatString","typeFullName":"ANY","resolvedMethod":"<operator>.formatString","isExternal":true,"lineNumber":74,"columnNumber":32,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.fieldAccess","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":true,"lineNumber":75,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"<operator>.fieldAccess","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":true,"lineNumber":75,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.alloc","typeFullName":"ANY","resolvedMethod":"<operator>.alloc","isExternal":true,"lineNumber":23,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"<operator>.alloc","typeFullName":"ANY","resolvedMethod":"<operator>.alloc","isExternal":true,"lineNumber":23,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"constructor(owner, repo)","typeFullName":"ANY","lineNumber":10,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"constructor(owner, repo)","typeFullName":"ANY","lineNumber":10,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.assignment","typeFullName":"ANY","resolvedMethod":"<operator>.assignment","isExternal":true,"lineNumber":72,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"<operator>.assignment","typeFullName":"ANY","resolvedMethod":"<operator>.assignment","isExternal":true,"lineNumber":72,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:appendLabels","signature":"","fileName":"bin/GithubAPI.js","lineNumber":42,"columnNumber":2,"usages":[{"targetObj":{"name":"async appendLabels(issue, labels)","typeFullName":"ANY","lineNumber":42,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async appendLabels(issue, labels)","typeFullName":"ANY","lineNumber":42,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:closeIssue","signature":"","fileName":"bin/GithubAPI.js","lineNumber":78,"columnNumber":2,"usages":[{"targetObj":{"name":"async closeIssue(issue)","typeFullName":"ANY","lineNumber":78,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async closeIssue(issue)","typeFullName":"ANY","lineNumber":78,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"issue","typeFullName":"ANY","position":1,"lineNumber":78,"columnNumber":19,"label":"PARAM"},"definedBy":{"name":"issue","typeFullName":"ANY","position":1,"lineNumber":78,"columnNumber":19,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"updateIssue","resolvedMethod":"this.updateIssue","paramTypes":["ANY","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":79,"columnNumber":11}]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:createComment","signature":"","fileName":"bin/GithubAPI.js","lineNumber":26,"columnNumber":2,"usages":[{"targetObj":{"name":"async createComment(issue, body)","typeFullName":"ANY","lineNumber":26,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async createComment(issue, body)","typeFullName":"ANY","lineNumber":26,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.await","typeFullName":"ANY","resolvedMethod":"<operator>.await","isExternal":true,"lineNumber":61,"columnNumber":30,"label":"CALL"},"definedBy":{"name":"<operator>.await","typeFullName":"ANY","resolvedMethod":"<operator>.await","isExternal":true,"lineNumber":61,"columnNumber":30,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"post","typeFullName":"ANY","resolvedMethod":"bin/GithubAPI.js::program:<member>(axios):post","isExternal":true,"lineNumber":43,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"post","typeFullName":"ANY","resolvedMethod":"bin/GithubAPI.js::program:<member>(axios):post","isExternal":true,"lineNumber":43,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:deleteLabel","signature":"","fileName":"bin/GithubAPI.js","lineNumber":58,"columnNumber":2,"usages":[{"targetObj":{"name":"async deleteLabel(issue, label)","typeFullName":"ANY","lineNumber":58,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async deleteLabel(issue, label)","typeFullName":"ANY","lineNumber":58,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"delete","typeFullName":"ANY","resolvedMethod":"bin/GithubAPI.js::program:<member>(axios):delete","isExternal":true,"lineNumber":59,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"delete","typeFullName":"ANY","resolvedMethod":"bin/GithubAPI.js::program:<member>(axios):delete","isExternal":true,"lineNumber":59,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:getComment","signature":"","fileName":"bin/GithubAPI.js","lineNumber":34,"columnNumber":2,"usages":[{"targetObj":{"name":"async getComment(id)","typeFullName":"ANY","lineNumber":34,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async getComment(id)","typeFullName":"ANY","lineNumber":34,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:getComments","signature":"","fileName":"bin/GithubAPI.js","lineNumber":30,"columnNumber":2,"usages":[{"targetObj":{"name":"async getComments(issue, {desc = false, per_page= 100, page = 1} = {})","typeFullName":"ANY","lineNumber":30,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async getComments(issue, {desc = false, per_page= 100, page = 1} = {})","typeFullName":"ANY","lineNumber":30,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.conditional","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":true,"lineNumber":49,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"<operator>.conditional","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":true,"lineNumber":49,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"get","typeFullName":"ANY","resolvedMethod":"bin/GithubAPI.js::program:<member>(axios):get","isExternal":true,"lineNumber":93,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"get","typeFullName":"ANY","resolvedMethod":"bin/GithubAPI.js::program:<member>(axios):get","isExternal":true,"lineNumber":93,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.void","typeFullName":"ANY","resolvedMethod":"<operator>.void","isExternal":true,"lineNumber":615,"columnNumber":35,"label":"CALL"},"definedBy":{"name":"<operator>.void","typeFullName":"ANY","resolvedMethod":"<operator>.void","isExternal":true,"lineNumber":615,"columnNumber":35,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.equals","typeFullName":"ANY","resolvedMethod":"<operator>.equals","isExternal":true,"lineNumber":76,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"<operator>.equals","typeFullName":"ANY","resolvedMethod":"<operator>.equals","isExternal":true,"lineNumber":76,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:getIssue","signature":"","fileName":"bin/GithubAPI.js","lineNumber":62,"columnNumber":2,"usages":[{"targetObj":{"name":"async getIssue(issue)","typeFullName":"ANY","lineNumber":62,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async getIssue(issue)","typeFullName":"ANY","lineNumber":62,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:getIssues","signature":"","fileName":"bin/GithubAPI.js","lineNumber":70,"columnNumber":2,"usages":[{"targetObj":{"name":"async getIssues({state= 'open', labels, sort = 'created', desc = false, per_page = 100, page = 1})","typeFullName":"ANY","lineNumber":70,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async getIssues({state= 'open', labels, sort = 'created', desc = false, per_page = 100, page = 1})","typeFullName":"ANY","lineNumber":70,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:getLatestTag","signature":"","fileName":"bin/GithubAPI.js","lineNumber":109,"columnNumber":2,"usages":[{"targetObj":{"name":"static async getLatestTag()","typeFullName":"ANY","lineNumber":109,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"static async getLatestTag()","typeFullName":"ANY","lineNumber":109,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"stdout","typeFullName":"_tmp_37:stdout:<returnValue>:<member>(stdout)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_37.stdout","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":111,"columnNumber":13,"label":"CALL"},"invokedCalls":[{"callName":"split","resolvedMethod":"stdout.split","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":113,"columnNumber":13}],"argToCalls":[]},{"targetObj":{"name":"pop","typeFullName":"ANY","resolvedMethod":"_tmp_37:stdout:<returnValue>:<member>(stdout):split:<returnValue>:pop","isExternal":true,"lineNumber":113,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"pop","typeFullName":"ANY","resolvedMethod":"_tmp_37:stdout:<returnValue>:<member>(stdout):split:<returnValue>:pop","isExternal":true,"lineNumber":113,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"split","typeFullName":"ANY","resolvedMethod":"_tmp_37:stdout:<returnValue>:<member>(stdout):split","isExternal":true,"lineNumber":113,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"split","typeFullName":"ANY","resolvedMethod":"_tmp_37:stdout:<returnValue>:<member>(stdout):split","isExternal":true,"lineNumber":113,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:getPR","signature":"","fileName":"bin/GithubAPI.js","lineNumber":66,"columnNumber":2,"usages":[{"targetObj":{"name":"async getPR(issue)","typeFullName":"ANY","lineNumber":66,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async getPR(issue)","typeFullName":"ANY","lineNumber":66,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:getRelease","signature":"","fileName":"bin/GithubAPI.js","lineNumber":88,"columnNumber":2,"usages":[{"targetObj":{"name":"async getRelease(release = 'latest')","typeFullName":"ANY","lineNumber":88,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async getRelease(release = 'latest')","typeFullName":"ANY","lineNumber":88,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"release","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"release === void 0 ? \"latest\" : release","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":null,"lineNumber":88,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"parseVersion","resolvedMethod":"parseVersion","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":89,"columnNumber":33}]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:getReleases","signature":"","fileName":"bin/GithubAPI.js","lineNumber":84,"columnNumber":2,"usages":[{"targetObj":{"name":"async getReleases({per_page = 30, page= 1} = {})","typeFullName":"ANY","lineNumber":84,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async getReleases({per_page = 30, page= 1} = {})","typeFullName":"ANY","lineNumber":84,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:getTagRef","signature":"","fileName":"bin/GithubAPI.js","lineNumber":102,"columnNumber":2,"usages":[{"targetObj":{"name":"static async getTagRef(tag)","typeFullName":"ANY","lineNumber":102,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"static async getTagRef(tag)","typeFullName":"ANY","lineNumber":102,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.indexAccess","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":true,"lineNumber":702,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"<operator>.indexAccess","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":true,"lineNumber":702,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"","isExternal":true,"lineNumber":501,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"","isExternal":true,"lineNumber":501,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"exec","typeFullName":"ANY","resolvedMethod":"bin/GithubAPI.js::program:exec","isExternal":true,"lineNumber":111,"columnNumber":29,"label":"CALL"},"definedBy":{"name":"exec","typeFullName":"ANY","resolvedMethod":"bin/GithubAPI.js::program:exec","isExternal":true,"lineNumber":111,"columnNumber":29,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:getTags","signature":"","fileName":"bin/GithubAPI.js","lineNumber":92,"columnNumber":2,"usages":[{"targetObj":{"name":"async getTags({per_page = 30, page= 1} = {})","typeFullName":"ANY","lineNumber":92,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async getTags({per_page = 30, page= 1} = {})","typeFullName":"ANY","lineNumber":92,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:getUser","signature":"","fileName":"bin/GithubAPI.js","lineNumber":46,"columnNumber":2,"usages":[{"targetObj":{"name":"async getUser(user)","typeFullName":"ANY","lineNumber":46,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async getUser(user)","typeFullName":"ANY","lineNumber":46,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"get","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosInstance:get","isExternal":true,"lineNumber":38,"columnNumber":30,"label":"CALL"},"definedBy":{"name":"get","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosInstance:get","isExternal":true,"lineNumber":38,"columnNumber":30,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:isCollaborator","signature":"","fileName":"bin/GithubAPI.js","lineNumber":50,"columnNumber":2,"usages":[{"targetObj":{"name":"async isCollaborator(user)","typeFullName":"ANY","lineNumber":50,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async isCollaborator(user)","typeFullName":"ANY","lineNumber":50,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:normalizeTag","signature":"","fileName":"bin/GithubAPI.js","lineNumber":117,"columnNumber":2,"usages":[{"targetObj":{"name":"static normalizeTag(tag)","typeFullName":"ANY","lineNumber":117,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"static normalizeTag(tag)","typeFullName":"ANY","lineNumber":117,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":117,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":117,"columnNumber":22,"label":"PARAM"},"invokedCalls":[{"callName":"replace","resolvedMethod":"tag.replace","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":118,"columnNumber":23}],"argToCalls":[]},{"targetObj":{"name":"<operator>.addition","typeFullName":"ANY","resolvedMethod":"<operator>.addition","isExternal":true,"lineNumber":23,"columnNumber":14,"label":"CALL"},"definedBy":{"name":"<operator>.addition","typeFullName":"ANY","resolvedMethod":"<operator>.addition","isExternal":true,"lineNumber":23,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"__ecma.String:replace","isExternal":true,"lineNumber":222,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"__ecma.String:replace","isExternal":true,"lineNumber":222,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:reopenIssue","signature":"","fileName":"bin/GithubAPI.js","lineNumber":96,"columnNumber":2,"usages":[{"targetObj":{"name":"async reopenIssue(issue)","typeFullName":"ANY","lineNumber":96,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async reopenIssue(issue)","typeFullName":"ANY","lineNumber":96,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"issue","typeFullName":"ANY","position":1,"lineNumber":96,"columnNumber":20,"label":"PARAM"},"definedBy":{"name":"issue","typeFullName":"ANY","position":1,"lineNumber":96,"columnNumber":20,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"updateIssue","resolvedMethod":"this.updateIssue","paramTypes":["ANY","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":97,"columnNumber":11}]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:updateComment","signature":"","fileName":"bin/GithubAPI.js","lineNumber":38,"columnNumber":2,"usages":[{"targetObj":{"name":"async updateComment(id, body)","typeFullName":"ANY","lineNumber":38,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"async updateComment(id, body)","typeFullName":"ANY","lineNumber":38,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"patch","typeFullName":"ANY","resolvedMethod":"bin/GithubAPI.js::program:<member>(axios):patch","isExternal":true,"lineNumber":75,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"patch","typeFullName":"ANY","resolvedMethod":"bin/GithubAPI.js::program:<member>(axios):patch","isExternal":true,"lineNumber":75,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:GithubAPI:updateIssue","signature":"","fileName":"bin/GithubAPI.js","lineNumber":74,"columnNumber":2,"usages":[{"targetObj":{"name":"updateIssue","typeFullName":"Promise<any>","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:updateIssue","isExternal":false,"lineNumber":97,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"updateIssue","typeFullName":"Promise<any>","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:updateIssue","isExternal":false,"lineNumber":97,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"data","typeFullName":"ANY","position":2,"lineNumber":74,"columnNumber":27,"label":"PARAM"},"definedBy":{"name":"data","typeFullName":"ANY","position":2,"lineNumber":74,"columnNumber":27,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"patch","resolvedMethod":"this.axios.patch","paramTypes":["ANY","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":75,"columnNumber":18}]}]},{"code":"","fullName":"bin/GithubAPI.js::program:anonymous","signature":"","fileName":"bin/GithubAPI.js","lineNumber":124,"columnNumber":38,"usages":[{"targetObj":{"name":"methodName => { prototype[methodName] = memoize","typeFullName":"ANY","lineNumber":124,"columnNumber":38,"label":"UNKNOWN"},"definedBy":{"name":"methodName => { prototype[methodName] = memoize","typeFullName":"ANY","lineNumber":124,"columnNumber":38,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"memoize","typeFullName":"ANY","resolvedMethod":"memoizee:memoize","isExternal":true,"lineNumber":125,"columnNumber":26,"label":"CALL"},"definedBy":{"name":"memoize","typeFullName":"ANY","resolvedMethod":"memoizee:memoize","isExternal":true,"lineNumber":125,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:anonymous1","signature":"","fileName":"bin/GithubAPI.js","lineNumber":128,"columnNumber":57,"usages":[{"targetObj":{"name":"(method)","typeFullName":"ANY","lineNumber":128,"columnNumber":57,"label":"UNKNOWN"},"definedBy":{"name":"(method)","typeFullName":"ANY","lineNumber":128,"columnNumber":57,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/GithubAPI.js::program:anonymous1:anonymous","signature":"","fileName":"bin/GithubAPI.js","lineNumber":128,"columnNumber":89,"usages":[{"targetObj":{"name":"function(...args)","typeFullName":"ANY","lineNumber":128,"columnNumber":89,"label":"UNKNOWN"},"definedBy":{"name":"function(...args)","typeFullName":"ANY","lineNumber":128,"columnNumber":89,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.spread","typeFullName":"ANY","resolvedMethod":"<operator>.spread","isExternal":true,"lineNumber":6,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"<operator>.spread","typeFullName":"ANY","resolvedMethod":"<operator>.spread","isExternal":true,"lineNumber":6,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"method","typeFullName":"ANY","resolvedMethod":"bin/GithubAPI.js::program:<member>(axios):method","isExternal":true,"lineNumber":129,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"method","typeFullName":"ANY","resolvedMethod":"bin/GithubAPI.js::program:<member>(axios):method","isExternal":true,"lineNumber":129,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/RepoBot.js::program","signature":"","fileName":"bin/RepoBot.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"dirname","typeFullName":"ANY","resolvedMethod":"path:path:dirname","isExternal":true,"lineNumber":8,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"dirname","typeFullName":"ANY","resolvedMethod":"path:path:dirname","isExternal":true,"lineNumber":8,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"__dirname","typeFullName":"path:path:dirname:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"path.dirname","typeFullName":"ANY","resolvedMethod":"path:path:dirname","isExternal":null,"lineNumber":10,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"resolve","resolvedMethod":"path.resolve","paramTypes":["path:path:dirname:<returnValue>","__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":12,"columnNumber":27}]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:require","isExternal":true,"lineNumber":8,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:require","isExternal":true,"lineNumber":8,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"path","typeFullName":"path:path","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:require","isExternal":null,"lineNumber":7,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"dirname","resolvedMethod":"path.dirname","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":10,"columnNumber":18},{"callName":"resolve","resolvedMethod":"path.resolve","paramTypes":["path:path:dirname:<returnValue>","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":12,"columnNumber":27}],"argToCalls":[]},{"targetObj":{"name":"fileURLToPath","typeFullName":"ANY","resolvedMethod":"url:fileURLToPath","isExternal":true,"lineNumber":8,"columnNumber":31,"label":"CALL"},"definedBy":{"name":"fileURLToPath","typeFullName":"ANY","resolvedMethod":"url:fileURLToPath","isExternal":true,"lineNumber":8,"columnNumber":31,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"resolve","typeFullName":"ANY","resolvedMethod":"path:path:resolve","isExternal":true,"lineNumber":14,"columnNumber":32,"label":"CALL"},"definedBy":{"name":"resolve","typeFullName":"ANY","resolvedMethod":"path:path:resolve","isExternal":true,"lineNumber":14,"columnNumber":32,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/RepoBot.js::program:RepoBot:<init>","signature":"","fileName":"bin/RepoBot.js","lineNumber":21,"columnNumber":2,"usages":[{"targetObj":{"name":"constructor(options)","typeFullName":"ANY","lineNumber":21,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"constructor(options)","typeFullName":"ANY","lineNumber":21,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"templates","typeFullName":"Object.assign","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_1.templates","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":24,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"assign","resolvedMethod":"Object.assign","paramTypes":["ANY","Object.assign"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":27,"columnNumber":21}]},{"targetObj":{"name":"<operator>.logicalOr","typeFullName":"ANY","resolvedMethod":"<operator>.logicalOr","isExternal":true,"lineNumber":698,"columnNumber":35,"label":"CALL"},"definedBy":{"name":"<operator>.logicalOr","typeFullName":"ANY","resolvedMethod":"<operator>.logicalOr","isExternal":true,"lineNumber":698,"columnNumber":35,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"assign","typeFullName":"ANY","resolvedMethod":"Object.assign","isExternal":true,"lineNumber":384,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"assign","typeFullName":"ANY","resolvedMethod":"Object.assign","isExternal":true,"lineNumber":384,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/RepoBot.js::program:RepoBot:addComment","signature":"","fileName":"bin/RepoBot.js","lineNumber":37,"columnNumber":2,"usages":[{"targetObj":{"name":"addComment","typeFullName":"Promise<any>","resolvedMethod":"bin/RepoBot.js::program:RepoBot:addComment","isExternal":false,"lineNumber":94,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"addComment","typeFullName":"Promise<any>","resolvedMethod":"bin/RepoBot.js::program:RepoBot:addComment","isExternal":false,"lineNumber":94,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"targetId","typeFullName":"ANY","position":1,"lineNumber":37,"columnNumber":19,"label":"PARAM"},"definedBy":{"name":"targetId","typeFullName":"ANY","position":1,"lineNumber":37,"columnNumber":19,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"createComment","resolvedMethod":"this.github.createComment","paramTypes":["ANY","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":38,"columnNumber":11}]},{"targetObj":{"name":"message","typeFullName":"ANY","position":2,"lineNumber":37,"columnNumber":29,"label":"PARAM"},"definedBy":{"name":"message","typeFullName":"ANY","position":2,"lineNumber":37,"columnNumber":29,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"createComment","resolvedMethod":"this.github.createComment","paramTypes":["ANY","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":38,"columnNumber":11}]},{"targetObj":{"name":"createComment","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:<member>(github):createComment","isExternal":true,"lineNumber":38,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"createComment","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:<member>(github):createComment","isExternal":true,"lineNumber":38,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/RepoBot.js::program:RepoBot:notifyPRPublished","signature":"","fileName":"bin/RepoBot.js","lineNumber":41,"columnNumber":2,"usages":[{"targetObj":{"name":"notifyPRPublished","typeFullName":"__ecma.Boolean","resolvedMethod":"bin/RepoBot.js::program:RepoBot:notifyPRPublished","isExternal":false,"lineNumber":115,"columnNumber":29,"label":"CALL"},"definedBy":{"name":"notifyPRPublished","typeFullName":"__ecma.Boolean","resolvedMethod":"bin/RepoBot.js::program:RepoBot:notifyPRPublished","isExternal":false,"lineNumber":115,"columnNumber":29,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"renderTemplate","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:<member>(constructor):renderTemplate","isExternal":true,"lineNumber":85,"columnNumber":26,"label":"CALL"},"definedBy":{"name":"renderTemplate","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:<member>(constructor):renderTemplate","isExternal":true,"lineNumber":85,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"tag","typeFullName":"ANY","position":2,"lineNumber":41,"columnNumber":30,"label":"PARAM"},"definedBy":{"name":"tag","typeFullName":"ANY","position":2,"lineNumber":41,"columnNumber":30,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"normalizeTag","resolvedMethod":"normalizeTag","paramTypes":["__ecma.String:<operator>.conditional:<returnValue>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":54,"columnNumber":10},{"callName":"","resolvedMethod":"_tmp_10.push","paramTypes":["__ecma.String:<operator>.conditional:<returnValue>"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":64,"columnNumber":40}]},{"targetObj":{"name":"id","typeFullName":"ANY","position":1,"lineNumber":41,"columnNumber":26,"label":"PARAM"},"definedBy":{"name":"id","typeFullName":"ANY","position":1,"lineNumber":41,"columnNumber":26,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"getPR","resolvedMethod":"this.github.getPR","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":45,"columnNumber":17},{"callName":"appendLabels","resolvedMethod":"this.github.appendLabels","paramTypes":["ANY","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":64,"columnNumber":10},{"callName":"getComments","resolvedMethod":"this.github.getComments","paramTypes":["ANY","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":70,"columnNumber":27},{"callName":"addComment","resolvedMethod":"this.addComment","paramTypes":["ANY","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":94,"columnNumber":17}]},{"targetObj":{"name":"appendLabels","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:<member>(github):appendLabels","isExternal":true,"lineNumber":64,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"appendLabels","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:<member>(github):appendLabels","isExternal":true,"lineNumber":64,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"find","typeFullName":"ANY","resolvedMethod":"_tmp_7:labels:<returnValue>:<member>(labels):find","isExternal":true,"lineNumber":66,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"find","typeFullName":"ANY","resolvedMethod":"_tmp_7:labels:<returnValue>:<member>(labels):find","isExternal":true,"lineNumber":66,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"colorize()","typeFullName":"ANY","resolvedMethod":"colorize()","isExternal":true,"lineNumber":50,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"colorize()","typeFullName":"ANY","resolvedMethod":"colorize()","isExternal":true,"lineNumber":50,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"log","typeFullName":"ANY","resolvedMethod":"__whatwg.console:log","isExternal":true,"lineNumber":74,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"log","typeFullName":"ANY","resolvedMethod":"__whatwg.console:log","isExternal":true,"lineNumber":74,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"comments","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"await this.github.getComments","typeFullName":"ANY","resolvedMethod":"<operator>.await","isExternal":null,"lineNumber":70,"columnNumber":21,"label":"CALL"},"invokedCalls":[{"callName":"find","resolvedMethod":"comments.find","paramTypes":["LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":72,"columnNumber":20}],"argToCalls":[]},{"targetObj":{"name":"find","typeFullName":"ANY","resolvedMethod":"comments.find","isExternal":true,"lineNumber":72,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"find","typeFullName":"ANY","resolvedMethod":"comments.find","isExternal":true,"lineNumber":72,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"labels","typeFullName":"_tmp_7:labels:<returnValue>:<member>(labels)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_7.labels","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":56,"columnNumber":19,"label":"CALL"},"invokedCalls":[{"callName":"find","resolvedMethod":"labels.find","paramTypes":["LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":66,"columnNumber":17}],"argToCalls":[]},{"targetObj":{"name":"isCollaborator","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:<member>(github):isCollaborator","isExternal":true,"lineNumber":66,"columnNumber":99,"label":"CALL"},"definedBy":{"name":"isCollaborator","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:<member>(github):isCollaborator","isExternal":true,"lineNumber":66,"columnNumber":99,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getUser","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:<member>(github):getUser","isExternal":true,"lineNumber":81,"columnNumber":25,"label":"CALL"},"definedBy":{"name":"getUser","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:<member>(github):getUser","isExternal":true,"lineNumber":81,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"message","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"await this.constructor.renderTemplate","typeFullName":"ANY","resolvedMethod":"<operator>.await","isExternal":null,"lineNumber":85,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"addComment","resolvedMethod":"this.addComment","paramTypes":["ANY","ANY"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":94,"columnNumber":17}]},{"targetObj":{"name":"getComments","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:<member>(github):getComments","isExternal":true,"lineNumber":70,"columnNumber":27,"label":"CALL"},"definedBy":{"name":"getComments","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:<member>(github):getComments","isExternal":true,"lineNumber":70,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getPR","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:<member>(github):getPR","isExternal":true,"lineNumber":45,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"getPR","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:<member>(github):getPR","isExternal":true,"lineNumber":45,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/RepoBot.js::program:RepoBot:notifyPRPublished:anonymous","signature":"","fileName":"bin/RepoBot.js","lineNumber":66,"columnNumber":29,"usages":[{"targetObj":{"name":"({name})","typeFullName":"ANY","lineNumber":66,"columnNumber":29,"label":"UNKNOWN"},"definedBy":{"name":"({name})","typeFullName":"ANY","lineNumber":66,"columnNumber":29,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/RepoBot.js::program:RepoBot:notifyPRPublished:anonymous1","signature":"","fileName":"bin/RepoBot.js","lineNumber":73,"columnNumber":6,"usages":[{"targetObj":{"name":"<operator>.logicalAnd","typeFullName":"ANY","resolvedMethod":"<operator>.logicalAnd","isExternal":true,"lineNumber":698,"columnNumber":35,"label":"CALL"},"definedBy":{"name":"<operator>.logicalAnd","typeFullName":"ANY","resolvedMethod":"<operator>.logicalAnd","isExternal":true,"lineNumber":698,"columnNumber":35,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:indexOf","isExternal":true,"lineNumber":81,"columnNumber":51,"label":"CALL"},"definedBy":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:indexOf","isExternal":true,"lineNumber":81,"columnNumber":51,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"body","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"param1_1.body","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":73,"columnNumber":8,"label":"CALL"},"invokedCalls":[{"callName":"indexOf","resolvedMethod":"body.indexOf","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":73,"columnNumber":59}],"argToCalls":[]},{"targetObj":{"name":"({body, user})","typeFullName":"ANY","lineNumber":73,"columnNumber":6,"label":"UNKNOWN"},"definedBy":{"name":"({body, user})","typeFullName":"ANY","lineNumber":73,"columnNumber":6,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.greaterEqualsThan","typeFullName":"ANY","resolvedMethod":"<operator>.greaterEqualsThan","isExternal":true,"lineNumber":642,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"<operator>.greaterEqualsThan","typeFullName":"ANY","resolvedMethod":"<operator>.greaterEqualsThan","isExternal":true,"lineNumber":642,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/RepoBot.js::program:RepoBot:notifyPublishedPRs","signature":"","fileName":"bin/RepoBot.js","lineNumber":97,"columnNumber":2,"usages":[{"targetObj":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":97,"columnNumber":27,"label":"PARAM"},"definedBy":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":97,"columnNumber":27,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"normalizeTag","resolvedMethod":"normalizeTag","paramTypes":["__ecma.String:<operator>.conditional:<returnValue>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":98,"columnNumber":10},{"callName":"getReleaseInfo","resolvedMethod":"getReleaseInfo","paramTypes":["__ecma.String:<operator>.conditional:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":100,"columnNumber":26},{"callName":"notifyPRPublished","resolvedMethod":"this.notifyPRPublished","paramTypes":["ANY","__ecma.String:<operator>.conditional:<returnValue>"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":115,"columnNumber":29}]},{"targetObj":{"name":"<operator>.not","typeFullName":"ANY","resolvedMethod":"<operator>.not","isExternal":true,"lineNumber":21,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"<operator>.not","typeFullName":"ANY","resolvedMethod":"<operator>.not","isExternal":true,"lineNumber":21,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getReleaseInfo","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:getReleaseInfo","isExternal":true,"lineNumber":100,"columnNumber":26,"label":"CALL"},"definedBy":{"name":"getReleaseInfo","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:getReleaseInfo","isExternal":true,"lineNumber":100,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"colorize('green', 'red')","typeFullName":"ANY","resolvedMethod":"colorize('green', 'red')","isExternal":true,"lineNumber":118,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"colorize('green', 'red')","typeFullName":"ANY","resolvedMethod":"colorize('green', 'red')","isExternal":true,"lineNumber":118,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"warn","typeFullName":"ANY","resolvedMethod":"__whatwg.console:warn","isExternal":true,"lineNumber":58,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"warn","typeFullName":"ANY","resolvedMethod":"__whatwg.console:warn","isExternal":true,"lineNumber":58,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"Error","typeFullName":"ANY","resolvedMethod":"Error","isExternal":true,"lineNumber":579,"columnNumber":14,"label":"CALL"},"definedBy":{"name":"Error","typeFullName":"ANY","resolvedMethod":"Error","isExternal":true,"lineNumber":579,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.iterator","typeFullName":"ANY","resolvedMethod":"<operator>.iterator","isExternal":true,"lineNumber":21,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"<operator>.iterator","typeFullName":"ANY","resolvedMethod":"<operator>.iterator","isExternal":true,"lineNumber":21,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"next","typeFullName":"ANY","resolvedMethod":"_iterator_0.next","isExternal":true,"lineNumber":21,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"next","typeFullName":"ANY","resolvedMethod":"_iterator_0.next","isExternal":true,"lineNumber":21,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"notifyPublishedPRs","typeFullName":"Promise<void>","resolvedMethod":"bin/RepoBot.js::program:RepoBot:notifyPublishedPRs","isExternal":false,"lineNumber":23,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"notifyPublishedPRs","typeFullName":"Promise<void>","resolvedMethod":"bin/RepoBot.js::program:RepoBot:notifyPublishedPRs","isExternal":false,"lineNumber":23,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.postIncrement","typeFullName":"ANY","resolvedMethod":"<operator>.postIncrement","isExternal":true,"lineNumber":618,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"<operator>.postIncrement","typeFullName":"ANY","resolvedMethod":"<operator>.postIncrement","isExternal":true,"lineNumber":618,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/RepoBot.js::program:RepoBot:renderTemplate","signature":"","fileName":"bin/RepoBot.js","lineNumber":123,"columnNumber":2,"usages":[{"targetObj":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"String","isExternal":true,"lineNumber":9,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"String","isExternal":true,"lineNumber":9,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"readFile","typeFullName":"ANY","resolvedMethod":"fs/promises:fs:readFile","isExternal":true,"lineNumber":30,"columnNumber":27,"label":"CALL"},"definedBy":{"name":"readFile","typeFullName":"ANY","resolvedMethod":"fs/promises:fs:readFile","isExternal":true,"lineNumber":30,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"compile","typeFullName":"ANY","resolvedMethod":"handlebars:Handlebars:compile","isExternal":true,"lineNumber":33,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"compile","typeFullName":"ANY","resolvedMethod":"handlebars:Handlebars:compile","isExternal":true,"lineNumber":33,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"data","typeFullName":"ANY","position":2,"lineNumber":123,"columnNumber":40,"label":"PARAM"},"definedBy":{"name":"data","typeFullName":"ANY","position":2,"lineNumber":123,"columnNumber":40,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"Handlebars.compile(String(await fs.readFile(template)))","resolvedMethod":"Handlebars.compile","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":124,"columnNumber":11}]},{"targetObj":{"name":"static async renderTemplate(template, data)","typeFullName":"ANY","lineNumber":123,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"static async renderTemplate(template, data)","typeFullName":"ANY","lineNumber":123,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"Handlebars.compile(String(await fs.readFile(template)))","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:Handlebars.compile(String(await fs.readFile(template)))","isExternal":true,"lineNumber":124,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"Handlebars.compile(String(await fs.readFile(template)))","typeFullName":"ANY","resolvedMethod":"bin/RepoBot.js::program:Handlebars.compile(String(await fs.readFile(template)))","isExternal":true,"lineNumber":124,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"template","typeFullName":"ANY","position":1,"lineNumber":123,"columnNumber":30,"label":"PARAM"},"definedBy":{"name":"template","typeFullName":"ANY","position":1,"lineNumber":123,"columnNumber":30,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":124,"columnNumber":43}]}]},{"code":"","fullName":"bin/RepoBot.js::program:normalizeTag","signature":"","fileName":"bin/RepoBot.js","lineNumber":14,"columnNumber":21,"usages":[{"targetObj":{"name":"normalizeTag","typeFullName":"__ecma.String","resolvedMethod":"bin/RepoBot.js::program:normalizeTag","isExternal":false,"lineNumber":98,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"normalizeTag","typeFullName":"__ecma.String","resolvedMethod":"bin/RepoBot.js::program:normalizeTag","isExternal":false,"lineNumber":98,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":14,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":14,"columnNumber":22,"label":"PARAM"},"invokedCalls":[{"callName":"replace","resolvedMethod":"tag.replace","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":14,"columnNumber":42}],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"__ecma.String:<operator>.conditional:<returnValue>:replace","isExternal":true,"lineNumber":14,"columnNumber":42,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"__ecma.String:<operator>.conditional:<returnValue>:replace","isExternal":true,"lineNumber":14,"columnNumber":42,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/actions/notify_published.js::program","signature":"","fileName":"bin/actions/notify_published.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"minimist","typeFullName":"ANY","resolvedMethod":"minimist:minimist","isExternal":true,"lineNumber":6,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"minimist","typeFullName":"ANY","resolvedMethod":"minimist:minimist","isExternal":true,"lineNumber":6,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"fs","typeFullName":"fs/promises:fs","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/actions/notify_published.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":12,"columnNumber":40}],"argToCalls":[]},{"targetObj":{"name":"slice","typeFullName":"ANY","resolvedMethod":"minimist:minimist:<returnValue>:slice","isExternal":true,"lineNumber":6,"columnNumber":22,"label":"CALL"},"definedBy":{"name":"slice","typeFullName":"ANY","resolvedMethod":"minimist:minimist:<returnValue>:slice","isExternal":true,"lineNumber":6,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"tag","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_1.tag","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":8,"columnNumber":5,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"notifyPublishedPRs","resolvedMethod":"bot.notifyPublishedPRs","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":23,"columnNumber":10}]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"argv","typeFullName":"minimist:minimist:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"minimist","typeFullName":"ANY","resolvedMethod":"minimist:minimist","isExternal":null,"lineNumber":5,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"log","resolvedMethod":"console.log","paramTypes":["minimist:minimist:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":6,"columnNumber":0}]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/actions/notify_published.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/actions/notify_published.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/actions/notify_published.js::program:anonymous","signature":"","fileName":"bin/actions/notify_published.js","lineNumber":10,"columnNumber":1,"usages":[{"targetObj":{"name":"<operator>.instanceOf","typeFullName":"ANY","resolvedMethod":"<operator>.instanceOf","isExternal":true,"lineNumber":698,"columnNumber":35,"label":"CALL"},"definedBy":{"name":"<operator>.instanceOf","typeFullName":"ANY","resolvedMethod":"<operator>.instanceOf","isExternal":true,"lineNumber":698,"columnNumber":35,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"bot","typeFullName":"bin/RepoBot.js::program:RepoBot","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new RepoBot","typeFullName":"bin/RepoBot.js::program:RepoBot","resolvedMethod":"bin/RepoBot.js::program:RepoBot","isExternal":null,"lineNumber":20,"columnNumber":14,"label":"CALL"},"invokedCalls":[{"callName":"notifyPublishedPRs","resolvedMethod":"bot.notifyPublishedPRs","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":false,"lineNumber":23,"columnNumber":10}],"argToCalls":[{"callName":"RepoBot","resolvedMethod":"RepoBot","paramTypes":[],"returnType":"bin/RepoBot.js::program:RepoBot","position":1,"isExternal":true,"lineNumber":20,"columnNumber":8}]},{"targetObj":{"name":"parse","typeFullName":"ANY","resolvedMethod":"JSON.parse","isExternal":true,"lineNumber":49,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"parse","typeFullName":"ANY","resolvedMethod":"JSON.parse","isExternal":true,"lineNumber":49,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"anonymous","typeFullName":"ANY","resolvedMethod":"bin/actions/notify_published.js::program:anonymous","isExternal":false,"lineNumber":10,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"anonymous","typeFullName":"ANY","resolvedMethod":"bin/actions/notify_published.js::program:anonymous","isExternal":false,"lineNumber":10,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"tag","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"'v' + version","typeFullName":"ANY","resolvedMethod":"<operator>.addition","isExternal":null,"lineNumber":14,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"notifyPublishedPRs","resolvedMethod":"bot.notifyPublishedPRs","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":23,"columnNumber":10}]},{"targetObj":{"name":"<operator>.notEquals","typeFullName":"ANY","resolvedMethod":"<operator>.notEquals","isExternal":true,"lineNumber":698,"columnNumber":35,"label":"CALL"},"definedBy":{"name":"<operator>.notEquals","typeFullName":"ANY","resolvedMethod":"<operator>.notEquals","isExternal":true,"lineNumber":698,"columnNumber":35,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/api.js::program","signature":"","fileName":"bin/api.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/api.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/api.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/check-build-version.js::program","signature":"","fileName":"bin/check-build-version.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"version","typeFullName":"JSON.parse:<returnValue>:<member>(version)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_0.version","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":6,"columnNumber":7,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"strictEqual","resolvedMethod":"assert.strictEqual","paramTypes":["JSON.parse:<returnValue>:<member>(version)","ANY","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":15,"columnNumber":0},{"callName":"strictEqual","resolvedMethod":"assert.strictEqual","paramTypes":["JSON.parse:<returnValue>:<member>(version)","ANY","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":21,"columnNumber":0}]},{"targetObj":{"name":"strictEqual","typeFullName":"ANY","resolvedMethod":"assert:assert:strictEqual","isExternal":true,"lineNumber":21,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"strictEqual","typeFullName":"ANY","resolvedMethod":"assert:assert:strictEqual","isExternal":true,"lineNumber":21,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"fs","typeFullName":"fs:fs","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/check-build-version.js::program:require","isExternal":null,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"readFileSync","resolvedMethod":"fs.readFileSync","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":6,"columnNumber":29}],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"readFileSync","typeFullName":"ANY","resolvedMethod":"fs:fs:readFileSync","isExternal":true,"lineNumber":5,"columnNumber":29,"label":"CALL"},"definedBy":{"name":"readFileSync","typeFullName":"ANY","resolvedMethod":"fs:fs:readFileSync","isExternal":true,"lineNumber":5,"columnNumber":29,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"assert","typeFullName":"assert:assert","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/check-build-version.js::program:require","isExternal":null,"lineNumber":2,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"strictEqual","resolvedMethod":"assert.strictEqual","paramTypes":["JSON.parse:<returnValue>:<member>(version)","ANY","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":15,"columnNumber":0},{"callName":"strictEqual","resolvedMethod":"assert.strictEqual","paramTypes":["JSON.parse:<returnValue>:<member>(version)","ANY","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":21,"columnNumber":0}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/check-build-version.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/check-build-version.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program","signature":"","fileName":"bin/contributors.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:require","isExternal":true,"lineNumber":6,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:require","isExternal":true,"lineNumber":6,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"util","typeFullName":"util:util","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:require","isExternal":null,"lineNumber":2,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"promisify","resolvedMethod":"util.promisify","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":8,"columnNumber":13}],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"fs","typeFullName":"fs/promises:fs","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:require","isExternal":null,"lineNumber":5,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":182,"columnNumber":50},{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":222,"columnNumber":50}],"argToCalls":[]},{"targetObj":{"name":"axios","typeFullName":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosInstance","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:require","isExternal":null,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"get","resolvedMethod":"axios.get","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":28,"columnNumber":25},{"callName":"get","resolvedMethod":"axios.get","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":46,"columnNumber":25}],"argToCalls":[]},{"targetObj":{"name":"Handlebars","typeFullName":"handlebars:Handlebars","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:require","isExternal":null,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"compile","resolvedMethod":"Handlebars.compile","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":182,"columnNumber":18},{"callName":"compile","resolvedMethod":"Handlebars.compile","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":222,"columnNumber":18}],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:anonymous2","signature":"","fileName":"bin/contributors.js","lineNumber":20,"columnNumber":27,"usages":[{"targetObj":{"name":"anonymous2","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:anonymous2","isExternal":false,"lineNumber":20,"columnNumber":26,"label":"CALL"},"definedBy":{"name":"anonymous2","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:anonymous2","isExternal":false,"lineNumber":20,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:anonymous2:anonymous","signature":"","fileName":"bin/contributors.js","lineNumber":20,"columnNumber":44,"usages":[{"targetObj":{"name":"async (sha)","typeFullName":"ANY","lineNumber":20,"columnNumber":44,"label":"UNKNOWN"},"definedBy":{"name":"async (sha)","typeFullName":"ANY","lineNumber":20,"columnNumber":44,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:anonymous3","signature":"","fileName":"bin/contributors.js","lineNumber":40,"columnNumber":22,"usages":[{"targetObj":{"name":"anonymous3","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:anonymous3","isExternal":false,"lineNumber":40,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"anonymous3","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:anonymous3","isExternal":false,"lineNumber":40,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:anonymous3:anonymous","signature":"","fileName":"bin/contributors.js","lineNumber":40,"columnNumber":33,"usages":[{"targetObj":{"name":"async (id)","typeFullName":"ANY","lineNumber":40,"columnNumber":33,"label":"UNKNOWN"},"definedBy":{"name":"async (id)","typeFullName":"ANY","lineNumber":40,"columnNumber":33,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:anonymous4","signature":"","fileName":"bin/contributors.js","lineNumber":54,"columnNumber":21,"usages":[{"targetObj":{"name":"anonymous4","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:anonymous4","isExternal":false,"lineNumber":54,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"anonymous4","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:anonymous4","isExternal":false,"lineNumber":54,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:anonymous4:anonymous","signature":"","fileName":"bin/contributors.js","lineNumber":54,"columnNumber":36,"usages":[{"targetObj":{"name":"async (userEntry)","typeFullName":"ANY","lineNumber":54,"columnNumber":36,"label":"UNKNOWN"},"definedBy":{"name":"async (userEntry)","typeFullName":"ANY","lineNumber":54,"columnNumber":36,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getUserFromCommit","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:getUserFromCommit","isExternal":true,"lineNumber":65,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"getUserFromCommit","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:getUserFromCommit","isExternal":true,"lineNumber":65,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:anonymous5:assign","signature":"","fileName":"bin/contributors.js","lineNumber":73,"columnNumber":17,"usages":[{"targetObj":{"name":"assign","typeFullName":"void","resolvedMethod":"bin/contributors.js::program:anonymous5:assign","isExternal":false,"lineNumber":88,"columnNumber":7,"label":"CALL"},"definedBy":{"name":"assign","typeFullName":"void","resolvedMethod":"bin/contributors.js::program:anonymous5:assign","isExternal":false,"lineNumber":88,"columnNumber":7,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"a","typeFullName":"ANY","position":1,"lineNumber":73,"columnNumber":18,"label":"PARAM"},"definedBy":{"name":"a","typeFullName":"ANY","position":1,"lineNumber":73,"columnNumber":18,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"assign","resolvedMethod":"Object.assign","paramTypes":["ANY","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":76,"columnNumber":4}]},{"targetObj":{"name":"<operator>.assignmentPlus","typeFullName":"ANY","resolvedMethod":"<operator>.assignmentPlus","isExternal":true,"lineNumber":41,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"<operator>.assignmentPlus","typeFullName":"ANY","resolvedMethod":"<operator>.assignmentPlus","isExternal":true,"lineNumber":41,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:anonymous6","signature":"","fileName":"bin/contributors.js","lineNumber":98,"columnNumber":24,"usages":[{"targetObj":{"name":"anonymous6","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:anonymous6","isExternal":false,"lineNumber":98,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"anonymous6","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:anonymous6","isExternal":false,"lineNumber":98,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:anonymous6:anonymous","signature":"","fileName":"bin/contributors.js","lineNumber":98,"columnNumber":42,"usages":[{"targetObj":{"name":"values","typeFullName":"ANY","resolvedMethod":"Object.values","isExternal":true,"lineNumber":220,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"values","typeFullName":"ANY","resolvedMethod":"Object.values","isExternal":true,"lineNumber":220,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":98,"columnNumber":49,"label":"PARAM"},"definedBy":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":98,"columnNumber":49,"label":"PARAM"},"invokedCalls":[{"callName":"replace","resolvedMethod":"tag.replace","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":105,"columnNumber":24}],"argToCalls":[]},{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"Array<any>:<member>(merges):map","isExternal":true,"lineNumber":125,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"Array<any>:<member>(merges):map","isExternal":true,"lineNumber":125,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"push","typeFullName":"ANY","resolvedMethod":"Array<any>:push","isExternal":true,"lineNumber":688,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"push","typeFullName":"ANY","resolvedMethod":"Array<any>:push","isExternal":true,"lineNumber":688,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"pr","typeFullName":"object:<indexAccess>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"commitMergeMap[hash]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":147,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"push","resolvedMethod":"entry.prs.push","paramTypes":["object:<indexAccess>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":148,"columnNumber":8}]},{"targetObj":{"name":"next","typeFullName":"ANY","resolvedMethod":"_iterator_1.next","isExternal":true,"lineNumber":130,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"next","typeFullName":"ANY","resolvedMethod":"_iterator_1.next","isExternal":true,"lineNumber":130,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"encodeURIComponent","isExternal":true,"lineNumber":15,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"encodeURIComponent","isExternal":true,"lineNumber":15,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"next","typeFullName":"ANY","resolvedMethod":"_iterator_2.next","isExternal":true,"lineNumber":134,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"next","typeFullName":"ANY","resolvedMethod":"_iterator_2.next","isExternal":true,"lineNumber":134,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"sort","typeFullName":"ANY","resolvedMethod":"Object.values:<returnValue>:sort","isExternal":true,"lineNumber":168,"columnNumber":22,"label":"CALL"},"definedBy":{"name":"sort","typeFullName":"ANY","resolvedMethod":"Object.values:<returnValue>:sort","isExternal":true,"lineNumber":168,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"Array<any>:<member>(fixes):map","isExternal":true,"lineNumber":124,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"Array<any>:<member>(fixes):map","isExternal":true,"lineNumber":124,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"push","typeFullName":"ANY","resolvedMethod":"__ecma.Array:filter:<returnValue>:push","isExternal":true,"lineNumber":143,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"push","typeFullName":"ANY","resolvedMethod":"__ecma.Array:filter:<returnValue>:push","isExternal":true,"lineNumber":143,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"filter","typeFullName":"ANY","resolvedMethod":"__ecma.Array:filter","isExternal":true,"lineNumber":122,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"filter","typeFullName":"ANY","resolvedMethod":"__ecma.Array:filter","isExternal":true,"lineNumber":122,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"next","typeFullName":"ANY","resolvedMethod":"_iterator_3.next","isExternal":true,"lineNumber":162,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"next","typeFullName":"ANY","resolvedMethod":"_iterator_3.next","isExternal":true,"lineNumber":162,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"tag.replace","isExternal":true,"lineNumber":105,"columnNumber":24,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"tag.replace","isExternal":true,"lineNumber":105,"columnNumber":24,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"push","typeFullName":"ANY","resolvedMethod":"object:push","isExternal":true,"lineNumber":148,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"push","typeFullName":"ANY","resolvedMethod":"object:push","isExternal":true,"lineNumber":148,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getUserInfo","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:getUserInfo","isExternal":true,"lineNumber":163,"columnNumber":43,"label":"CALL"},"definedBy":{"name":"getUserInfo","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:getUserInfo","isExternal":true,"lineNumber":163,"columnNumber":43,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"stdout","typeFullName":"_tmp_16:stdout:<returnValue>:<member>(stdout)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_16.stdout","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":115,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"parse","resolvedMethod":"JSON.parse","paramTypes":["_tmp_16:stdout:<returnValue>:<member>(stdout)"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":117,"columnNumber":18}]},{"targetObj":{"name":"<operator>.multiplication","typeFullName":"ANY","resolvedMethod":"<operator>.multiplication","isExternal":true,"lineNumber":619,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"<operator>.multiplication","typeFullName":"ANY","resolvedMethod":"<operator>.multiplication","isExternal":true,"lineNumber":619,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"command","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"isUnreleasedTag ? \"npx auto-changelog --unreleased-only --stdout --commit-limit false --template json\" : <operator>.formatString","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":null,"lineNumber":107,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"log","resolvedMethod":"console.log","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":113,"columnNumber":2},{"callName":"exec","resolvedMethod":"exec","paramTypes":["__ecma.String","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":115,"columnNumber":25}]},{"targetObj":{"name":"async (tag)","typeFullName":"ANY","lineNumber":98,"columnNumber":42,"label":"UNKNOWN"},"definedBy":{"name":"async (tag)","typeFullName":"ANY","lineNumber":98,"columnNumber":42,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"exec","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:exec","isExternal":true,"lineNumber":231,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"exec","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:exec","isExternal":true,"lineNumber":231,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:anonymous6:anonymous:anonymous","signature":"","fileName":"bin/contributors.js","lineNumber":124,"columnNumber":27,"usages":[{"targetObj":{"name":"fix => fix.commit","typeFullName":"ANY","lineNumber":124,"columnNumber":27,"label":"UNKNOWN"},"definedBy":{"name":"fix => fix.commit","typeFullName":"ANY","lineNumber":124,"columnNumber":27,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:anonymous6:anonymous:anonymous1","signature":"","fileName":"bin/contributors.js","lineNumber":125,"columnNumber":28,"usages":[{"targetObj":{"name":"fix => fix.commit","typeFullName":"ANY","lineNumber":125,"columnNumber":28,"label":"UNKNOWN"},"definedBy":{"name":"fix => fix.commit","typeFullName":"ANY","lineNumber":125,"columnNumber":28,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:anonymous6:anonymous:anonymous2","signature":"","fileName":"bin/contributors.js","lineNumber":169,"columnNumber":12,"usages":[{"targetObj":{"name":"(a, b)","typeFullName":"ANY","lineNumber":169,"columnNumber":12,"label":"UNKNOWN"},"definedBy":{"name":"(a, b)","typeFullName":"ANY","lineNumber":169,"columnNumber":12,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.subtraction","typeFullName":"ANY","resolvedMethod":"<operator>.subtraction","isExternal":true,"lineNumber":34,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"<operator>.subtraction","typeFullName":"ANY","resolvedMethod":"<operator>.subtraction","isExternal":true,"lineNumber":34,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:anonymous8:anonymous","signature":"","fileName":"bin/contributors.js","lineNumber":197,"columnNumber":29,"usages":[{"targetObj":{"name":"({name})","typeFullName":"ANY","lineNumber":197,"columnNumber":29,"label":"UNKNOWN"},"definedBy":{"name":"({name})","typeFullName":"ANY","lineNumber":197,"columnNumber":29,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:cleanTemplate","signature":"","fileName":"bin/contributors.js","lineNumber":14,"columnNumber":22,"usages":[{"targetObj":{"name":"cleanTemplate","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:cleanTemplate","isExternal":false,"lineNumber":226,"columnNumber":31,"label":"CALL"},"definedBy":{"name":"cleanTemplate","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:cleanTemplate","isExternal":false,"lineNumber":226,"columnNumber":31,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"template","typeFullName":"ANY","position":1,"lineNumber":14,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"template","typeFullName":"ANY","position":1,"lineNumber":14,"columnNumber":22,"label":"PARAM"},"invokedCalls":[{"callName":"replace","resolvedMethod":".replace","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":14,"columnNumber":34}],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"template\n  .replace","isExternal":true,"lineNumber":14,"columnNumber":34,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"template\n  .replace","isExternal":true,"lineNumber":14,"columnNumber":34,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:deduplicate","signature":"","fileName":"bin/contributors.js","lineNumber":69,"columnNumber":20,"usages":[{"targetObj":{"name":"deduplicate","typeFullName":"object","resolvedMethod":"bin/contributors.js::program:deduplicate","isExternal":false,"lineNumber":168,"columnNumber":36,"label":"CALL"},"definedBy":{"name":"deduplicate","typeFullName":"object","resolvedMethod":"bin/contributors.js::program:deduplicate","isExternal":false,"lineNumber":168,"columnNumber":36,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"authors","typeFullName":"ANY","position":1,"lineNumber":69,"columnNumber":21,"label":"PARAM"},"definedBy":{"name":"authors","typeFullName":"ANY","position":1,"lineNumber":69,"columnNumber":21,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"entries","resolvedMethod":"Object.entries","paramTypes":["object"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":83,"columnNumber":29}]},{"targetObj":{"name":"entry","typeFullName":"object:<indexAccess>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"loginsMap[login]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":87,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"assign","resolvedMethod":"assign","paramTypes":["object:<indexAccess>","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":88,"columnNumber":7}]},{"targetObj":{"name":"join","typeFullName":"ANY","resolvedMethod":"Object.entries","isExternal":true,"lineNumber":78,"columnNumber":34,"label":"CALL"},"definedBy":{"name":"join","typeFullName":"ANY","resolvedMethod":"Object.entries","isExternal":true,"lineNumber":78,"columnNumber":34,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:getTagRef","signature":"","fileName":"bin/contributors.js","lineNumber":229,"columnNumber":18,"usages":[{"targetObj":{"name":"getTagRef","typeFullName":"Promise<any>","resolvedMethod":"bin/contributors.js::program:getTagRef","isExternal":false,"lineNumber":39,"columnNumber":45,"label":"CALL"},"definedBy":{"name":"getTagRef","typeFullName":"Promise<any>","resolvedMethod":"bin/contributors.js::program:getTagRef","isExternal":false,"lineNumber":39,"columnNumber":45,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:removeExtraLineBreaks","signature":"","fileName":"bin/contributors.js","lineNumber":12,"columnNumber":30,"usages":[{"targetObj":{"name":"removeExtraLineBreaks","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:removeExtraLineBreaks","isExternal":false,"lineNumber":226,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"removeExtraLineBreaks","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:removeExtraLineBreaks","isExternal":false,"lineNumber":226,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"str","typeFullName":"ANY","position":1,"lineNumber":12,"columnNumber":31,"label":"PARAM"},"definedBy":{"name":"str","typeFullName":"ANY","position":1,"lineNumber":12,"columnNumber":31,"label":"PARAM"},"invokedCalls":[{"callName":"replace","resolvedMethod":"str.replace","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":12,"columnNumber":39}],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"str.replace","isExternal":true,"lineNumber":12,"columnNumber":39,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"str.replace","isExternal":true,"lineNumber":12,"columnNumber":39,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/contributors.js::program:renderContributorsList","signature":"","fileName":"bin/contributors.js","lineNumber":179,"columnNumber":31,"usages":[{"targetObj":{"name":"getReleaseInfo","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:getReleaseInfo","isExternal":true,"lineNumber":190,"columnNumber":24,"label":"CALL"},"definedBy":{"name":"getReleaseInfo","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:getReleaseInfo","isExternal":true,"lineNumber":190,"columnNumber":24,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"compile","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:compile","isExternal":true,"lineNumber":224,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"compile","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:compile","isExternal":true,"lineNumber":224,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"content","typeFullName":"bin/contributors.js::program:compile:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"compile","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:compile","isExternal":null,"lineNumber":184,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"cleanTemplate","resolvedMethod":"cleanTemplate","paramTypes":["bin/contributors.js::program:compile:<returnValue>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":186,"columnNumber":31}]},{"targetObj":{"name":"renderContributorsList","typeFullName":"Promise<any>","resolvedMethod":"bin/contributors.js::program:renderContributorsList","isExternal":false,"lineNumber":77,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"renderContributorsList","typeFullName":"Promise<any>","resolvedMethod":"bin/contributors.js::program:renderContributorsList","isExternal":false,"lineNumber":77,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"template","typeFullName":"ANY","position":2,"lineNumber":179,"columnNumber":43,"label":"PARAM"},"definedBy":{"name":"template","typeFullName":"ANY","position":2,"lineNumber":179,"columnNumber":43,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":182,"columnNumber":50}]},{"targetObj":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":179,"columnNumber":38,"label":"PARAM"},"definedBy":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":179,"columnNumber":38,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"getReleaseInfo","resolvedMethod":"getReleaseInfo","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":180,"columnNumber":24}]},{"targetObj":{"name":"release","typeFullName":"Array<any>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"await getReleaseInfo","typeFullName":"ANY","resolvedMethod":"<operator>.await","isExternal":null,"lineNumber":180,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"compile","resolvedMethod":"compile","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":184,"columnNumber":18}]}]},{"code":"","fullName":"bin/contributors.js::program:renderPRsList","signature":"","fileName":"bin/contributors.js","lineNumber":189,"columnNumber":22,"usages":[{"targetObj":{"name":"exec","typeFullName":"ANY","resolvedMethod":"__ecma.String:exec","isExternal":true,"lineNumber":510,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"exec","typeFullName":"ANY","resolvedMethod":"__ecma.String:exec","isExternal":true,"lineNumber":510,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"content","typeFullName":"bin/contributors.js::program:compile:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"compile","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:compile","isExternal":null,"lineNumber":224,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"cleanTemplate","resolvedMethod":"cleanTemplate","paramTypes":["bin/contributors.js::program:compile:<returnValue>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":226,"columnNumber":31}]},{"targetObj":{"name":"exec","typeFullName":"ANY","resolvedMethod":"RegExp:exec","isExternal":true,"lineNumber":30,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"exec","typeFullName":"ANY","resolvedMethod":"RegExp:exec","isExternal":true,"lineNumber":30,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":189,"columnNumber":29,"label":"PARAM"},"definedBy":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":189,"columnNumber":29,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"getReleaseInfo","resolvedMethod":"getReleaseInfo","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":190,"columnNumber":24}]},{"targetObj":{"name":"next","typeFullName":"ANY","resolvedMethod":"_iterator_4.next","isExternal":true,"lineNumber":194,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"next","typeFullName":"ANY","resolvedMethod":"_iterator_4.next","isExternal":true,"lineNumber":194,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getIssueById","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:getIssueById","isExternal":true,"lineNumber":195,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"getIssueById","typeFullName":"ANY","resolvedMethod":"bin/contributors.js::program:getIssueById","isExternal":true,"lineNumber":195,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"find","typeFullName":"ANY","resolvedMethod":"Array<undefined>:<member>(labels):find","isExternal":true,"lineNumber":197,"columnNumber":14,"label":"CALL"},"definedBy":{"name":"find","typeFullName":"ANY","resolvedMethod":"Array<undefined>:<member>(labels):find","isExternal":true,"lineNumber":197,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.greaterThan","typeFullName":"ANY","resolvedMethod":"<operator>.greaterThan","isExternal":true,"lineNumber":455,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"<operator>.greaterThan","typeFullName":"ANY","resolvedMethod":"<operator>.greaterThan","isExternal":true,"lineNumber":455,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"push","typeFullName":"ANY","resolvedMethod":"object:<indexAccess>:<member>(messages):push","isExternal":true,"lineNumber":214,"columnNumber":22,"label":"CALL"},"definedBy":{"name":"push","typeFullName":"ANY","resolvedMethod":"object:<indexAccess>:<member>(messages):push","isExternal":true,"lineNumber":214,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"renderPRsList","typeFullName":"Promise<any>","resolvedMethod":"bin/contributors.js::program:renderPRsList","isExternal":false,"lineNumber":71,"columnNumber":22,"label":"CALL"},"definedBy":{"name":"renderPRsList","typeFullName":"Promise<any>","resolvedMethod":"bin/contributors.js::program:renderPRsList","isExternal":false,"lineNumber":71,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"release","typeFullName":"Array<any>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"await getReleaseInfo","typeFullName":"ANY","resolvedMethod":"<operator>.await","isExternal":null,"lineNumber":190,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"compile","resolvedMethod":"compile","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":224,"columnNumber":18}]},{"targetObj":{"name":"find","typeFullName":"ANY","resolvedMethod":"object:<indexAccess>:<member>(labels):find","isExternal":true,"lineNumber":197,"columnNumber":14,"label":"CALL"},"definedBy":{"name":"find","typeFullName":"ANY","resolvedMethod":"object:<indexAccess>:<member>(labels):find","isExternal":true,"lineNumber":197,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"body","typeFullName":"object:<indexAccess>:<member>(body)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_33.body","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":198,"columnNumber":24,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"exec","resolvedMethod":"reg.exec","paramTypes":["object:<indexAccess>:<member>(body)"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":213,"columnNumber":23}]},{"targetObj":{"name":"push","typeFullName":"ANY","resolvedMethod":"Array<undefined>:<member>(messages):push","isExternal":true,"lineNumber":214,"columnNumber":22,"label":"CALL"},"definedBy":{"name":"push","typeFullName":"ANY","resolvedMethod":"Array<undefined>:<member>(messages):push","isExternal":true,"lineNumber":214,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"template","typeFullName":"ANY","position":2,"lineNumber":189,"columnNumber":34,"label":"PARAM"},"definedBy":{"name":"template","typeFullName":"ANY","position":2,"lineNumber":189,"columnNumber":34,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":222,"columnNumber":50}]}]},{"code":"","fullName":"bin/githubAxios.js::program","signature":"","fileName":"bin/githubAxios.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"axios","typeFullName":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/githubAxios.js::program:require","isExternal":null,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"create","resolvedMethod":"axios.create","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":10,"columnNumber":15},{"callName":"getUri","resolvedMethod":"axios.getUri","paramTypes":["bin/githubAxios.js::program"],"returnType":"ANY","isExternal":true,"lineNumber":12,"columnNumber":77}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/githubAxios.js::program:require","isExternal":true,"lineNumber":2,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/githubAxios.js::program:require","isExternal":true,"lineNumber":2,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"create","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:create","isExternal":true,"lineNumber":6,"columnNumber":14,"label":"CALL"},"definedBy":{"name":"create","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:create","isExternal":true,"lineNumber":6,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/githubAxios.js::program:anonymous","signature":"","fileName":"bin/githubAxios.js","lineNumber":11,"columnNumber":42,"usages":[{"targetObj":{"name":"function (data)","typeFullName":"ANY","lineNumber":11,"columnNumber":42,"label":"UNKNOWN"},"definedBy":{"name":"function (data)","typeFullName":"ANY","lineNumber":11,"columnNumber":42,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"bin/githubAxios.js::program:<member>(method):toUpperCase","isExternal":true,"lineNumber":12,"columnNumber":30,"label":"CALL"},"definedBy":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"bin/githubAxios.js::program:<member>(method):toUpperCase","isExternal":true,"lineNumber":12,"columnNumber":30,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getUri","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:getUri","isExternal":true,"lineNumber":12,"columnNumber":77,"label":"CALL"},"definedBy":{"name":"getUri","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:getUri","isExternal":true,"lineNumber":12,"columnNumber":77,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/helpers/colorize.js::program","signature":"","fileName":"bin/helpers/colorize.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/helpers/colorize.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/helpers/colorize.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/helpers/colorize.js::program:anonymous:anonymous","signature":"","fileName":"bin/helpers/colorize.js","lineNumber":10,"columnNumber":9,"usages":[{"targetObj":{"name":"(strings, ...values)","typeFullName":"ANY","lineNumber":10,"columnNumber":9,"label":"UNKNOWN"},"definedBy":{"name":"(strings, ...values)","typeFullName":"ANY","lineNumber":10,"columnNumber":9,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"strings","typeFullName":"ANY","position":1,"lineNumber":10,"columnNumber":10,"label":"PARAM"},"definedBy":{"name":"strings","typeFullName":"ANY","position":1,"lineNumber":10,"columnNumber":10,"label":"PARAM"},"invokedCalls":[{"callName":"map","resolvedMethod":"strings.map","paramTypes":["LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":12,"columnNumber":11}],"argToCalls":[]},{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"strings.map","isExternal":true,"lineNumber":12,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"strings.map","isExternal":true,"lineNumber":12,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/helpers/colorize.js::program:anonymous:anonymous:anonymous","signature":"","fileName":"bin/helpers/colorize.js","lineNumber":12,"columnNumber":23,"usages":[{"targetObj":{"name":"(str, i)","typeFullName":"ANY","lineNumber":12,"columnNumber":23,"label":"UNKNOWN"},"definedBy":{"name":"(str, i)","typeFullName":"ANY","lineNumber":12,"columnNumber":23,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.lessThan","typeFullName":"ANY","resolvedMethod":"<operator>.lessThan","isExternal":true,"lineNumber":328,"columnNumber":40,"label":"CALL"},"definedBy":{"name":"<operator>.lessThan","typeFullName":"ANY","resolvedMethod":"<operator>.lessThan","isExternal":true,"lineNumber":328,"columnNumber":40,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.modulo","typeFullName":"ANY","resolvedMethod":"<operator>.modulo","isExternal":true,"lineNumber":42,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"<operator>.modulo","typeFullName":"ANY","resolvedMethod":"<operator>.modulo","isExternal":true,"lineNumber":42,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"bold","typeFullName":"ANY","resolvedMethod":"chalk[colors[i%colorsCount]].bold","isExternal":true,"lineNumber":12,"columnNumber":54,"label":"CALL"},"definedBy":{"name":"bold","typeFullName":"ANY","resolvedMethod":"chalk[colors[i%colorsCount]].bold","isExternal":true,"lineNumber":12,"columnNumber":54,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/helpers/colorize.js::program:colorize","signature":"","fileName":"bin/helpers/colorize.js","lineNumber":3,"columnNumber":24,"usages":[{"targetObj":{"name":"(...colors)","typeFullName":"ANY","lineNumber":3,"columnNumber":24,"label":"UNKNOWN"},"definedBy":{"name":"(...colors)","typeFullName":"ANY","lineNumber":3,"columnNumber":24,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/helpers/parser.js::program","signature":"","fileName":"bin/helpers/parser.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/helpers/parser.js::program:matchAll","signature":"","fileName":"bin/helpers/parser.js","lineNumber":1,"columnNumber":24,"usages":[{"targetObj":{"name":"cb","typeFullName":"ANY","resolvedMethod":"bin/helpers/parser.js::program:cb","isExternal":true,"lineNumber":4,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"cb","typeFullName":"ANY","resolvedMethod":"bin/helpers/parser.js::program:cb","isExternal":true,"lineNumber":4,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"exec","typeFullName":"ANY","resolvedMethod":"regexp.exec","isExternal":true,"lineNumber":3,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"exec","typeFullName":"ANY","resolvedMethod":"regexp.exec","isExternal":true,"lineNumber":3,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"matchAll","typeFullName":"void","resolvedMethod":"bin/helpers/parser.js::program:matchAll","isExternal":false,"lineNumber":9,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"matchAll","typeFullName":"void","resolvedMethod":"bin/helpers/parser.js::program:matchAll","isExternal":false,"lineNumber":9,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"text","typeFullName":"ANY","position":1,"lineNumber":1,"columnNumber":25,"label":"PARAM"},"definedBy":{"name":"text","typeFullName":"ANY","position":1,"lineNumber":1,"columnNumber":25,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"exec","resolvedMethod":"regexp.exec","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":3,"columnNumber":17}]},{"targetObj":{"name":"match","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"regexp.exec","typeFullName":"ANY","resolvedMethod":"regexp.exec","isExternal":null,"lineNumber":3,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"cb","resolvedMethod":"cb","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":4,"columnNumber":4}]},{"targetObj":{"name":"regexp","typeFullName":"ANY","position":2,"lineNumber":1,"columnNumber":31,"label":"PARAM"},"definedBy":{"name":"regexp","typeFullName":"ANY","position":2,"lineNumber":1,"columnNumber":31,"label":"PARAM"},"invokedCalls":[{"callName":"exec","resolvedMethod":"regexp.exec","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":3,"columnNumber":17}],"argToCalls":[]}]},{"code":"","fullName":"bin/helpers/parser.js::program:parseSection","signature":"","fileName":"bin/helpers/parser.js","lineNumber":8,"columnNumber":28,"usages":[{"targetObj":{"name":"(body, name, cb)","typeFullName":"ANY","lineNumber":8,"columnNumber":28,"label":"UNKNOWN"},"definedBy":{"name":"(body, name, cb)","typeFullName":"ANY","lineNumber":8,"columnNumber":28,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"body","typeFullName":"ANY","position":1,"lineNumber":8,"columnNumber":29,"label":"PARAM"},"definedBy":{"name":"body","typeFullName":"ANY","position":1,"lineNumber":8,"columnNumber":29,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"RegExp","resolvedMethod":"matchAll","paramTypes":["ANY","__ecma.String"],"returnType":"RegExp","position":1,"isExternal":false,"lineNumber":9,"columnNumber":2}]},{"targetObj":{"name":"cb","typeFullName":"ANY","position":3,"lineNumber":8,"columnNumber":41,"label":"PARAM"},"definedBy":{"name":"cb","typeFullName":"ANY","position":3,"lineNumber":8,"columnNumber":41,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"RegExp","resolvedMethod":"matchAll","paramTypes":["ANY","__ecma.String"],"returnType":"RegExp","position":3,"isExternal":false,"lineNumber":9,"columnNumber":2}]}]},{"code":"","fullName":"bin/helpers/parser.js::program:parseVersion","signature":"","fileName":"bin/helpers/parser.js","lineNumber":12,"columnNumber":28,"usages":[{"targetObj":{"name":"parseVersion","typeFullName":"RegExpExecArray","resolvedMethod":"bin/helpers/parser.js::program:parseVersion","isExternal":false,"lineNumber":89,"columnNumber":33,"label":"CALL"},"definedBy":{"name":"parseVersion","typeFullName":"RegExpExecArray","resolvedMethod":"bin/helpers/parser.js::program:parseVersion","isExternal":false,"lineNumber":89,"columnNumber":33,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"rawVersion","typeFullName":"ANY","position":1,"lineNumber":12,"columnNumber":29,"label":"PARAM"},"definedBy":{"name":"rawVersion","typeFullName":"ANY","position":1,"lineNumber":12,"columnNumber":29,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"exec","resolvedMethod":"/^v?","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":12,"columnNumber":44}]}]},{"code":"","fullName":"bin/injectContributorsList.js::program","signature":"","fileName":"bin/injectContributorsList.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"fs","typeFullName":"fs/promises:fs","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/injectContributorsList.js::program:require","isExternal":null,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["path:path:resolve:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":18,"columnNumber":31},{"callName":"writeFile","resolvedMethod":"fs.writeFile","paramTypes":["path:path:resolve:<returnValue>","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":65,"columnNumber":8}],"argToCalls":[]},{"targetObj":{"name":"__dirname","typeFullName":"path:path:dirname:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"path.dirname","typeFullName":"ANY","resolvedMethod":"path:path:dirname","isExternal":null,"lineNumber":8,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"resolve","resolvedMethod":"path.resolve","paramTypes":["path:path:dirname:<returnValue>","__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":10,"columnNumber":30},{"callName":"resolve","resolvedMethod":"path.resolve","paramTypes":["path:path:dirname:<returnValue>","__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":11,"columnNumber":21},{"callName":"resolve","resolvedMethod":"path.resolve","paramTypes":["path:path:dirname:<returnValue>","path:path:resolve:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":16,"columnNumber":11}]},{"targetObj":{"name":"PRS_TEMPLATE","typeFullName":"path:path:resolve:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"path.resolve","typeFullName":"ANY","resolvedMethod":"path:path:resolve","isExternal":null,"lineNumber":11,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"renderPRsList","resolvedMethod":"renderPRsList","paramTypes":["\"\" | Promise<any>","path:path:resolve:<returnValue>","ANY"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":71,"columnNumber":22}]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"CONTRIBUTORS_TEMPLATE","typeFullName":"path:path:resolve:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"path.resolve","typeFullName":"ANY","resolvedMethod":"path:path:resolve","isExternal":null,"lineNumber":10,"columnNumber":30,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"renderContributorsList","resolvedMethod":"renderContributorsList","paramTypes":["\"\" | Promise<any>","path:path:resolve:<returnValue>"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":77,"columnNumber":11}]},{"targetObj":{"name":"path","typeFullName":"path:path","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/injectContributorsList.js::program:require","isExternal":null,"lineNumber":2,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"dirname","resolvedMethod":"path.dirname","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":8,"columnNumber":18},{"callName":"resolve","resolvedMethod":"path.resolve","paramTypes":["path:path:dirname:<returnValue>","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":10,"columnNumber":30},{"callName":"resolve","resolvedMethod":"path.resolve","paramTypes":["path:path:dirname:<returnValue>","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":11,"columnNumber":21},{"callName":"resolve","resolvedMethod":"path.resolve","paramTypes":["path:path:dirname:<returnValue>","path:path:resolve:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":16,"columnNumber":11}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/injectContributorsList.js::program:require","isExternal":true,"lineNumber":6,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/injectContributorsList.js::program:require","isExternal":true,"lineNumber":6,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/injectContributorsList.js::program:anonymous1","signature":"","fileName":"bin/injectContributorsList.js","lineNumber":71,"columnNumber":2,"usages":[{"targetObj":{"name":"(tag)","typeFullName":"ANY","lineNumber":71,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"(tag)","typeFullName":"ANY","lineNumber":71,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":71,"columnNumber":3,"label":"PARAM"},"definedBy":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":71,"columnNumber":3,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"renderPRsList","resolvedMethod":"renderPRsList","paramTypes":["\"\" | Promise<any>","path:path:resolve:<returnValue>","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":71,"columnNumber":22}]}]},{"code":"","fullName":"bin/injectContributorsList.js::program:anonymous2","signature":"","fileName":"bin/injectContributorsList.js","lineNumber":77,"columnNumber":2,"usages":[{"targetObj":{"name":"(tag)","typeFullName":"ANY","lineNumber":77,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"(tag)","typeFullName":"ANY","lineNumber":77,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":77,"columnNumber":3,"label":"PARAM"},"definedBy":{"name":"tag","typeFullName":"ANY","position":1,"lineNumber":77,"columnNumber":3,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"renderContributorsList","resolvedMethod":"renderContributorsList","paramTypes":["\"\" | Promise<any>","path:path:resolve:<returnValue>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":77,"columnNumber":11}]}]},{"code":"","fullName":"bin/injectContributorsList.js::program:anonymous:anonymous","signature":"","fileName":"bin/injectContributorsList.js","lineNumber":25,"columnNumber":59,"usages":[{"targetObj":{"name":"target","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"isFirstTag && ","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":null,"lineNumber":39,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"injector","resolvedMethod":"injector","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":47,"columnNumber":30}]},{"targetObj":{"name":"releaseContent","typeFullName":"__ecma.String:slice:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"content.slice","typeFullName":"ANY","resolvedMethod":"__ecma.String:slice","isExternal":null,"lineNumber":26,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"test","resolvedMethod":"contributorsRE.test","paramTypes":["__ecma.String:slice:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":28,"columnNumber":23}]},{"targetObj":{"name":"injector","typeFullName":"ANY","resolvedMethod":"bin/injectContributorsList.js::program:injector","isExternal":true,"lineNumber":47,"columnNumber":30,"label":"CALL"},"definedBy":{"name":"injector","typeFullName":"ANY","resolvedMethod":"bin/injectContributorsList.js::program:injector","isExternal":true,"lineNumber":47,"columnNumber":30,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"section","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"await injector","typeFullName":"ANY","resolvedMethod":"<operator>.await","isExternal":null,"lineNumber":47,"columnNumber":24,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"log","resolvedMethod":"console.log","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":55,"columnNumber":8}]},{"targetObj":{"name":"index","typeFullName":"__ecma.Number","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"offset + match.length","typeFullName":"ANY","resolvedMethod":"<operator>.addition","isExternal":null,"lineNumber":33,"columnNumber":12,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"slice","resolvedMethod":"content.slice","paramTypes":["__ecma.Number","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":26,"columnNumber":27}]},{"targetObj":{"name":"test","typeFullName":"ANY","resolvedMethod":"contributorsRE.test","isExternal":true,"lineNumber":28,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"test","typeFullName":"ANY","resolvedMethod":"contributorsRE.test","isExternal":true,"lineNumber":28,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"slice","typeFullName":"ANY","resolvedMethod":"__ecma.String:slice","isExternal":true,"lineNumber":364,"columnNumber":14,"label":"CALL"},"definedBy":{"name":"slice","typeFullName":"ANY","resolvedMethod":"__ecma.String:slice","isExternal":true,"lineNumber":364,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"async (match, nextTag, offset)","typeFullName":"ANY","lineNumber":25,"columnNumber":59,"label":"UNKNOWN"},"definedBy":{"name":"async (match, nextTag, offset)","typeFullName":"ANY","lineNumber":25,"columnNumber":59,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"offset","typeFullName":"ANY","position":3,"lineNumber":25,"columnNumber":82,"label":"PARAM"},"definedBy":{"name":"offset","typeFullName":"ANY","position":3,"lineNumber":25,"columnNumber":82,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"slice","resolvedMethod":"content.slice","paramTypes":["__ecma.Number","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":26,"columnNumber":27}]}]},{"code":"","fullName":"bin/injectContributorsList.js::program:injectSection","signature":"","fileName":"bin/injectContributorsList.js","lineNumber":13,"columnNumber":22,"usages":[{"targetObj":{"name":"newContent","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"await asyncReplace","typeFullName":"ANY","resolvedMethod":"<operator>.await","isExternal":null,"lineNumber":25,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"writeFile","resolvedMethod":"fs.writeFile","paramTypes":["path:path:resolve:<returnValue>","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":65,"columnNumber":8}]},{"targetObj":{"name":"contributorsRE","typeFullName":"ANY","position":2,"lineNumber":13,"columnNumber":35,"label":"PARAM"},"definedBy":{"name":"contributorsRE","typeFullName":"ANY","position":2,"lineNumber":13,"columnNumber":35,"label":"PARAM"},"invokedCalls":[{"callName":"test","resolvedMethod":"contributorsRE.test","paramTypes":["__ecma.String:slice:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":28,"columnNumber":23}],"argToCalls":[]},{"targetObj":{"name":"asyncReplace","typeFullName":"ANY","resolvedMethod":"string-replace-async:asyncReplace","isExternal":true,"lineNumber":25,"columnNumber":27,"label":"CALL"},"definedBy":{"name":"asyncReplace","typeFullName":"ANY","resolvedMethod":"string-replace-async:asyncReplace","isExternal":true,"lineNumber":25,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"writeFile","typeFullName":"ANY","resolvedMethod":"fs/promises:fs:writeFile","isExternal":true,"lineNumber":62,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"writeFile","typeFullName":"ANY","resolvedMethod":"fs/promises:fs:writeFile","isExternal":true,"lineNumber":62,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"infile","typeFullName":"path:path:resolve:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"path.resolve","typeFullName":"ANY","resolvedMethod":"path:path:resolve","isExternal":null,"lineNumber":16,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"resolve","resolvedMethod":"path.resolve","paramTypes":["path:path:dirname:<returnValue>","path:path:resolve:<returnValue>"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":16,"columnNumber":11},{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["path:path:resolve:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":18,"columnNumber":31},{"callName":"writeFile","resolvedMethod":"fs.writeFile","paramTypes":["path:path:resolve:<returnValue>","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":65,"columnNumber":8}]},{"targetObj":{"name":"content","typeFullName":"String:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"String","typeFullName":"String","resolvedMethod":"String","isExternal":null,"lineNumber":18,"columnNumber":18,"label":"CALL"},"invokedCalls":[{"callName":"slice","resolvedMethod":"content.slice","paramTypes":["__ecma.Number","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":26,"columnNumber":27}],"argToCalls":[{"callName":"asyncReplace","resolvedMethod":"asyncReplace","paramTypes":["String:<returnValue>","__ecma.String","LAMBDA"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":25,"columnNumber":27}]},{"targetObj":{"name":"injectSection","typeFullName":"Promise<void>","resolvedMethod":"bin/injectContributorsList.js::program:injectSection","isExternal":false,"lineNumber":74,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"injectSection","typeFullName":"Promise<void>","resolvedMethod":"bin/injectContributorsList.js::program:injectSection","isExternal":false,"lineNumber":74,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/pr.js::program","signature":"","fileName":"bin/pr.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"Handlebars","typeFullName":"handlebars:Handlebars","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/pr.js::program:require","isExternal":null,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"registerHelper","resolvedMethod":"Handlebars.registerHelper","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":31,"columnNumber":2},{"callName":"compile","resolvedMethod":"Handlebars.compile","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":33,"columnNumber":9}],"argToCalls":[]},{"targetObj":{"name":"fs","typeFullName":"fs/promises:fs","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/pr.js::program:require","isExternal":null,"lineNumber":2,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"stat","resolvedMethod":"fs.stat","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":15,"columnNumber":19},{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":17,"columnNumber":40},{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":33,"columnNumber":41}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/pr.js::program:require","isExternal":true,"lineNumber":5,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/pr.js::program:require","isExternal":true,"lineNumber":5,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/pr.js::program:anonymous1:anonymous","signature":"","fileName":"bin/pr.js","lineNumber":31,"columnNumber":40,"usages":[{"targetObj":{"name":"(bytes)","typeFullName":"ANY","lineNumber":31,"columnNumber":40,"label":"UNKNOWN"},"definedBy":{"name":"(bytes)","typeFullName":"ANY","lineNumber":31,"columnNumber":40,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"bytes","typeFullName":"ANY","position":1,"lineNumber":31,"columnNumber":41,"label":"PARAM"},"definedBy":{"name":"bytes","typeFullName":"ANY","position":1,"lineNumber":31,"columnNumber":41,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"prettyBytes","resolvedMethod":"prettyBytes","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":31,"columnNumber":50}]}]},{"code":"","fullName":"bin/pr.js::program:anonymous:anonymous","signature":"","fileName":"bin/pr.js","lineNumber":19,"columnNumber":27,"usages":[{"targetObj":{"name":"({tag, size})","typeFullName":"ANY","lineNumber":19,"columnNumber":27,"label":"UNKNOWN"},"definedBy":{"name":"({tag, size})","typeFullName":"ANY","lineNumber":19,"columnNumber":27,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"size","typeFullName":"__ecma.Number","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"param1_0.size","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":19,"columnNumber":34,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"prettyBytes","resolvedMethod":"prettyBytes","paramTypes":["__ecma.Number"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":19,"columnNumber":47}]},{"targetObj":{"name":"prettyBytes","typeFullName":"ANY","resolvedMethod":"pretty-bytes:prettyBytes","isExternal":true,"lineNumber":31,"columnNumber":50,"label":"CALL"},"definedBy":{"name":"prettyBytes","typeFullName":"ANY","resolvedMethod":"pretty-bytes:prettyBytes","isExternal":true,"lineNumber":31,"columnNumber":50,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/pr.js::program:generateBody","signature":"","fileName":"bin/pr.js","lineNumber":26,"columnNumber":21,"usages":[{"targetObj":{"name":"Handlebars.compile(String(await fs.readFile(template)))","typeFullName":"ANY","resolvedMethod":"bin/pr.js::program:Handlebars.compile(String(await fs.readFile(template)))","isExternal":true,"lineNumber":33,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"Handlebars.compile(String(await fs.readFile(template)))","typeFullName":"ANY","resolvedMethod":"bin/pr.js::program:Handlebars.compile(String(await fs.readFile(template)))","isExternal":true,"lineNumber":33,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"registerHelper","typeFullName":"ANY","resolvedMethod":"handlebars:Handlebars:registerHelper","isExternal":true,"lineNumber":31,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"registerHelper","typeFullName":"ANY","resolvedMethod":"handlebars:Handlebars:registerHelper","isExternal":true,"lineNumber":31,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"generateBody","typeFullName":"Promise<any>","resolvedMethod":"bin/pr.js::program:generateBody","isExternal":false,"lineNumber":36,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"generateBody","typeFullName":"Promise<any>","resolvedMethod":"bin/pr.js::program:generateBody","isExternal":false,"lineNumber":36,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"files","typeFullName":"_tmp_4:files:<returnValue>:<member>(files)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_4.files","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":26,"columnNumber":29,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"generateFileReport","resolvedMethod":"generateFileReport","paramTypes":["_tmp_4:files:<returnValue>:<member>(files)"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":28,"columnNumber":17}]},{"targetObj":{"name":"template","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_4.template === void 0 ? \"./templates/pr.hbs\" : _tmp_4.template","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":null,"lineNumber":26,"columnNumber":36,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":33,"columnNumber":41}]}]},{"code":"","fullName":"bin/pr.js::program:generateFileReport","signature":"","fileName":"bin/pr.js","lineNumber":7,"columnNumber":27,"usages":[{"targetObj":{"name":"generateFileReport","typeFullName":"object","resolvedMethod":"bin/pr.js::program:generateFileReport","isExternal":false,"lineNumber":28,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"generateFileReport","typeFullName":"object","resolvedMethod":"bin/pr.js::program:generateFileReport","isExternal":false,"lineNumber":28,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"files","typeFullName":"ANY","position":1,"lineNumber":7,"columnNumber":34,"label":"PARAM"},"definedBy":{"name":"files","typeFullName":"ANY","position":1,"lineNumber":7,"columnNumber":34,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"entries","resolvedMethod":"Object.entries","paramTypes":["_tmp_4:files:<returnValue>:<member>(files)"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":10,"columnNumber":28}]},{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"Array<{ sha: __ecma.String; tag: __ecma.String; size: __ecma.Number; }>:map","isExternal":true,"lineNumber":19,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"Array<{ sha: __ecma.String; tag: __ecma.String; size: __ecma.Number; }>:map","isExternal":true,"lineNumber":19,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"join","typeFullName":"ANY","resolvedMethod":"Array<{ sha: __ecma.String; tag: __ecma.String; size: __ecma.Number; }>:map:<returnValue>:join","isExternal":true,"lineNumber":19,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"join","typeFullName":"ANY","resolvedMethod":"Array<{ sha: __ecma.String; tag: __ecma.String; size: __ecma.Number; }>:map:<returnValue>:join","isExternal":true,"lineNumber":19,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"gzipSize","typeFullName":"ANY","resolvedMethod":"gzip-size:gzipSize","isExternal":true,"lineNumber":17,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"gzipSize","typeFullName":"ANY","resolvedMethod":"gzip-size:gzipSize","isExternal":true,"lineNumber":17,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"commits","typeFullName":"Array<{ sha: __ecma.String; tag: __ecma.String; size: __ecma.Number; }>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"await getBlobHistory","typeFullName":"ANY","resolvedMethod":"<operator>.await","isExternal":null,"lineNumber":11,"columnNumber":20,"label":"CALL"},"invokedCalls":[{"callName":"map","resolvedMethod":"commits.map","paramTypes":["LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":19,"columnNumber":15}],"argToCalls":[]},{"targetObj":{"name":"stat","typeFullName":"ANY","resolvedMethod":"fs/promises:fs:stat","isExternal":true,"lineNumber":15,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"stat","typeFullName":"ANY","resolvedMethod":"fs/promises:fs:stat","isExternal":true,"lineNumber":15,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/repo.js::program","signature":"","fileName":"bin/repo.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"util","typeFullName":"util:util","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/repo.js::program:require","isExternal":null,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"promisify","resolvedMethod":"util.promisify","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":4,"columnNumber":20}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/repo.js::program:require","isExternal":true,"lineNumber":2,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/repo.js::program:require","isExternal":true,"lineNumber":2,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/repo.js::program:getBlobHistory","signature":"","fileName":"bin/repo.js","lineNumber":14,"columnNumber":30,"usages":[{"targetObj":{"name":"log","typeFullName":"stdout","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"await exec","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":15,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"exec","resolvedMethod":"regexp.exec","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":25,"columnNumber":17}]},{"targetObj":{"name":"getBlobHistory","typeFullName":"__ecma.Array","resolvedMethod":"bin/repo.js::program:getBlobHistory","isExternal":false,"lineNumber":11,"columnNumber":26,"label":"CALL"},"definedBy":{"name":"getBlobHistory","typeFullName":"__ecma.Array","resolvedMethod":"bin/repo.js::program:getBlobHistory","isExternal":false,"lineNumber":11,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"filepath","typeFullName":"ANY","position":1,"lineNumber":14,"columnNumber":37,"label":"PARAM"},"definedBy":{"name":"filepath","typeFullName":"ANY","position":1,"lineNumber":14,"columnNumber":37,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"getBlobSize","resolvedMethod":"getBlobSize","paramTypes":["ANY","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":29,"columnNumber":18}]},{"targetObj":{"name":"commits","typeFullName":"__ecma.Array","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"__ecma.Array.factory","typeFullName":"__ecma.Array.factory","resolvedMethod":"__ecma.Array.factory","isExternal":null,"lineNumber":19,"columnNumber":18,"label":"CALL"},"invokedCalls":[{"callName":"push","resolvedMethod":"commits.push","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":26,"columnNumber":4}],"argToCalls":[]},{"targetObj":{"name":"push","typeFullName":"ANY","resolvedMethod":"__ecma.Array:push","isExternal":true,"lineNumber":511,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"push","typeFullName":"ANY","resolvedMethod":"__ecma.Array:push","isExternal":true,"lineNumber":511,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/repo.js::program:getBlobSize","signature":"","fileName":"bin/repo.js","lineNumber":6,"columnNumber":27,"usages":[{"targetObj":{"name":"getBlobSize","typeFullName":"Promise<number>","resolvedMethod":"bin/repo.js::program:getBlobSize","isExternal":false,"lineNumber":29,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"getBlobSize","typeFullName":"Promise<number>","resolvedMethod":"bin/repo.js::program:getBlobSize","isExternal":false,"lineNumber":29,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.plus","typeFullName":"ANY","resolvedMethod":"<operator>.plus","isExternal":true,"lineNumber":602,"columnNumber":50,"label":"CALL"},"definedBy":{"name":"<operator>.plus","typeFullName":"ANY","resolvedMethod":"<operator>.plus","isExternal":true,"lineNumber":602,"columnNumber":50,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"exec","typeFullName":"ANY","resolvedMethod":"bin/repo.js::program:exec","isExternal":true,"lineNumber":37,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"exec","typeFullName":"ANY","resolvedMethod":"bin/repo.js::program:exec","isExternal":true,"lineNumber":37,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/repo.js::program:getTags","signature":"","fileName":"bin/repo.js","lineNumber":36,"columnNumber":23,"usages":[{"targetObj":{"name":"getTags","typeFullName":"Promise<any>","resolvedMethod":"bin/repo.js::program:getTags","isExternal":false,"lineNumber":8,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"getTags","typeFullName":"Promise<any>","resolvedMethod":"bin/repo.js::program:getTags","isExternal":false,"lineNumber":8,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"log","typeFullName":"stdout","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"await exec","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":37,"columnNumber":14,"label":"CALL"},"invokedCalls":[{"callName":"split","resolvedMethod":"log.split","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":41,"columnNumber":9}],"argToCalls":[]},{"targetObj":{"name":"split","typeFullName":"ANY","resolvedMethod":"log.split","isExternal":true,"lineNumber":41,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"split","typeFullName":"ANY","resolvedMethod":"log.split","isExternal":true,"lineNumber":41,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/resolveNPMTag.js::program","signature":"","fileName":"bin/resolveNPMTag.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/resolveNPMTag.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/resolveNPMTag.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"fs","typeFullName":"fs:fs","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/resolveNPMTag.js::program:require","isExternal":null,"lineNumber":2,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"readFileSync","resolvedMethod":"fs.readFileSync","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":5,"columnNumber":29}],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"version","typeFullName":"JSON.parse:<returnValue>:<member>(version)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_0.version","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":5,"columnNumber":7,"label":"CALL"},"invokedCalls":[{"callName":"split","resolvedMethod":"version.split","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":7,"columnNumber":16}],"argToCalls":[{"callName":"test","resolvedMethod":"/^v?","paramTypes":["JSON.parse:<returnValue>:<member>(version)"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":11,"columnNumber":16}]},{"targetObj":{"name":"split","typeFullName":"ANY","resolvedMethod":"JSON.parse:<returnValue>:<member>(version):split","isExternal":true,"lineNumber":7,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"split","typeFullName":"ANY","resolvedMethod":"JSON.parse:<returnValue>:<member>(version):split","isExternal":true,"lineNumber":7,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"test","typeFullName":"ANY","resolvedMethod":"__ecma.String:test","isExternal":true,"lineNumber":60,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"test","typeFullName":"ANY","resolvedMethod":"__ecma.String:test","isExternal":true,"lineNumber":60,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"exec","typeFullName":"ANY","resolvedMethod":"bin/resolveNPMTag.js::program:exec","isExternal":true,"lineNumber":18,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"exec","typeFullName":"ANY","resolvedMethod":"bin/resolveNPMTag.js::program:exec","isExternal":true,"lineNumber":18,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/sponsors.js::program","signature":"","fileName":"bin/sponsors.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/sponsors.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/sponsors.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"fs","typeFullName":"fs/promises:fs","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/sponsors.js::program:require","isExternal":null,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":30,"columnNumber":27},{"callName":"writeFile","resolvedMethod":"fs.writeFile","paramTypes":["ANY","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":44,"columnNumber":12},{"callName":"mkdir","resolvedMethod":"fs.mkdir","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":61,"columnNumber":10},{"callName":"writeFile","resolvedMethod":"fs.writeFile","paramTypes":["__ecma.String","__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":62,"columnNumber":10}],"argToCalls":[]},{"targetObj":{"name":"axios","typeFullName":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:create:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_axios.create","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:create","isExternal":null,"lineNumber":6,"columnNumber":14,"label":"CALL"},"invokedCalls":[{"callName":"get","resolvedMethod":"axios.get","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":16,"columnNumber":19}],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_axios","typeFullName":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/sponsors.js::program:require","isExternal":null,"lineNumber":2,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"create","resolvedMethod":"_axios.create","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":6,"columnNumber":14}],"argToCalls":[]}]},{"code":"","fullName":"bin/sponsors.js::program:anonymous2","signature":"","fileName":"bin/sponsors.js","lineNumber":56,"columnNumber":1,"usages":[{"targetObj":{"name":"catch","typeFullName":"ANY","resolvedMethod":"fs/promises:fs:mkdir:<returnValue>:catch","isExternal":true,"lineNumber":61,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"catch","typeFullName":"ANY","resolvedMethod":"fs/promises:fs:mkdir:<returnValue>:catch","isExternal":true,"lineNumber":61,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"mkdir","typeFullName":"ANY","resolvedMethod":"fs/promises:fs:mkdir","isExternal":true,"lineNumber":61,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"mkdir","typeFullName":"ANY","resolvedMethod":"fs/promises:fs:mkdir","isExternal":true,"lineNumber":61,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"anonymous2","typeFullName":"ANY","resolvedMethod":"bin/sponsors.js::program:anonymous2","isExternal":false,"lineNumber":56,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"anonymous2","typeFullName":"ANY","resolvedMethod":"bin/sponsors.js::program:anonymous2","isExternal":false,"lineNumber":56,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"url","typeFullName":"__ecma.String","position":1,"lineNumber":56,"columnNumber":7,"label":"PARAM"},"definedBy":{"name":"url","typeFullName":"__ecma.String","position":1,"lineNumber":56,"columnNumber":7,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"updateReadmeSponsors","resolvedMethod":"updateReadmeSponsors","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":57,"columnNumber":27}]},{"targetObj":{"name":"newContent","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"await updateReadmeSponsors","typeFullName":"ANY","resolvedMethod":"<operator>.await","isExternal":null,"lineNumber":57,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"writeFile","resolvedMethod":"fs.writeFile","paramTypes":["__ecma.String","__ecma.Boolean"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":62,"columnNumber":10}]},{"targetObj":{"name":"exec","typeFullName":"ANY","resolvedMethod":"bin/sponsors.js::program:exec","isExternal":true,"lineNumber":59,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"exec","typeFullName":"ANY","resolvedMethod":"bin/sponsors.js::program:exec","isExternal":true,"lineNumber":59,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/sponsors.js::program:anonymous2:anonymous","signature":"","fileName":"bin/sponsors.js","lineNumber":61,"columnNumber":35,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":61,"columnNumber":35,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":61,"columnNumber":35,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/sponsors.js::program:anonymous:anonymous:anonymous","signature":"","fileName":"bin/sponsors.js","lineNumber":21,"columnNumber":24,"usages":[{"targetObj":{"name":"resolve => setTimeout(resolve, counter ** counter * 1000)","typeFullName":"ANY","lineNumber":21,"columnNumber":24,"label":"UNKNOWN"},"definedBy":{"name":"resolve => setTimeout(resolve, counter ** counter * 1000)","typeFullName":"ANY","lineNumber":21,"columnNumber":24,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"resolve","typeFullName":"(value: ANY) => void","position":1,"lineNumber":21,"columnNumber":24,"label":"PARAM"},"definedBy":{"name":"resolve","typeFullName":"(value: ANY) => void","position":1,"lineNumber":21,"columnNumber":24,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"setTimeout","resolvedMethod":"setTimeout","paramTypes":["(value: ANY) => void","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":21,"columnNumber":35}]},{"targetObj":{"name":"<operator>.exponentiation","typeFullName":"ANY","resolvedMethod":"<operator>.exponentiation","isExternal":true,"lineNumber":21,"columnNumber":55,"label":"CALL"},"definedBy":{"name":"<operator>.exponentiation","typeFullName":"ANY","resolvedMethod":"<operator>.exponentiation","isExternal":true,"lineNumber":21,"columnNumber":55,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"setTimeout","typeFullName":"ANY","resolvedMethod":"bin/sponsors.js::program:setTimeout","isExternal":true,"lineNumber":21,"columnNumber":35,"label":"CALL"},"definedBy":{"name":"setTimeout","typeFullName":"ANY","resolvedMethod":"bin/sponsors.js::program:setTimeout","isExternal":true,"lineNumber":21,"columnNumber":35,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/sponsors.js::program:anonymous:doRequest","signature":"","fileName":"bin/sponsors.js","lineNumber":14,"columnNumber":20,"usages":[{"targetObj":{"name":"doRequest","typeFullName":"bin/sponsors.js::program:anonymous:doRequest:<returnValue>","resolvedMethod":"bin/sponsors.js::program:anonymous:doRequest","isExternal":false,"lineNumber":26,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"doRequest","typeFullName":"bin/sponsors.js::program:anonymous:doRequest:<returnValue>","resolvedMethod":"bin/sponsors.js::program:anonymous:doRequest","isExternal":false,"lineNumber":26,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"get","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:create:<returnValue>:get","isExternal":true,"lineNumber":16,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"get","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:create:<returnValue>:get","isExternal":true,"lineNumber":16,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/sponsors.js::program:getWithRetry","signature":"","fileName":"bin/sponsors.js","lineNumber":12,"columnNumber":21,"usages":[{"targetObj":{"name":"getWithRetry","typeFullName":"bin/sponsors.js::program:anonymous:doRequest:<returnValue>","resolvedMethod":"bin/sponsors.js::program:getWithRetry","isExternal":false,"lineNumber":37,"columnNumber":39,"label":"CALL"},"definedBy":{"name":"getWithRetry","typeFullName":"bin/sponsors.js::program:anonymous:doRequest:<returnValue>","resolvedMethod":"bin/sponsors.js::program:getWithRetry","isExternal":false,"lineNumber":37,"columnNumber":39,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"url","typeFullName":"ANY","position":1,"lineNumber":12,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"url","typeFullName":"ANY","position":1,"lineNumber":12,"columnNumber":22,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"get","resolvedMethod":"axios.get","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":16,"columnNumber":19}]}]},{"code":"","fullName":"bin/sponsors.js::program:updateReadmeSponsors","signature":"","fileName":"bin/sponsors.js","lineNumber":29,"columnNumber":29,"usages":[{"targetObj":{"name":"fileContent","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"","typeFullName":"ANY","resolvedMethod":"","isExternal":null,"lineNumber":30,"columnNumber":20,"label":"CALL"},"invokedCalls":[{"callName":"indexOf","resolvedMethod":"fileContent.indexOf","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":32,"columnNumber":16},{"callName":"slice","resolvedMethod":"fileContent.slice","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":35,"columnNumber":26},{"callName":"slice","resolvedMethod":"fileContent.slice","paramTypes":["__ecma.Number","__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":40,"columnNumber":34}],"argToCalls":[]},{"targetObj":{"name":"marker","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"marker === void 0 ? \"<!--<div>marker</div>-->\" : marker","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":null,"lineNumber":29,"columnNumber":47,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"indexOf","resolvedMethod":"fileContent.indexOf","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":32,"columnNumber":16}]},{"targetObj":{"name":"index","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"fileContent.indexOf","typeFullName":"ANY","resolvedMethod":"fileContent.indexOf","isExternal":null,"lineNumber":32,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"slice","resolvedMethod":"fileContent.slice","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":35,"columnNumber":26},{"callName":"slice","resolvedMethod":"fileContent.slice","paramTypes":["__ecma.Number","__ecma.Boolean"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":40,"columnNumber":34}]},{"targetObj":{"name":"path","typeFullName":"ANY","position":2,"lineNumber":29,"columnNumber":41,"label":"PARAM"},"definedBy":{"name":"path","typeFullName":"ANY","position":2,"lineNumber":29,"columnNumber":41,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":30,"columnNumber":27},{"callName":"writeFile","resolvedMethod":"fs.writeFile","paramTypes":["ANY","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":44,"columnNumber":12}]},{"targetObj":{"name":"slice","typeFullName":"ANY","resolvedMethod":"fileContent.slice","isExternal":true,"lineNumber":40,"columnNumber":34,"label":"CALL"},"definedBy":{"name":"slice","typeFullName":"ANY","resolvedMethod":"fileContent.slice","isExternal":true,"lineNumber":40,"columnNumber":34,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"url","typeFullName":"ANY","position":1,"lineNumber":29,"columnNumber":36,"label":"PARAM"},"definedBy":{"name":"url","typeFullName":"ANY","position":1,"lineNumber":29,"columnNumber":36,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"getWithRetry","resolvedMethod":"getWithRetry","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":37,"columnNumber":39}]},{"targetObj":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"fileContent.indexOf","isExternal":true,"lineNumber":32,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"fileContent.indexOf","isExternal":true,"lineNumber":32,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"updateReadmeSponsors","typeFullName":"__ecma.String","resolvedMethod":"bin/sponsors.js::program:updateReadmeSponsors","isExternal":false,"lineNumber":57,"columnNumber":27,"label":"CALL"},"definedBy":{"name":"updateReadmeSponsors","typeFullName":"__ecma.String","resolvedMethod":"bin/sponsors.js::program:updateReadmeSponsors","isExternal":false,"lineNumber":57,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/ssl_hotfix.js::program","signature":"","fileName":"bin/ssl_hotfix.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"on","typeFullName":"ANY","resolvedMethod":"child_process:spawn:<returnValue>:on","isExternal":true,"lineNumber":20,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"on","typeFullName":"ANY","resolvedMethod":"child_process:spawn:<returnValue>:on","isExternal":true,"lineNumber":20,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"test","typeFullName":"child_process:spawn:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"spawn","typeFullName":"ANY","resolvedMethod":"child_process:spawn","isExternal":null,"lineNumber":13,"columnNumber":13,"label":"CALL"},"invokedCalls":[{"callName":"on","resolvedMethod":"test.on","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":20,"columnNumber":0}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/ssl_hotfix.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"bin/ssl_hotfix.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"spawn","typeFullName":"ANY","resolvedMethod":"child_process:spawn","isExternal":true,"lineNumber":13,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"spawn","typeFullName":"ANY","resolvedMethod":"child_process:spawn","isExternal":true,"lineNumber":13,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"args","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"process.argv.slice","typeFullName":"ANY","resolvedMethod":"process:argv:<returnValue>:<member>(argv):slice","isExternal":null,"lineNumber":3,"columnNumber":13,"label":"CALL"},"invokedCalls":[{"callName":"join","resolvedMethod":"args.join","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":5,"columnNumber":23}],"argToCalls":[]},{"targetObj":{"name":"join","typeFullName":"ANY","resolvedMethod":"args.join","isExternal":true,"lineNumber":5,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"join","typeFullName":"ANY","resolvedMethod":"args.join","isExternal":true,"lineNumber":5,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"slice","typeFullName":"ANY","resolvedMethod":"process:argv:<returnValue>:<member>(argv):slice","isExternal":true,"lineNumber":3,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"slice","typeFullName":"ANY","resolvedMethod":"process:argv:<returnValue>:<member>(argv):slice","isExternal":true,"lineNumber":3,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"bin/ssl_hotfix.js::program:anonymous","signature":"","fileName":"bin/ssl_hotfix.js","lineNumber":20,"columnNumber":16,"usages":[{"targetObj":{"name":"function (code)","typeFullName":"ANY","lineNumber":20,"columnNumber":16,"label":"UNKNOWN"},"definedBy":{"name":"function (code)","typeFullName":"ANY","lineNumber":20,"columnNumber":16,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"code","typeFullName":"ANY","position":1,"lineNumber":20,"columnNumber":26,"label":"PARAM"},"definedBy":{"name":"code","typeFullName":"ANY","position":1,"lineNumber":20,"columnNumber":26,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"exit","resolvedMethod":"process.exit","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":21,"columnNumber":2}]},{"targetObj":{"name":"exit","typeFullName":"ANY","resolvedMethod":"process.exit","isExternal":true,"lineNumber":21,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"exit","typeFullName":"ANY","resolvedMethod":"process.exit","isExternal":true,"lineNumber":21,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"gulpfile.js::program","signature":"","fileName":"gulpfile.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"fs","typeFullName":"fs-extra:fs","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"gulpfile.js::program:require","isExternal":null,"lineNumber":2,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"emptyDir","resolvedMethod":"fs.emptyDir","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":13,"columnNumber":8},{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":17,"columnNumber":31},{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":18,"columnNumber":33},{"callName":"writeFile","resolvedMethod":"fs.writeFile","paramTypes":["__ecma.String","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":34,"columnNumber":8},{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":53,"columnNumber":31},{"callName":"writeFile","resolvedMethod":"fs.writeFile","paramTypes":["__ecma.String","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":64,"columnNumber":10},{"callName":"readFile","resolvedMethod":"fs.readFile","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":74,"columnNumber":29},{"callName":"writeFile","resolvedMethod":"fs.writeFile","paramTypes":["__ecma.String","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":78,"columnNumber":8}],"argToCalls":[]},{"targetObj":{"name":"axios","typeFullName":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosInstance","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"gulpfile.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"get","resolvedMethod":"axios.get","paramTypes":["ANY","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":38,"columnNumber":30},{"callName":"get","resolvedMethod":"axios.get","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":44,"columnNumber":38},{"callName":"isAxiosError","resolvedMethod":"axios.isAxiosError","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":66,"columnNumber":8}],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"gulp","typeFullName":"gulp:gulp","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"gulpfile.js::program:require","isExternal":null,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"task","resolvedMethod":"gulp.task","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":8,"columnNumber":2},{"callName":"task","resolvedMethod":"gulp.task","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":12,"columnNumber":14},{"callName":"task","resolvedMethod":"gulp.task","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":16,"columnNumber":14},{"callName":"task","resolvedMethod":"gulp.task","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":50,"columnNumber":20},{"callName":"task","resolvedMethod":"gulp.task","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":73,"columnNumber":12},{"callName":"series","resolvedMethod":"gulp.series","paramTypes":["__ecma.String","__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":85,"columnNumber":16}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"gulpfile.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"gulpfile.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"task","typeFullName":"ANY","resolvedMethod":"gulp:gulp:task","isExternal":true,"lineNumber":73,"columnNumber":12,"label":"CALL"},"definedBy":{"name":"task","typeFullName":"ANY","resolvedMethod":"gulp:gulp:task","isExternal":true,"lineNumber":73,"columnNumber":12,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"series","typeFullName":"ANY","resolvedMethod":"gulp:gulp:series","isExternal":true,"lineNumber":85,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"series","typeFullName":"ANY","resolvedMethod":"gulp:gulp:series","isExternal":true,"lineNumber":85,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"gulpfile.js::program:anonymous","signature":"","fileName":"gulpfile.js","lineNumber":8,"columnNumber":23,"usages":[{"targetObj":{"name":"async function()","typeFullName":"ANY","lineNumber":8,"columnNumber":23,"label":"UNKNOWN"},"definedBy":{"name":"async function()","typeFullName":"ANY","lineNumber":8,"columnNumber":23,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"gulpfile.js::program:anonymous1","signature":"","fileName":"gulpfile.js","lineNumber":12,"columnNumber":33,"usages":[{"targetObj":{"name":"async function()","typeFullName":"ANY","lineNumber":12,"columnNumber":33,"label":"UNKNOWN"},"definedBy":{"name":"async function()","typeFullName":"ANY","lineNumber":12,"columnNumber":33,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"emptyDir","typeFullName":"ANY","resolvedMethod":"fs-extra:fs:emptyDir","isExternal":true,"lineNumber":13,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"emptyDir","typeFullName":"ANY","resolvedMethod":"fs-extra:fs:emptyDir","isExternal":true,"lineNumber":13,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"gulpfile.js::program:anonymous2","signature":"","fileName":"gulpfile.js","lineNumber":16,"columnNumber":33,"usages":[{"targetObj":{"name":"writeFile","typeFullName":"ANY","resolvedMethod":"fs-extra:fs:writeFile","isExternal":true,"lineNumber":78,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"writeFile","typeFullName":"ANY","resolvedMethod":"fs-extra:fs:writeFile","isExternal":true,"lineNumber":78,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"readFile","typeFullName":"ANY","resolvedMethod":"fs-extra:fs:readFile","isExternal":true,"lineNumber":74,"columnNumber":29,"label":"CALL"},"definedBy":{"name":"readFile","typeFullName":"ANY","resolvedMethod":"fs-extra:fs:readFile","isExternal":true,"lineNumber":74,"columnNumber":29,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"stringify","typeFullName":"ANY","resolvedMethod":"JSON.stringify","isExternal":true,"lineNumber":64,"columnNumber":14,"label":"CALL"},"definedBy":{"name":"stringify","typeFullName":"ANY","resolvedMethod":"JSON.stringify","isExternal":true,"lineNumber":64,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"bower","typeFullName":"JSON.parse:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"JSON.parse","typeFullName":"JSON.parse","resolvedMethod":"JSON.parse","isExternal":null,"lineNumber":18,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"stringify","resolvedMethod":"JSON.stringify","paramTypes":["JSON.parse:<returnValue>","__ecma.Null","__ecma.Number"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":34,"columnNumber":35}]},{"targetObj":{"name":"async function ()","typeFullName":"ANY","lineNumber":16,"columnNumber":33,"label":"UNKNOWN"},"definedBy":{"name":"async function ()","typeFullName":"ANY","lineNumber":16,"columnNumber":33,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"gulpfile.js::program:anonymous3","signature":"","fileName":"gulpfile.js","lineNumber":50,"columnNumber":41,"usages":[{"targetObj":{"name":"async function ()","typeFullName":"ANY","lineNumber":50,"columnNumber":41,"label":"UNKNOWN"},"definedBy":{"name":"async function ()","typeFullName":"ANY","lineNumber":50,"columnNumber":41,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"npm","typeFullName":"JSON.parse:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"JSON.parse","typeFullName":"JSON.parse","resolvedMethod":"JSON.parse","isExternal":null,"lineNumber":53,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"stringify","resolvedMethod":"JSON.stringify","paramTypes":["JSON.parse:<returnValue>","__ecma.Null","__ecma.Number"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":64,"columnNumber":39}]},{"targetObj":{"name":"isAxiosError","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosInstance:isAxiosError","isExternal":true,"lineNumber":66,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"isAxiosError","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosInstance:isAxiosError","isExternal":true,"lineNumber":66,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"filter","typeFullName":"ANY","resolvedMethod":"Array<any>:filter","isExternal":true,"lineNumber":58,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"filter","typeFullName":"ANY","resolvedMethod":"Array<any>:filter","isExternal":true,"lineNumber":58,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"Array<any>:filter:<returnValue>:map","isExternal":true,"lineNumber":58,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"Array<any>:filter:<returnValue>:map","isExternal":true,"lineNumber":58,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"contributors","typeFullName":"Array<any>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"await getContributors","typeFullName":"ANY","resolvedMethod":"<operator>.await","isExternal":null,"lineNumber":56,"columnNumber":25,"label":"CALL"},"invokedCalls":[{"callName":"filter","resolvedMethod":".filter","paramTypes":["LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":58,"columnNumber":23}],"argToCalls":[]}]},{"code":"","fullName":"gulpfile.js::program:anonymous3:anonymous","signature":"","fileName":"gulpfile.js","lineNumber":60,"columnNumber":8,"usages":[{"targetObj":{"name":"({type, contributions})","typeFullName":"ANY","lineNumber":60,"columnNumber":8,"label":"UNKNOWN"},"definedBy":{"name":"({type, contributions})","typeFullName":"ANY","lineNumber":60,"columnNumber":8,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"type","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"param1_0.type","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":60,"columnNumber":10,"label":"CALL"},"invokedCalls":[{"callName":"toLowerCase","resolvedMethod":"type.toLowerCase","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":60,"columnNumber":35}],"argToCalls":[]},{"targetObj":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:toLowerCase","isExternal":true,"lineNumber":273,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:toLowerCase","isExternal":true,"lineNumber":273,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"gulpfile.js::program:anonymous3:anonymous1","signature":"","fileName":"gulpfile.js","lineNumber":62,"columnNumber":11,"usages":[{"targetObj":{"name":"({login, name, url})","typeFullName":"ANY","lineNumber":62,"columnNumber":11,"label":"UNKNOWN"},"definedBy":{"name":"({login, name, url})","typeFullName":"ANY","lineNumber":62,"columnNumber":11,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"gulpfile.js::program:anonymous4","signature":"","fileName":"gulpfile.js","lineNumber":73,"columnNumber":29,"usages":[{"targetObj":{"name":"async function ()","typeFullName":"ANY","lineNumber":73,"columnNumber":29,"label":"UNKNOWN"},"definedBy":{"name":"async function ()","typeFullName":"ANY","lineNumber":73,"columnNumber":29,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"Object.entries:<returnValue>:map","isExternal":true,"lineNumber":245,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"Object.entries:<returnValue>:map","isExternal":true,"lineNumber":245,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"gulpfile.js::program:anonymous4:anonymous","signature":"","fileName":"gulpfile.js","lineNumber":80,"columnNumber":9,"usages":[{"targetObj":{"name":"([key, value])","typeFullName":"ANY","lineNumber":80,"columnNumber":9,"label":"UNKNOWN"},"definedBy":{"name":"([key, value])","typeFullName":"ANY","lineNumber":80,"columnNumber":9,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"gulpfile.js::program:getContributors","signature":"","fileName":"gulpfile.js","lineNumber":37,"columnNumber":0,"usages":[{"targetObj":{"name":"all","typeFullName":"ANY","resolvedMethod":"Promise.all","isExternal":true,"lineNumber":67,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"all","typeFullName":"ANY","resolvedMethod":"Promise.all","isExternal":true,"lineNumber":67,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"Array<any>:map","isExternal":true,"lineNumber":17,"columnNumber":32,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"Array<any>:map","isExternal":true,"lineNumber":17,"columnNumber":32,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"user","typeFullName":"ANY","position":1,"lineNumber":37,"columnNumber":31,"label":"PARAM"},"definedBy":{"name":"user","typeFullName":"ANY","position":1,"lineNumber":37,"columnNumber":31,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"encodeURIComponent","resolvedMethod":"encodeURIComponent","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":39,"columnNumber":36}]},{"targetObj":{"name":"contributors","typeFullName":"Array<any>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"await axios.get","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":38,"columnNumber":23,"label":"CALL"},"invokedCalls":[{"callName":"map","resolvedMethod":"contributors.map","paramTypes":["LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":43,"columnNumber":21}],"argToCalls":[]},{"targetObj":{"name":"getContributors","typeFullName":"Promise<ANY[]>","resolvedMethod":"gulpfile.js::program:getContributors","isExternal":false,"lineNumber":56,"columnNumber":31,"label":"CALL"},"definedBy":{"name":"getContributors","typeFullName":"Promise<ANY[]>","resolvedMethod":"gulpfile.js::program:getContributors","isExternal":false,"lineNumber":56,"columnNumber":31,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"repo","typeFullName":"ANY","position":2,"lineNumber":37,"columnNumber":37,"label":"PARAM"},"definedBy":{"name":"repo","typeFullName":"ANY","position":2,"lineNumber":37,"columnNumber":37,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"encodeURIComponent","resolvedMethod":"encodeURIComponent","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":39,"columnNumber":64}]}]},{"code":"","fullName":"gulpfile.js::program:getContributors:anonymous","signature":"","fileName":"gulpfile.js","lineNumber":43,"columnNumber":38,"usages":[{"targetObj":{"name":"async (contributor)","typeFullName":"ANY","lineNumber":43,"columnNumber":38,"label":"UNKNOWN"},"definedBy":{"name":"async (contributor)","typeFullName":"ANY","lineNumber":43,"columnNumber":38,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"index.js::program","signature":"","fileName":"index.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"index.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"index.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"karma.conf.cjs::program","signature":"","fileName":"karma.conf.cjs","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"karma.conf.cjs::program:require","isExternal":true,"lineNumber":9,"columnNumber":14,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"karma.conf.cjs::program:require","isExternal":true,"lineNumber":9,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"karma.conf.cjs::program:anonymous","signature":"","fileName":"karma.conf.cjs","lineNumber":21,"columnNumber":17,"usages":[{"targetObj":{"name":"resolve","typeFullName":"ANY","resolvedMethod":"@rollup/plugin-node-resolve","isExternal":true,"lineNumber":169,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"resolve","typeFullName":"ANY","resolvedMethod":"@rollup/plugin-node-resolve","isExternal":true,"lineNumber":169,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"commonjs","typeFullName":"ANY","resolvedMethod":"@rollup/plugin-commonjs","isExternal":true,"lineNumber":170,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"commonjs","typeFullName":"ANY","resolvedMethod":"@rollup/plugin-commonjs","isExternal":true,"lineNumber":170,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"split","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:<member>(env):Browsers:split","isExternal":true,"lineNumber":23,"columnNumber":41,"label":"CALL"},"definedBy":{"name":"split","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:<member>(env):Browsers:split","isExternal":true,"lineNumber":23,"columnNumber":41,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"config","typeFullName":"ANY","position":1,"lineNumber":21,"columnNumber":26,"label":"PARAM"},"definedBy":{"name":"config","typeFullName":"ANY","position":1,"lineNumber":21,"columnNumber":26,"label":"PARAM"},"invokedCalls":[{"callName":"set","resolvedMethod":"config.set","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":139,"columnNumber":2}],"argToCalls":[]},{"targetObj":{"name":"function(config)","typeFullName":"ANY","lineNumber":21,"columnNumber":17,"label":"UNKNOWN"},"definedBy":{"name":"function(config)","typeFullName":"ANY","lineNumber":21,"columnNumber":17,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"keys","typeFullName":"ANY","resolvedMethod":"Object.keys","isExternal":true,"lineNumber":274,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"keys","typeFullName":"ANY","resolvedMethod":"Object.keys","isExternal":true,"lineNumber":274,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"Array<string>:forEach","isExternal":true,"lineNumber":41,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"Array<string>:forEach","isExternal":true,"lineNumber":41,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"set","typeFullName":"ANY","resolvedMethod":"config.set","isExternal":true,"lineNumber":139,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"set","typeFullName":"ANY","resolvedMethod":"config.set","isExternal":true,"lineNumber":139,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"karma.conf.cjs::program:anonymous:anonymous","signature":"","fileName":"karma.conf.cjs","lineNumber":41,"columnNumber":20,"usages":[{"targetObj":{"name":"function(opt)","typeFullName":"ANY","lineNumber":41,"columnNumber":20,"label":"UNKNOWN"},"definedBy":{"name":"function(opt)","typeFullName":"ANY","lineNumber":41,"columnNumber":20,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"karma.conf.cjs::program:createCustomLauncher","signature":"","fileName":"karma.conf.cjs","lineNumber":12,"columnNumber":0,"usages":[{"targetObj":{"name":"createCustomLauncher","typeFullName":"ANY","resolvedMethod":"karma.conf.cjs::program:createCustomLauncher","isExternal":false,"lineNumber":96,"columnNumber":32,"label":"CALL"},"definedBy":{"name":"createCustomLauncher","typeFullName":"ANY","resolvedMethod":"karma.conf.cjs::program:createCustomLauncher","isExternal":false,"lineNumber":96,"columnNumber":32,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/adapters.js::program","signature":"","fileName":"lib/adapters/adapters.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/adapters.js::program:require","isExternal":null,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"forEach","resolvedMethod":"utils.forEach","paramTypes":["{ http: (config: ANY) => Promise<any>; xhr: (config: ANY) => Promise<any>; fetch: (config: ANY) => Promise<any>; }","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":13,"columnNumber":0},{"callName":"isFunction","resolvedMethod":"utils.isFunction","paramTypes":["Array<any>:<indexAccess>"],"returnType":"ANY","isExternal":true,"lineNumber":26,"columnNumber":38},{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["Array<any>"],"returnType":"ANY","isExternal":true,"lineNumber":30,"columnNumber":15}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/adapters.js::program:require","isExternal":true,"lineNumber":5,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/adapters.js::program:require","isExternal":true,"lineNumber":5,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:forEach","isExternal":true,"lineNumber":197,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:forEach","isExternal":true,"lineNumber":197,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/adapters.js::program:anonymous","signature":"","fileName":"lib/adapters/adapters.js","lineNumber":13,"columnNumber":29,"usages":[{"targetObj":{"name":"(fn, value)","typeFullName":"ANY","lineNumber":13,"columnNumber":29,"label":"UNKNOWN"},"definedBy":{"name":"(fn, value)","typeFullName":"ANY","lineNumber":13,"columnNumber":29,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"fn","typeFullName":"ANY","position":1,"lineNumber":13,"columnNumber":30,"label":"PARAM"},"definedBy":{"name":"fn","typeFullName":"ANY","position":1,"lineNumber":13,"columnNumber":30,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"defineProperty","resolvedMethod":"Object.defineProperty","paramTypes":["ANY","__ecma.String","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":16,"columnNumber":6},{"callName":"defineProperty","resolvedMethod":"Object.defineProperty","paramTypes":["ANY","__ecma.String","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":20,"columnNumber":4}]},{"targetObj":{"name":"defineProperty","typeFullName":"ANY","resolvedMethod":"Object.defineProperty","isExternal":true,"lineNumber":381,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"defineProperty","typeFullName":"ANY","resolvedMethod":"Object.defineProperty","isExternal":true,"lineNumber":381,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/adapters.js::program:anonymous3","signature":"","fileName":"lib/adapters/adapters.js","lineNumber":29,"columnNumber":14,"usages":[{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"Array<string>:map","isExternal":true,"lineNumber":67,"columnNumber":44,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"Array<string>:map","isExternal":true,"lineNumber":67,"columnNumber":44,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isArray","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isArray","isExternal":true,"lineNumber":154,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"isArray","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isArray","isExternal":true,"lineNumber":154,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"adapters","typeFullName":"ANY","position":1,"lineNumber":29,"columnNumber":15,"label":"PARAM"},"definedBy":{"name":"adapters","typeFullName":"ANY","position":1,"lineNumber":29,"columnNumber":15,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":30,"columnNumber":15},{"callName":"","resolvedMethod":"_tmp_4.push","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":30,"columnNumber":53}]},{"targetObj":{"name":"(adapters)","typeFullName":"ANY","lineNumber":29,"columnNumber":14,"label":"UNKNOWN"},"definedBy":{"name":"(adapters)","typeFullName":"ANY","lineNumber":29,"columnNumber":14,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"join","typeFullName":"ANY","resolvedMethod":"Array<string>:map:<returnValue>:join","isExternal":true,"lineNumber":67,"columnNumber":44,"label":"CALL"},"definedBy":{"name":"join","typeFullName":"ANY","resolvedMethod":"Array<string>:map:<returnValue>:join","isExternal":true,"lineNumber":67,"columnNumber":44,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"nameOrAdapter","typeFullName":"Array<any>:<indexAccess>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"adapters[i]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":39,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"isResolvedHandle","resolvedMethod":"isResolvedHandle","paramTypes":["Array<any>:<indexAccess>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":44,"columnNumber":11},{"callName":"String","resolvedMethod":"String","paramTypes":["Array<any>:<indexAccess>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":45,"columnNumber":38}]},{"targetObj":{"name":"reasons","typeFullName":"Array<string>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"Object.entries","typeFullName":"ANY","resolvedMethod":"Object.entries:<returnValue>:map","isExternal":null,"lineNumber":61,"columnNumber":22,"label":"CALL"},"invokedCalls":[{"callName":"map","resolvedMethod":"reasons.map","paramTypes":["(reason: ANY) => __ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":67,"columnNumber":44}],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/adapters.js::program:anonymous3:anonymous","signature":"","fileName":"lib/adapters/adapters.js","lineNumber":62,"columnNumber":13,"usages":[{"targetObj":{"name":"([id, state])","typeFullName":"ANY","lineNumber":62,"columnNumber":13,"label":"UNKNOWN"},"definedBy":{"name":"([id, state])","typeFullName":"ANY","lineNumber":62,"columnNumber":13,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/adapters.js::program:isResolvedHandle","signature":"","fileName":"lib/adapters/adapters.js","lineNumber":26,"columnNumber":25,"usages":[{"targetObj":{"name":"isResolvedHandle","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/adapters/adapters.js::program:isResolvedHandle","isExternal":false,"lineNumber":44,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"isResolvedHandle","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/adapters/adapters.js::program:isResolvedHandle","isExternal":false,"lineNumber":44,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"adapter","typeFullName":"ANY","position":1,"lineNumber":26,"columnNumber":26,"label":"PARAM"},"definedBy":{"name":"adapter","typeFullName":"ANY","position":1,"lineNumber":26,"columnNumber":26,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isFunction","resolvedMethod":"utils.isFunction","paramTypes":["Array<any>:<indexAccess>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":26,"columnNumber":38}]},{"targetObj":{"name":"isFunction","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isFunction","isExternal":true,"lineNumber":112,"columnNumber":7,"label":"CALL"},"definedBy":{"name":"isFunction","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isFunction","isExternal":true,"lineNumber":112,"columnNumber":7,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/adapters.js::program:renderReason","signature":"","fileName":"lib/adapters/adapters.js","lineNumber":24,"columnNumber":21,"usages":[{"targetObj":{"name":"renderReason","typeFullName":"__ecma.String","resolvedMethod":"lib/adapters/adapters.js::program:renderReason","isExternal":false,"lineNumber":67,"columnNumber":89,"label":"CALL"},"definedBy":{"name":"renderReason","typeFullName":"__ecma.String","resolvedMethod":"lib/adapters/adapters.js::program:renderReason","isExternal":false,"lineNumber":67,"columnNumber":89,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"encodeText","typeFullName":"((str: ANY) => Uint8Array) | ((str: ANY) => Promise<Uint8Array>)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"isFetchSupported && ","typeFullName":"ANY","resolvedMethod":"<operator>.logicalAnd","isExternal":null,"lineNumber":15,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"TextEncoder","resolvedMethod":"&&","paramTypes":[],"returnType":"TextEncoder","position":1,"isExternal":true,"lineNumber":15,"columnNumber":6}]},{"targetObj":{"name":"AxiosError","typeFullName":"lib/core/AxiosError.js::program:AxiosError","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["__ecma.Boolean","ANY","ANY","__ecma.Request","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":225,"columnNumber":10}],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:require","isExternal":null,"lineNumber":2,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"Response","resolvedMethod":"utils.isReadableStream","paramTypes":["__ecma.String"],"returnType":"Response","isExternal":true,"lineNumber":46,"columnNumber":13},{"callName":"isFunction","resolvedMethod":"utils.isFunction","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":55,"columnNumber":43},{"callName":"isBlob","resolvedMethod":"utils.isBlob","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":67,"columnNumber":5},{"callName":"isSpecCompliantForm","resolvedMethod":"utils.isSpecCompliantForm","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":71,"columnNumber":5},{"callName":"isArrayBufferView","resolvedMethod":"utils.isArrayBufferView","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":79,"columnNumber":5},{"callName":"isArrayBuffer","resolvedMethod":"utils.isArrayBuffer","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":79,"columnNumber":38},{"callName":"isURLSearchParams","resolvedMethod":"utils.isURLSearchParams","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":83,"columnNumber":5},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":87,"columnNumber":5},{"callName":"toFiniteNumber","resolvedMethod":"utils.toFiniteNumber","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":93,"columnNumber":17},{"callName":"isFormData","resolvedMethod":"utils.isFormData","paramTypes":["ReadableStream<Uint8Array>"],"returnType":"ANY","isExternal":true,"lineNumber":139,"columnNumber":10},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":153,"columnNumber":9},{"callName":"toFiniteNumber","resolvedMethod":"utils.toFiniteNumber","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":181,"columnNumber":36},{"callName":"findKey","resolvedMethod":"utils.findKey","paramTypes":["{ stream: (res: ANY) => ANY; }","__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":199,"columnNumber":39}],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:require","isExternal":true,"lineNumber":9,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:require","isExternal":true,"lineNumber":9,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"DEFAULT_CHUNK_SIZE","typeFullName":"__ecma.Number","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"64 * 1024","typeFullName":"ANY","resolvedMethod":"<operator>.multiplication","isExternal":null,"lineNumber":43,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"trackStream","resolvedMethod":"trackStream","paramTypes":["ANY","__ecma.Number","lib/helpers/progressEventReducer.js::program:progressEventDecorator:<returnValue>:<indexAccess>","lib/helpers/progressEventReducer.js::program:progressEventDecorator:<returnValue>:<indexAccess>"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":149,"columnNumber":15},{"callName":"trackStream","resolvedMethod":"trackStream","paramTypes":["ANY","__ecma.Number","lib/helpers/progressEventReducer.js::program:progressEventDecorator:<returnValue>:<indexAccess>","LAMBDA"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":189,"columnNumber":8}]},{"targetObj":{"name":"AxiosHeaders","typeFullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:require","isExternal":null,"lineNumber":6,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"from","resolvedMethod":"AxiosHeaders.from","paramTypes":["ANY"],"returnType":"ANY","isExternal":false,"lineNumber":206,"columnNumber":17}],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":16,"columnNumber":5,"usages":[{"targetObj":{"name":"anonymous","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:anonymous","isExternal":false,"lineNumber":16,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"anonymous","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:anonymous","isExternal":false,"lineNumber":16,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"encoder","typeFullName":"{ new (): TextEncoder; prototype: TextEncoder; }","position":1,"lineNumber":16,"columnNumber":6,"label":"PARAM"},"definedBy":{"name":"encoder","typeFullName":"{ new (): TextEncoder; prototype: TextEncoder; }","position":1,"lineNumber":16,"columnNumber":6,"label":"PARAM"},"invokedCalls":[{"callName":"encode","resolvedMethod":"encoder.encode","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":16,"columnNumber":27}],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous1","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":17,"columnNumber":4,"usages":[{"targetObj":{"name":"async (str)","typeFullName":"ANY","lineNumber":17,"columnNumber":4,"label":"UNKNOWN"},"definedBy":{"name":"async (str)","typeFullName":"ANY","lineNumber":17,"columnNumber":4,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"arrayBuffer","typeFullName":"ANY","resolvedMethod":"__ecma.Response:arrayBuffer","isExternal":true,"lineNumber":17,"columnNumber":40,"label":"CALL"},"definedBy":{"name":"arrayBuffer","typeFullName":"ANY","resolvedMethod":"__ecma.Response:arrayBuffer","isExternal":true,"lineNumber":17,"columnNumber":40,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous3","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":28,"columnNumber":64,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":28,"columnNumber":64,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":28,"columnNumber":64,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"hasContentType","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new Request","typeFullName":"Request","resolvedMethod":"Request","isExternal":null,"lineNumber":31,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"Request","resolvedMethod":"Request","paramTypes":[],"returnType":"Request","position":1,"isExternal":true,"lineNumber":31,"columnNumber":8}]},{"targetObj":{"name":"has","typeFullName":"ANY","resolvedMethod":"new Request","isExternal":true,"lineNumber":31,"columnNumber":25,"label":"CALL"},"definedBy":{"name":"has","typeFullName":"ANY","resolvedMethod":"new Request","isExternal":true,"lineNumber":31,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.new","typeFullName":"ANY","resolvedMethod":"__ecma.ReadableStream:<operator>.new","isExternal":true,"lineNumber":32,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"<operator>.new","typeFullName":"ANY","resolvedMethod":"__ecma.ReadableStream:<operator>.new","isExternal":true,"lineNumber":32,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous3:duplex","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":34,"columnNumber":4,"usages":[{"targetObj":{"name":"get duplex()","typeFullName":"ANY","lineNumber":34,"columnNumber":4,"label":"UNKNOWN"},"definedBy":{"name":"get duplex()","typeFullName":"ANY","lineNumber":34,"columnNumber":4,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous4","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":46,"columnNumber":7,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":46,"columnNumber":7,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":46,"columnNumber":7,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isReadableStream","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isReadableStream","isExternal":true,"lineNumber":105,"columnNumber":34,"label":"CALL"},"definedBy":{"name":"isReadableStream","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isReadableStream","isExternal":true,"lineNumber":105,"columnNumber":34,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous5","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":50,"columnNumber":37,"usages":[{"targetObj":{"name":"(res)","typeFullName":"ANY","lineNumber":50,"columnNumber":37,"label":"UNKNOWN"},"definedBy":{"name":"(res)","typeFullName":"ANY","lineNumber":50,"columnNumber":37,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous6","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":53,"columnNumber":22,"usages":[{"targetObj":{"name":"anonymous6","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:anonymous6","isExternal":false,"lineNumber":53,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"anonymous6","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:anonymous6","isExternal":false,"lineNumber":53,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"res","typeFullName":"{ new (body?: BodyInit | __ecma.Null, init?: ResponseInit): Response; prototype: Response; error(): Response; json(data: ANY, init?: ResponseInit): Response; redirect(url: __ecma.String | URL, status?: __ecma.Number): Response; }","position":1,"lineNumber":53,"columnNumber":23,"label":"PARAM"},"definedBy":{"name":"res","typeFullName":"{ new (body?: BodyInit | __ecma.Null, init?: ResponseInit): Response; prototype: Response; error(): Response; json(data: ANY, init?: ResponseInit): Response; redirect(url: __ecma.String | URL, status?: __ecma.Number): Response; }","position":1,"lineNumber":53,"columnNumber":23,"label":"PARAM"},"invokedCalls":[{"callName":"type","resolvedMethod":"res[type]","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":55,"columnNumber":82}],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous6:anonymous","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":54,"columnNumber":64,"usages":[{"targetObj":{"name":"type => { !resolvers[type] && ","typeFullName":"ANY","lineNumber":54,"columnNumber":64,"label":"UNKNOWN"},"definedBy":{"name":"type => { !resolvers[type] && ","typeFullName":"ANY","lineNumber":54,"columnNumber":64,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous6:anonymous:anonymous","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":55,"columnNumber":73,"usages":[{"targetObj":{"name":"(res)","typeFullName":"ANY","lineNumber":55,"columnNumber":73,"label":"UNKNOWN"},"definedBy":{"name":"(res)","typeFullName":"ANY","lineNumber":55,"columnNumber":73,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"res","typeFullName":"ANY","position":1,"lineNumber":55,"columnNumber":74,"label":"PARAM"},"definedBy":{"name":"res","typeFullName":"ANY","position":1,"lineNumber":55,"columnNumber":74,"label":"PARAM"},"invokedCalls":[{"callName":"type","resolvedMethod":"res[type]","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":55,"columnNumber":82}],"argToCalls":[]},{"targetObj":{"name":"type","typeFullName":"ANY","resolvedMethod":"{ new (body?: BodyInit | __ecma:Null, init?: ResponseInit): Response; prototype: Response; error(): Response; json(data: ANY, init?: ResponseInit): Response; redirect(url: __ecma:String | URL, status?: __ecma:Number): Response; }:type","isExternal":true,"lineNumber":55,"columnNumber":82,"label":"CALL"},"definedBy":{"name":"type","typeFullName":"ANY","resolvedMethod":"{ new (body?: BodyInit | __ecma:Null, init?: ResponseInit): Response; prototype: Response; error(): Response; json(data: ANY, init?: ResponseInit): Response; redirect(url: __ecma:String | URL, status?: __ecma:Number): Response; }:type","isExternal":true,"lineNumber":55,"columnNumber":82,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"type","typeFullName":"ANY","resolvedMethod":"{ new (body?: BodyInit | __ecma.Null, init?: ResponseInit): Response; prototype: Response; error(): Response; json(data: ANY, init?: ResponseInit): Response; redirect(url: __ecma.String | URL, status?: __ecma.Number): Response; }:type","isExternal":true,"lineNumber":55,"columnNumber":82,"label":"CALL"},"definedBy":{"name":"type","typeFullName":"ANY","resolvedMethod":"{ new (body?: BodyInit | __ecma.Null, init?: ResponseInit): Response; prototype: Response; error(): Response; json(data: ANY, init?: ResponseInit): Response; redirect(url: __ecma.String | URL, status?: __ecma.Number): Response; }:type","isExternal":true,"lineNumber":55,"columnNumber":82,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous6:anonymous:anonymous1","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":56,"columnNumber":6,"usages":[{"targetObj":{"name":"(_, config)","typeFullName":"ANY","lineNumber":56,"columnNumber":6,"label":"UNKNOWN"},"definedBy":{"name":"(_, config)","typeFullName":"ANY","lineNumber":56,"columnNumber":6,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous9","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":98,"columnNumber":36,"usages":[{"targetObj":{"name":"onProgress","typeFullName":"lib/helpers/progressEventReducer.js::program:progressEventDecorator:<returnValue>:<indexAccess>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_30[0]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":183,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"trackStream","resolvedMethod":"trackStream","paramTypes":["ANY","__ecma.Number","lib/helpers/progressEventReducer.js::program:progressEventDecorator:<returnValue>:<indexAccess>","lib/helpers/progressEventReducer.js::program:progressEventDecorator:<returnValue>:<indexAccess>"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":149,"columnNumber":15},{"callName":"trackStream","resolvedMethod":"trackStream","paramTypes":["ANY","__ecma.Number","lib/helpers/progressEventReducer.js::program:progressEventDecorator:<returnValue>:<indexAccess>","LAMBDA"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":189,"columnNumber":8}]},{"targetObj":{"name":"findKey","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:findKey","isExternal":true,"lineNumber":204,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"findKey","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:findKey","isExternal":true,"lineNumber":204,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"flush","typeFullName":"lib/helpers/progressEventReducer.js::program:progressEventDecorator:<returnValue>:<indexAccess>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_30[1]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":183,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"trackStream","resolvedMethod":"trackStream","paramTypes":["ANY","__ecma.Number","lib/helpers/progressEventReducer.js::program:progressEventDecorator:<returnValue>:<indexAccess>","lib/helpers/progressEventReducer.js::program:progressEventDecorator:<returnValue>:<indexAccess>"],"returnType":"ANY","position":4,"isExternal":false,"lineNumber":149,"columnNumber":15}]},{"targetObj":{"name":"async (config)","typeFullName":"ANY","lineNumber":98,"columnNumber":36,"label":"UNKNOWN"},"definedBy":{"name":"async (config)","typeFullName":"ANY","lineNumber":98,"columnNumber":36,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"from","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosError.js::program:AxiosError:from","isExternal":true,"lineNumber":118,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"from","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosError.js::program:AxiosError:from","isExternal":true,"lineNumber":118,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"composedSignal","typeFullName":"void","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"composeSignals","typeFullName":"void","resolvedMethod":"lib/helpers/composeSignals.js::program:composeSignals","isExternal":null,"lineNumber":116,"columnNumber":23,"label":"CALL"},"invokedCalls":[{"callName":"unsubscribe","resolvedMethod":"composedSignal.unsubscribe","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":121,"columnNumber":6}],"argToCalls":[]},{"targetObj":{"name":"resolveConfig","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig","isExternal":true,"lineNumber":16,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"resolveConfig","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig","isExternal":true,"lineNumber":16,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"onDownloadProgress","typeFullName":"Array<any>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_16.onDownloadProgress","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":106,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"asyncDecorator","resolvedMethod":"asyncDecorator","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":185,"columnNumber":29}]},{"targetObj":{"name":"config","typeFullName":"ANY","position":1,"lineNumber":98,"columnNumber":43,"label":"PARAM"},"definedBy":{"name":"config","typeFullName":"ANY","position":1,"lineNumber":98,"columnNumber":43,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"resolveConfig","resolvedMethod":"resolveConfig","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":112,"columnNumber":6},{"callName":"utils.findKey(resolvers, responseType) || 'text'","resolvedMethod":"resolvers[utils.findKey","paramTypes":["__ecma.Response","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":199,"columnNumber":29},{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["__ecma.Boolean","ANY","ANY","__ecma.Request","LAMBDA"],"returnType":"ANY","position":3,"isExternal":true,"lineNumber":225,"columnNumber":10}]},{"targetObj":{"name":"normalize","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(headers):normalize","isExternal":true,"lineNumber":164,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"normalize","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(headers):normalize","isExternal":true,"lineNumber":164,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"setContentType","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(headers):setContentType","isExternal":true,"lineNumber":140,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"setContentType","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(headers):setContentType","isExternal":true,"lineNumber":140,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"withCredentials","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"withCredentials ? \"include\" : \"omit\"","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":null,"lineNumber":154,"columnNumber":24,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":153,"columnNumber":9}]},{"targetObj":{"name":"response","typeFullName":"__ecma.Response","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new Response","typeFullName":"Response","resolvedMethod":"Response","isExternal":null,"lineNumber":188,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"Response","resolvedMethod":"Response","paramTypes":["ReadableStream<Uint8Array>","object"],"returnType":"Response","position":1,"isExternal":true,"lineNumber":188,"columnNumber":6},{"callName":"utils.findKey(resolvers, responseType) || 'text'","resolvedMethod":"resolvers[utils.findKey","paramTypes":["__ecma.Response","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":199,"columnNumber":29}]},{"targetObj":{"name":"toAbortSignal","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(cancelToken):toAbortSignal","isExternal":true,"lineNumber":116,"columnNumber":62,"label":"CALL"},"definedBy":{"name":"toAbortSignal","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(cancelToken):toAbortSignal","isExternal":true,"lineNumber":116,"columnNumber":62,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"headers","typeFullName":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(headers)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_16.headers","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":109,"columnNumber":4,"label":"CALL"},"invokedCalls":[{"callName":"setContentType","resolvedMethod":"headers.setContentType","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":140,"columnNumber":8},{"callName":"normalize","resolvedMethod":"headers.normalize","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":164,"columnNumber":15}],"argToCalls":[{"callName":"resolveBodyLength","resolvedMethod":"resolveBodyLength","paramTypes":["../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(headers)","ReadableStream<Uint8Array>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":129,"columnNumber":36}]},{"targetObj":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:toUpperCase","isExternal":true,"lineNumber":173,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:toUpperCase","isExternal":true,"lineNumber":173,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_request","typeFullName":"__ecma.Request","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new Request","typeFullName":"Request","resolvedMethod":"Request","isExternal":null,"lineNumber":131,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"Request","resolvedMethod":"Request","paramTypes":["../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(url)","ANY"],"returnType":"Request","position":1,"isExternal":true,"lineNumber":131,"columnNumber":10}]},{"targetObj":{"name":"signal","typeFullName":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(signal)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_16.signal","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":103,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"","resolvedMethod":"_tmp_18.push","paramTypes":["../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(signal)"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":116,"columnNumber":39}]},{"targetObj":{"name":"isFormData","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isFormData","isExternal":true,"lineNumber":69,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"isFormData","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isFormData","isExternal":true,"lineNumber":69,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"requestContentLength","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"await resolveBodyLength","typeFullName":"ANY","resolvedMethod":"<operator>.await","isExternal":null,"lineNumber":129,"columnNumber":30,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"progressEventDecorator","resolvedMethod":"progressEventDecorator","paramTypes":["ANY","Function"],"returnType":"Function","position":1,"isExternal":false,"lineNumber":144,"columnNumber":36}]},{"targetObj":{"name":"responseType","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"responseType || 'text'","typeFullName":"ANY","resolvedMethod":"<operator>.logicalOr","isExternal":null,"lineNumber":197,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"findKey","resolvedMethod":"utils.findKey","paramTypes":["{ stream: (res: ANY) => ANY; }","__ecma.Boolean"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":199,"columnNumber":39}]},{"targetObj":{"name":"data","typeFullName":"ReadableStream<Uint8Array>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"trackStream","typeFullName":"ReadableStream<Uint8Array>","resolvedMethod":"lib/helpers/trackStream.js::program:trackStream","isExternal":null,"lineNumber":149,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"resolveBodyLength","resolvedMethod":"resolveBodyLength","paramTypes":["../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(headers)","ReadableStream<Uint8Array>"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":129,"columnNumber":36},{"callName":"isFormData","resolvedMethod":"utils.isFormData","paramTypes":["ReadableStream<Uint8Array>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":139,"columnNumber":10}]},{"targetObj":{"name":"responseContentLength","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFiniteNumber:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"utils.toFiniteNumber","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFiniteNumber","isExternal":null,"lineNumber":181,"columnNumber":36,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"progressEventDecorator","resolvedMethod":"progressEventDecorator","paramTypes":["{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFiniteNumber:<returnValue>","Function"],"returnType":"Function","position":1,"isExternal":false,"lineNumber":183,"columnNumber":56}]},{"targetObj":{"name":"fetch","typeFullName":"ANY","resolvedMethod":"fetch","isExternal":true,"lineNumber":170,"columnNumber":25,"label":"CALL"},"definedBy":{"name":"fetch","typeFullName":"ANY","resolvedMethod":"fetch","isExternal":true,"lineNumber":170,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils.findKey(resolvers, responseType) || 'text'","typeFullName":"ANY","resolvedMethod":"{ stream: (res: ANY) => ANY; }:utils.findKey(resolvers, responseType) || 'text'","isExternal":true,"lineNumber":199,"columnNumber":29,"label":"CALL"},"definedBy":{"name":"utils.findKey(resolvers, responseType) || 'text'","typeFullName":"ANY","resolvedMethod":"{ stream: (res: ANY) => ANY; }:utils.findKey(resolvers, responseType) || 'text'","isExternal":true,"lineNumber":199,"columnNumber":29,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"onUploadProgress","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_16.onUploadProgress","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":107,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"asyncDecorator","resolvedMethod":"asyncDecorator","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":146,"columnNumber":31}]},{"targetObj":{"name":"request","typeFullName":"__ecma.Request","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new Request","typeFullName":"Request","resolvedMethod":"Request","isExternal":null,"lineNumber":160,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"Request","resolvedMethod":"Request","paramTypes":["../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(url)","ANY"],"returnType":"Request","position":1,"isExternal":true,"lineNumber":160,"columnNumber":4},{"callName":"fetch","resolvedMethod":"fetch","paramTypes":["__ecma.Request"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":170,"columnNumber":25},{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["__ecma.Boolean","ANY","ANY","__ecma.Request","LAMBDA"],"returnType":"ANY","position":4,"isExternal":true,"lineNumber":225,"columnNumber":10}]},{"targetObj":{"name":"get","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(headers):get","isExternal":true,"lineNumber":181,"columnNumber":57,"label":"CALL"},"definedBy":{"name":"get","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(headers):get","isExternal":true,"lineNumber":181,"columnNumber":57,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.in","typeFullName":"ANY","resolvedMethod":"<operator>.in","isExternal":true,"lineNumber":646,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"<operator>.in","typeFullName":"ANY","resolvedMethod":"<operator>.in","isExternal":true,"lineNumber":646,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"contentTypeHeader","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_request.headers.get","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(headers):get","isExternal":null,"lineNumber":139,"columnNumber":57,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"setContentType","resolvedMethod":"headers.setContentType","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":140,"columnNumber":8}]},{"targetObj":{"name":"timeout","typeFullName":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(timeout)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_16.timeout","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":105,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"composeSignals","resolvedMethod":"composeSignals","paramTypes":["ANY","../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(timeout)"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":116,"columnNumber":23}]},{"targetObj":{"name":"cancelToken","typeFullName":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(cancelToken)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_16.cancelToken","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":104,"columnNumber":4,"label":"CALL"},"invokedCalls":[{"callName":"toAbortSignal","resolvedMethod":"cancelToken.toAbortSignal","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":116,"columnNumber":62}],"argToCalls":[]},{"targetObj":{"name":"method","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_16.method","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":101,"columnNumber":4,"label":"CALL"},"invokedCalls":[{"callName":"toUpperCase","resolvedMethod":"method.toUpperCase","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":163,"columnNumber":14}],"argToCalls":[]},{"targetObj":{"name":"toJSON","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(headers):normalize:<returnValue>:toJSON","isExternal":true,"lineNumber":164,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"toJSON","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(headers):normalize:<returnValue>:toJSON","isExternal":true,"lineNumber":164,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous9:anonymous","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":120,"columnNumber":71,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":120,"columnNumber":71,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":120,"columnNumber":71,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"unsubscribe","typeFullName":"ANY","resolvedMethod":"AbortSignal:unsubscribe","isExternal":true,"lineNumber":121,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"unsubscribe","typeFullName":"ANY","resolvedMethod":"AbortSignal:unsubscribe","isExternal":true,"lineNumber":121,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"unsubscribe","typeFullName":"ANY","resolvedMethod":"void:unsubscribe","isExternal":true,"lineNumber":32,"columnNumber":31,"label":"CALL"},"definedBy":{"name":"unsubscribe","typeFullName":"ANY","resolvedMethod":"void:unsubscribe","isExternal":true,"lineNumber":32,"columnNumber":31,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous9:anonymous1","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":177,"columnNumber":50,"usages":[{"targetObj":{"name":"prop => { options[prop] = response[prop]; }","typeFullName":"ANY","lineNumber":177,"columnNumber":50,"label":"UNKNOWN"},"definedBy":{"name":"prop => { options[prop] = response[prop]; }","typeFullName":"ANY","lineNumber":177,"columnNumber":50,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous9:anonymous2","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":189,"columnNumber":67,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":189,"columnNumber":67,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":189,"columnNumber":67,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"flush","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:flush","isExternal":true,"lineNumber":190,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"flush","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:flush","isExternal":true,"lineNumber":190,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"unsubscribe","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:unsubscribe","isExternal":true,"lineNumber":214,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"unsubscribe","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:unsubscribe","isExternal":true,"lineNumber":214,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous9:anonymous3","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":203,"columnNumber":29,"usages":[{"targetObj":{"name":"(resolve, reject)","typeFullName":"ANY","lineNumber":203,"columnNumber":29,"label":"UNKNOWN"},"definedBy":{"name":"(resolve, reject)","typeFullName":"ANY","lineNumber":203,"columnNumber":29,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"resolve","typeFullName":"(value: ANY) => void","position":1,"lineNumber":203,"columnNumber":30,"label":"PARAM"},"definedBy":{"name":"resolve","typeFullName":"(value: ANY) => void","position":1,"lineNumber":203,"columnNumber":30,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"settle","resolvedMethod":"settle","paramTypes":["(value: ANY) => void","(reason?: ANY) => void","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":204,"columnNumber":6}]},{"targetObj":{"name":"reject","typeFullName":"(reason?: ANY) => void","position":2,"lineNumber":203,"columnNumber":39,"label":"PARAM"},"definedBy":{"name":"reject","typeFullName":"(reason?: ANY) => void","position":2,"lineNumber":203,"columnNumber":39,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"settle","resolvedMethod":"settle","paramTypes":["(value: ANY) => void","(reason?: ANY) => void","ANY"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":204,"columnNumber":6}]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:anonymous:anonymous","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":16,"columnNumber":18,"usages":[{"targetObj":{"name":"(str)","typeFullName":"ANY","lineNumber":16,"columnNumber":18,"label":"UNKNOWN"},"definedBy":{"name":"(str)","typeFullName":"ANY","lineNumber":16,"columnNumber":18,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"str","typeFullName":"ANY","position":1,"lineNumber":16,"columnNumber":19,"label":"PARAM"},"definedBy":{"name":"str","typeFullName":"ANY","position":1,"lineNumber":16,"columnNumber":19,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"encode","resolvedMethod":"encoder.encode","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":16,"columnNumber":27}]},{"targetObj":{"name":"encode","typeFullName":"ANY","resolvedMethod":"{ new (): TextEncoder; prototype: TextEncoder; }:encode","isExternal":true,"lineNumber":16,"columnNumber":27,"label":"CALL"},"definedBy":{"name":"encode","typeFullName":"ANY","resolvedMethod":"{ new (): TextEncoder; prototype: TextEncoder; }:encode","isExternal":true,"lineNumber":16,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:getBodyLength","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":62,"columnNumber":22,"usages":[{"targetObj":{"name":"isBlob","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isBlob","isExternal":true,"lineNumber":123,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"isBlob","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isBlob","isExternal":true,"lineNumber":123,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isArrayBufferView","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isArrayBufferView","isExternal":true,"lineNumber":66,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"isArrayBufferView","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isArrayBufferView","isExternal":true,"lineNumber":66,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"arrayBuffer","typeFullName":"ANY","resolvedMethod":"{ new (input: RequestInfo | URL, init?: RequestInit): Request; prototype: Request; }:arrayBuffer","isExternal":true,"lineNumber":76,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"arrayBuffer","typeFullName":"ANY","resolvedMethod":"{ new (input: RequestInfo | URL, init?: RequestInit): Request; prototype: Request; }:arrayBuffer","isExternal":true,"lineNumber":76,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"encodeText","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:encodeText","isExternal":true,"lineNumber":88,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"encodeText","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:encodeText","isExternal":true,"lineNumber":88,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isArrayBuffer","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isArrayBuffer","isExternal":true,"lineNumber":127,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"isArrayBuffer","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isArrayBuffer","isExternal":true,"lineNumber":127,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isString","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isString","isExternal":true,"lineNumber":199,"columnNumber":22,"label":"CALL"},"definedBy":{"name":"isString","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isString","isExternal":true,"lineNumber":199,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"body","typeFullName":"ANY","position":1,"lineNumber":62,"columnNumber":29,"label":"PARAM"},"definedBy":{"name":"body","typeFullName":"ANY","position":1,"lineNumber":62,"columnNumber":29,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isBlob","resolvedMethod":"utils.isBlob","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":67,"columnNumber":5},{"callName":"isSpecCompliantForm","resolvedMethod":"utils.isSpecCompliantForm","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":71,"columnNumber":5},{"callName":"isArrayBufferView","resolvedMethod":"utils.isArrayBufferView","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":79,"columnNumber":5},{"callName":"isArrayBuffer","resolvedMethod":"utils.isArrayBuffer","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":79,"columnNumber":38},{"callName":"isURLSearchParams","resolvedMethod":"utils.isURLSearchParams","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":83,"columnNumber":5},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":87,"columnNumber":5},{"callName":"encodeText","resolvedMethod":"encodeText","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":88,"columnNumber":18}]},{"targetObj":{"name":"getBodyLength","typeFullName":"Promise<any>","resolvedMethod":"lib/adapters/fetch.js::program:getBodyLength","isExternal":false,"lineNumber":95,"columnNumber":26,"label":"CALL"},"definedBy":{"name":"getBodyLength","typeFullName":"Promise<any>","resolvedMethod":"lib/adapters/fetch.js::program:getBodyLength","isExternal":false,"lineNumber":95,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_request","typeFullName":"__ecma.Request","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new Request","typeFullName":"Request","resolvedMethod":"Request","isExternal":null,"lineNumber":72,"columnNumber":21,"label":"CALL"},"invokedCalls":[{"callName":"arrayBuffer","resolvedMethod":"_request.arrayBuffer","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":76,"columnNumber":18}],"argToCalls":[{"callName":"Request","resolvedMethod":"Request","paramTypes":["ANY","ANY"],"returnType":"Request","position":1,"isExternal":true,"lineNumber":72,"columnNumber":10}]},{"targetObj":{"name":"isURLSearchParams","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isURLSearchParams","isExternal":true,"lineNumber":54,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"isURLSearchParams","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isURLSearchParams","isExternal":true,"lineNumber":54,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isSpecCompliantForm","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isSpecCompliantForm","isExternal":true,"lineNumber":110,"columnNumber":27,"label":"CALL"},"definedBy":{"name":"isSpecCompliantForm","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isSpecCompliantForm","isExternal":true,"lineNumber":110,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"arrayBuffer","typeFullName":"ANY","resolvedMethod":"__ecma.Request:arrayBuffer","isExternal":true,"lineNumber":76,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"arrayBuffer","typeFullName":"ANY","resolvedMethod":"__ecma.Request:arrayBuffer","isExternal":true,"lineNumber":76,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:resolveBodyLength","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":92,"columnNumber":26,"usages":[{"targetObj":{"name":"headers","typeFullName":"ANY","position":1,"lineNumber":92,"columnNumber":33,"label":"PARAM"},"definedBy":{"name":"headers","typeFullName":"ANY","position":1,"lineNumber":92,"columnNumber":33,"label":"PARAM"},"invokedCalls":[{"callName":"getContentLength","resolvedMethod":"headers.getContentLength","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":93,"columnNumber":38}],"argToCalls":[]},{"targetObj":{"name":"resolveBodyLength","typeFullName":"Promise<any>","resolvedMethod":"lib/adapters/fetch.js::program:resolveBodyLength","isExternal":false,"lineNumber":129,"columnNumber":36,"label":"CALL"},"definedBy":{"name":"resolveBodyLength","typeFullName":"Promise<any>","resolvedMethod":"lib/adapters/fetch.js::program:resolveBodyLength","isExternal":false,"lineNumber":129,"columnNumber":36,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"body","typeFullName":"ANY","position":2,"lineNumber":92,"columnNumber":42,"label":"PARAM"},"definedBy":{"name":"body","typeFullName":"ANY","position":2,"lineNumber":92,"columnNumber":42,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"getBodyLength","resolvedMethod":"getBodyLength","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":95,"columnNumber":26}]},{"targetObj":{"name":"getContentLength","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(headers):getContentLength","isExternal":true,"lineNumber":93,"columnNumber":38,"label":"CALL"},"definedBy":{"name":"getContentLength","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(headers):getContentLength","isExternal":true,"lineNumber":93,"columnNumber":38,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toFiniteNumber","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFiniteNumber","isExternal":true,"lineNumber":89,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"toFiniteNumber","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFiniteNumber","isExternal":true,"lineNumber":89,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/fetch.js::program:test","signature":"","fileName":"lib/adapters/fetch.js","lineNumber":20,"columnNumber":13,"usages":[{"targetObj":{"name":"test","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/adapters/fetch.js::program:test","isExternal":false,"lineNumber":46,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"test","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/adapters/fetch.js::program:test","isExternal":false,"lineNumber":46,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"fn","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:fn","isExternal":true,"lineNumber":22,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"fn","typeFullName":"ANY","resolvedMethod":"lib/adapters/fetch.js::program:fn","isExternal":true,"lineNumber":22,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program","signature":"","fileName":"lib/adapters/http.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"isFunction","resolvedMethod":"utils.isFunction","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":39,"columnNumber":26},{"callName":"kindOf","resolvedMethod":"utils.kindOf","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":127,"columnNumber":65},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":157,"columnNumber":7},{"callName":"isObject","resolvedMethod":"utils.isObject","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":166,"columnNumber":61},{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["Array<any>"],"returnType":"ANY","isExternal":true,"lineNumber":179,"columnNumber":53},{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["Array<any>"],"returnType":"ANY","isExternal":true,"lineNumber":187,"columnNumber":28},{"callName":"stripBOM","resolvedMethod":"utils.stripBOM","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":259,"columnNumber":26},{"callName":"isSpecCompliantForm","resolvedMethod":"utils.isSpecCompliantForm","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":296,"columnNumber":8},{"callName":"isFormData","resolvedMethod":"utils.isFormData","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":306,"columnNumber":15},{"callName":"isFunction","resolvedMethod":"utils.isFunction","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":306,"columnNumber":41},{"callName":"isBlob","resolvedMethod":"utils.isBlob","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":317,"columnNumber":15},{"callName":"isFile","resolvedMethod":"utils.isFile","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":317,"columnNumber":37},{"callName":"isStream","resolvedMethod":"utils.isStream","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":321,"columnNumber":24},{"callName":"isArrayBuffer","resolvedMethod":"utils.isArrayBuffer","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":324,"columnNumber":17},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":326,"columnNumber":17},{"callName":"toFiniteNumber","resolvedMethod":"utils.toFiniteNumber","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":348,"columnNumber":26},{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["Array<any>"],"returnType":"ANY","isExternal":true,"lineNumber":350,"columnNumber":8},{"callName":"isStream","resolvedMethod":"utils.isStream","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":358,"columnNumber":11},{"callName":"toFiniteNumber","resolvedMethod":"utils.toFiniteNumber","paramTypes":["Array<any>:<indexAccess>"],"returnType":"ANY","isExternal":true,"lineNumber":363,"columnNumber":17},{"callName":"isUndefined","resolvedMethod":"utils.isUndefined","paramTypes":["(hostname: ANY, opt: ANY, cb: ANY) => void"],"returnType":"ANY","isExternal":true,"lineNumber":425,"columnNumber":5},{"callName":"toFiniteNumber","resolvedMethod":"utils.toFiniteNumber","paramTypes":["Array<any>"],"returnType":"ANY","isExternal":true,"lineNumber":473,"columnNumber":19},{"callName":"stripBOM","resolvedMethod":"utils.stripBOM","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":592,"columnNumber":31},{"callName":"isStream","resolvedMethod":"utils.isStream","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":669,"columnNumber":8}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:require","isExternal":true,"lineNumber":27,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:require","isExternal":true,"lineNumber":27,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"AxiosHeaders","typeFullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:require","isExternal":null,"lineNumber":20,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"from","resolvedMethod":"AxiosHeaders.from","paramTypes":["ANY"],"returnType":"ANY","isExternal":false,"lineNumber":282,"columnNumber":20}],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"AxiosError","typeFullName":"lib/core/AxiosError.js::program:AxiosError","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:require","isExternal":null,"lineNumber":15,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["lib/core/AxiosError.js::program:AxiosError","ANY","__ecma.Boolean","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":252,"columnNumber":14},{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["lib/core/AxiosError.js::program:AxiosError","__ecma.Null","__ecma.Boolean","ANY","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":583,"columnNumber":17},{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["lib/core/AxiosError.js::program:AxiosError","__ecma.Null","__ecma.Boolean","ANY","{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":597,"columnNumber":26},{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["lib/core/AxiosError.js::program:AxiosError","__ecma.Null","__ecma.Boolean","ANY","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":620,"columnNumber":13}],"argToCalls":[]},{"targetObj":{"name":"zlib","typeFullName":"zlib:zlib","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:require","isExternal":null,"lineNumber":12,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"createUnzip","resolvedMethod":"zlib.createUnzip","paramTypes":["{ flush: ANY; finishFlush: ANY; }"],"returnType":"ANY","isExternal":true,"lineNumber":508,"columnNumber":23},{"callName":"createUnzip","resolvedMethod":"zlib.createUnzip","paramTypes":["{ flush: ANY; finishFlush: ANY; }"],"returnType":"ANY","isExternal":true,"lineNumber":517,"columnNumber":23},{"callName":"createBrotliDecompress","resolvedMethod":"zlib.createBrotliDecompress","paramTypes":["{ flush: ANY; finishFlush: ANY; }"],"returnType":"ANY","isExternal":true,"lineNumber":524,"columnNumber":25}],"argToCalls":[]},{"targetObj":{"name":"kindOf","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:kindOf","isExternal":true,"lineNumber":127,"columnNumber":65,"label":"CALL"},"definedBy":{"name":"kindOf","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:kindOf","isExternal":true,"lineNumber":127,"columnNumber":65,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"supportedProtocols","typeFullName":"Array<string>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"platform.protocols.map","typeFullName":"ANY","resolvedMethod":"{ isNode: __ecma.Boolean; classes: { URLSearchParams: ANY; FormData: ANY; Blob: { new (blobParts?: BlobPart[], options?: BlobPropertyBag): Blob; prototype: Blob; }; }; protocols: Array<string>; hasBrowserEnv: __ecma.Boolean; hasStandardBrowserWebWorkerEnv: __ecma.Boolean; hasStandardBrowserEnv: __ecma.Boolean; navigator: Navigator; origin: __ecma.String; }:<member>(protocols):map","isExternal":null,"lineNumber":45,"columnNumber":27,"label":"CALL"},"invokedCalls":[{"callName":"indexOf","resolvedMethod":"supportedProtocols.indexOf","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":274,"columnNumber":8}],"argToCalls":[]},{"targetObj":{"name":"util","typeFullName":"util:util","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:require","isExternal":null,"lineNumber":10,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"promisify","resolvedMethod":"util.promisify","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":311,"columnNumber":36}],"argToCalls":[]},{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"{ isNode: __ecma.Boolean; classes: { URLSearchParams: ANY; FormData: ANY; Blob: { new (blobParts?: BlobPart[], options?: BlobPropertyBag): Blob; prototype: Blob; }; }; protocols: Array<string>; hasBrowserEnv: __ecma.Boolean; hasStandardBrowserWebWorkerEnv: __ecma.Boolean; hasStandardBrowserEnv: __ecma.Boolean; navigator: Navigator; origin: __ecma.String; }:<member>(protocols):map","isExternal":true,"lineNumber":45,"columnNumber":27,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"{ isNode: __ecma.Boolean; classes: { URLSearchParams: ANY; FormData: ANY; Blob: { new (blobParts?: BlobPart[], options?: BlobPropertyBag): Blob; prototype: Blob; }; }; protocols: Array<string>; hasBrowserEnv: __ecma.Boolean; hasStandardBrowserWebWorkerEnv: __ecma.Boolean; hasStandardBrowserEnv: __ecma.Boolean; navigator: Navigator; origin: __ecma.String; }:<member>(protocols):map","isExternal":true,"lineNumber":45,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"stream","typeFullName":"stream:stream","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:require","isExternal":null,"lineNumber":19,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"AxiosTransformStream","resolvedMethod":"stream.pipeline","paramTypes":["ANY"],"returnType":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream","isExternal":true,"lineNumber":362,"columnNumber":13},{"callName":"pipeline","resolvedMethod":"stream.pipeline","paramTypes":["__ecma.Array","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":530,"columnNumber":44},{"callName":"finished","resolvedMethod":"stream.finished","paramTypes":["__ecma.Boolean","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":532,"columnNumber":27}],"argToCalls":[]},{"targetObj":{"name":"proxyFromEnv","typeFullName":"proxy-from-env:proxyFromEnv","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:require","isExternal":null,"lineNumber":7,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"getProxyForUrl","resolvedMethod":"proxyFromEnv.getProxyForUrl","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":86,"columnNumber":21}],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:anonymous","signature":"","fileName":"lib/adapters/http.js","lineNumber":45,"columnNumber":50,"usages":[{"targetObj":{"name":"protocol => { return protocol + ':';}","typeFullName":"ANY","lineNumber":45,"columnNumber":50,"label":"UNKNOWN"},"definedBy":{"name":"protocol => { return protocol + ':';}","typeFullName":"ANY","lineNumber":45,"columnNumber":50,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:anonymous2:anonymous","signature":"","fileName":"lib/adapters/http.js","lineNumber":132,"columnNumber":21,"usages":[{"targetObj":{"name":"(resolve, reject)","typeFullName":"ANY","lineNumber":132,"columnNumber":21,"label":"UNKNOWN"},"definedBy":{"name":"(resolve, reject)","typeFullName":"ANY","lineNumber":132,"columnNumber":21,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"catch","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:asyncExecutor:<returnValue>:catch","isExternal":true,"lineNumber":152,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"catch","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:asyncExecutor:<returnValue>:catch","isExternal":true,"lineNumber":152,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"asyncExecutor","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:asyncExecutor","isExternal":true,"lineNumber":152,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"asyncExecutor","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:asyncExecutor","isExternal":true,"lineNumber":152,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:anonymous2:anonymous:_reject","signature":"","fileName":"lib/adapters/http.js","lineNumber":147,"columnNumber":20,"usages":[{"targetObj":{"name":"(reason)","typeFullName":"ANY","lineNumber":147,"columnNumber":20,"label":"UNKNOWN"},"definedBy":{"name":"(reason)","typeFullName":"ANY","lineNumber":147,"columnNumber":20,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"reason","typeFullName":"ANY","position":1,"lineNumber":147,"columnNumber":21,"label":"PARAM"},"definedBy":{"name":"reason","typeFullName":"ANY","position":1,"lineNumber":147,"columnNumber":21,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"done","resolvedMethod":"done","paramTypes":["ANY","__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":148,"columnNumber":6},{"callName":"reject","resolvedMethod":"reject","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":149,"columnNumber":6}]},{"targetObj":{"name":"reject","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:reject","isExternal":true,"lineNumber":635,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"reject","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:reject","isExternal":true,"lineNumber":635,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:anonymous2:anonymous:_resolve","signature":"","fileName":"lib/adapters/http.js","lineNumber":142,"columnNumber":21,"usages":[{"targetObj":{"name":"(value)","typeFullName":"ANY","lineNumber":142,"columnNumber":21,"label":"UNKNOWN"},"definedBy":{"name":"(value)","typeFullName":"ANY","lineNumber":142,"columnNumber":21,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":142,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":142,"columnNumber":22,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"done","resolvedMethod":"done","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":143,"columnNumber":6},{"callName":"resolve","resolvedMethod":"resolve","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":144,"columnNumber":6}]},{"targetObj":{"name":"resolve","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:resolve","isExternal":true,"lineNumber":144,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"resolve","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:resolve","isExternal":true,"lineNumber":144,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:anonymous2:anonymous:anonymous3","signature":"","fileName":"lib/adapters/http.js","lineNumber":152,"columnNumber":37,"usages":[{"targetObj":{"name":"(onDoneHandler)","typeFullName":"ANY","lineNumber":152,"columnNumber":37,"label":"UNKNOWN"},"definedBy":{"name":"(onDoneHandler)","typeFullName":"ANY","lineNumber":152,"columnNumber":37,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:anonymous2:anonymous:done","signature":"","fileName":"lib/adapters/http.js","lineNumber":136,"columnNumber":17,"usages":[{"targetObj":{"name":"done","typeFullName":"void","resolvedMethod":"lib/adapters/http.js::program:anonymous2:anonymous:done","isExternal":false,"lineNumber":148,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"done","typeFullName":"void","resolvedMethod":"lib/adapters/http.js::program:anonymous2:anonymous:done","isExternal":false,"lineNumber":148,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":136,"columnNumber":18,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":136,"columnNumber":18,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"onDone","resolvedMethod":"onDone","paramTypes":["Array<any>","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":139,"columnNumber":16}]},{"targetObj":{"name":"isRejected","typeFullName":"ANY","position":2,"lineNumber":136,"columnNumber":25,"label":"PARAM"},"definedBy":{"name":"isRejected","typeFullName":"ANY","position":2,"lineNumber":136,"columnNumber":25,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"onDone","resolvedMethod":"onDone","paramTypes":["Array<any>","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":139,"columnNumber":16}]},{"targetObj":{"name":"onDone","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:onDone","isExternal":true,"lineNumber":209,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"onDone","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:onDone","isExternal":true,"lineNumber":209,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:buildAddressEntry","signature":"","fileName":"lib/adapters/http.js","lineNumber":166,"columnNumber":26,"usages":[{"targetObj":{"name":"buildAddressEntry","typeFullName":"lib/adapters/http.js::program:resolveFamily:<returnValue>","resolvedMethod":"lib/adapters/http.js::program:buildAddressEntry","isExternal":false,"lineNumber":187,"columnNumber":95,"label":"CALL"},"definedBy":{"name":"buildAddressEntry","typeFullName":"lib/adapters/http.js::program:resolveFamily:<returnValue>","resolvedMethod":"lib/adapters/http.js::program:buildAddressEntry","isExternal":false,"lineNumber":187,"columnNumber":95,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"address","typeFullName":"ANY","position":1,"lineNumber":166,"columnNumber":27,"label":"PARAM"},"definedBy":{"name":"address","typeFullName":"ANY","position":1,"lineNumber":166,"columnNumber":27,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isObject","resolvedMethod":"utils.isObject","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":166,"columnNumber":61}]},{"targetObj":{"name":"isObject","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isObject","isExternal":true,"lineNumber":210,"columnNumber":7,"label":"CALL"},"definedBy":{"name":"isObject","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isObject","isExternal":true,"lineNumber":210,"columnNumber":7,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:dispatchBeforeRedirect","signature":"","fileName":"lib/adapters/http.js","lineNumber":65,"columnNumber":0,"usages":[{"targetObj":{"name":"responseDetails","typeFullName":"ANY","position":2,"lineNumber":65,"columnNumber":41,"label":"PARAM"},"definedBy":{"name":"responseDetails","typeFullName":"ANY","position":2,"lineNumber":65,"columnNumber":41,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"config","resolvedMethod":"options.beforeRedirects.config","paramTypes":["http:http:ClientRequestArgs","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":70,"columnNumber":4}]},{"targetObj":{"name":"function dispatchBeforeRedirect(options, responseDetails)","typeFullName":"ANY","lineNumber":65,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":"function dispatchBeforeRedirect(options, responseDetails)","typeFullName":"ANY","lineNumber":65,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"config","typeFullName":"ANY","resolvedMethod":"http:http:ClientRequestArgs:<member>(beforeRedirects):config","isExternal":true,"lineNumber":70,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"config","typeFullName":"ANY","resolvedMethod":"http:http:ClientRequestArgs:<member>(beforeRedirects):config","isExternal":true,"lineNumber":70,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"proxy","typeFullName":"ANY","resolvedMethod":"http:http:ClientRequestArgs:<member>(beforeRedirects):proxy","isExternal":true,"lineNumber":67,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"proxy","typeFullName":"ANY","resolvedMethod":"http:http:ClientRequestArgs:<member>(beforeRedirects):proxy","isExternal":true,"lineNumber":67,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"options","typeFullName":"{ [x: __ecma.String]: ANY; }","position":1,"lineNumber":65,"columnNumber":32,"label":"PARAM"},"definedBy":{"name":"options","typeFullName":"{ [x: __ecma.String]: ANY; }","position":1,"lineNumber":65,"columnNumber":32,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"proxy","resolvedMethod":"options.beforeRedirects.proxy","paramTypes":["http:http:ClientRequestArgs"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":67,"columnNumber":4},{"callName":"config","resolvedMethod":"options.beforeRedirects.config","paramTypes":["http:http:ClientRequestArgs","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":70,"columnNumber":4}]}]},{"code":"","fullName":"lib/adapters/http.js::program:flushOnFinish","signature":"","fileName":"lib/adapters/http.js","lineNumber":49,"columnNumber":22,"usages":[{"targetObj":{"name":"flush","typeFullName":"[any, ANY]:<member>(flush)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"param2_0.flush","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":49,"columnNumber":43,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"on","resolvedMethod":".on","paramTypes":["__ecma.String","[any, ANY]:<member>(flush)"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":50,"columnNumber":2},{"callName":"on","resolvedMethod":".on","paramTypes":["__ecma.String","[any, ANY]:<member>(flush)"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":50,"columnNumber":2}]},{"targetObj":{"name":"on","typeFullName":"ANY","resolvedMethod":"stream:stream:on:<returnValue>:on","isExternal":true,"lineNumber":50,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"on","typeFullName":"ANY","resolvedMethod":"stream:stream:on:<returnValue>:on","isExternal":true,"lineNumber":50,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"stream","typeFullName":"ANY","position":1,"lineNumber":49,"columnNumber":23,"label":"PARAM"},"definedBy":{"name":"stream","typeFullName":"ANY","position":1,"lineNumber":49,"columnNumber":23,"label":"PARAM"},"invokedCalls":[{"callName":"on","resolvedMethod":".on","paramTypes":["__ecma.String","[any, ANY]:<member>(flush)"],"returnType":"ANY","isExternal":true,"lineNumber":50,"columnNumber":2}],"argToCalls":[]},{"targetObj":{"name":"on","typeFullName":"ANY","resolvedMethod":"stream:stream:on","isExternal":true,"lineNumber":50,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"on","typeFullName":"ANY","resolvedMethod":"stream:stream:on","isExternal":true,"lineNumber":50,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"flushOnFinish","typeFullName":"[any, ANY]:<member>(throttled)","resolvedMethod":"lib/adapters/http.js::program:flushOnFinish","isExternal":false,"lineNumber":366,"columnNumber":46,"label":"CALL"},"definedBy":{"name":"flushOnFinish","typeFullName":"[any, ANY]:<member>(throttled)","resolvedMethod":"lib/adapters/http.js::program:flushOnFinish","isExternal":false,"lineNumber":366,"columnNumber":46,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter","signature":"","fileName":"lib/adapters/http.js","lineNumber":169,"columnNumber":41,"usages":[{"targetObj":{"name":"function httpAdapter(config)","typeFullName":"ANY","lineNumber":169,"columnNumber":41,"label":"UNKNOWN"},"definedBy":{"name":"function httpAdapter(config)","typeFullName":"ANY","lineNumber":169,"columnNumber":41,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"config","typeFullName":"ANY","position":1,"lineNumber":169,"columnNumber":62,"label":"PARAM"},"definedBy":{"name":"config","typeFullName":"ANY","position":1,"lineNumber":169,"columnNumber":62,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["lib/core/AxiosError.js::program:AxiosError","ANY","__ecma.Boolean","LAMBDA"],"returnType":"ANY","position":3,"isExternal":true,"lineNumber":252,"columnNumber":14},{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["lib/core/AxiosError.js::program:AxiosError","__ecma.Null","__ecma.Boolean","ANY","LAMBDA"],"returnType":"ANY","position":3,"isExternal":true,"lineNumber":583,"columnNumber":17},{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["lib/core/AxiosError.js::program:AxiosError","__ecma.Null","__ecma.Boolean","ANY","{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }","LAMBDA"],"returnType":"ANY","position":3,"isExternal":true,"lineNumber":597,"columnNumber":26},{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["lib/core/AxiosError.js::program:AxiosError","__ecma.Null","__ecma.Boolean","ANY","LAMBDA"],"returnType":"ANY","position":3,"isExternal":true,"lineNumber":620,"columnNumber":13}]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest","signature":"","fileName":"lib/adapters/http.js","lineNumber":170,"columnNumber":19,"usages":[{"targetObj":{"name":"request","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:<member>(transport):request","isExternal":true,"lineNumber":464,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"request","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:<member>(transport):request","isExternal":true,"lineNumber":464,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"slice","typeFullName":"ANY","resolvedMethod":"__ecma.URL:<member>(hostname):slice","isExternal":true,"lineNumber":430,"columnNumber":59,"label":"CALL"},"definedBy":{"name":"slice","typeFullName":"ANY","resolvedMethod":"__ecma.URL:<member>(hostname):slice","isExternal":true,"lineNumber":430,"columnNumber":59,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"parseInt","typeFullName":"ANY","resolvedMethod":"parseInt","isExternal":true,"lineNumber":632,"columnNumber":22,"label":"CALL"},"definedBy":{"name":"parseInt","typeFullName":"ANY","resolvedMethod":"parseInt","isExternal":true,"lineNumber":632,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"convertedData","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"stream.Readable.from","typeFullName":"ANY","resolvedMethod":"stream:stream:<member>(Readable):from","isExternal":null,"lineNumber":262,"columnNumber":24,"label":"CALL"},"invokedCalls":[{"callName":"toString","resolvedMethod":"convertedData.toString","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":256,"columnNumber":24}],"argToCalls":[{"callName":"stripBOM","resolvedMethod":"utils.stripBOM","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":259,"columnNumber":26},{"callName":"from","resolvedMethod":"stream.Readable.from","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":262,"columnNumber":24}]},{"targetObj":{"name":"pipe","typeFullName":"ANY","resolvedMethod":"stream:Readable:from:<returnValue>:pipe","isExternal":true,"lineNumber":688,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"pipe","typeFullName":"ANY","resolvedMethod":"stream:Readable:from:<returnValue>:pipe","isExternal":true,"lineNumber":688,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"once","typeFullName":"ANY","resolvedMethod":"Buffer.from:<returnValue>:once","isExternal":true,"lineNumber":677,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"once","typeFullName":"ANY","resolvedMethod":"Buffer.from:<returnValue>:once","isExternal":true,"lineNumber":677,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"emitter","typeFullName":"events:EventEmitter","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new EventEmitter","typeFullName":"ANY","resolvedMethod":null,"isExternal":null,"lineNumber":195,"columnNumber":20,"label":"CALL"},"invokedCalls":[{"callName":"removeAllListeners","resolvedMethod":"emitter.removeAllListeners","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":206,"columnNumber":6},{"callName":"CanceledError","resolvedMethod":"emitter.emit","paramTypes":["__ecma.Null","__ecma.Boolean","ANY","LAMBDA"],"returnType":"lib/cancel/CanceledError.js::program:CanceledError","isExternal":true,"lineNumber":218,"columnNumber":6},{"callName":"once","resolvedMethod":"emitter.once","paramTypes":["__ecma.String","(reason?: ANY) => void"],"returnType":"ANY","isExternal":true,"lineNumber":221,"columnNumber":4},{"callName":"once","resolvedMethod":"emitter.once","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":603,"columnNumber":6},{"callName":"once","resolvedMethod":"emitter.once","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":611,"columnNumber":4}],"argToCalls":[{"callName":"EventEmitter","resolvedMethod":"EventEmitter","paramTypes":[],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":195,"columnNumber":10}]},{"targetObj":{"name":"getHeaders","typeFullName":"ANY","resolvedMethod":"stream:stream:pipeline:<returnValue>:getHeaders","isExternal":true,"lineNumber":307,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"getHeaders","typeFullName":"ANY","resolvedMethod":"stream:stream:pipeline:<returnValue>:getHeaders","isExternal":true,"lineNumber":307,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"timeout","typeFullName":"parseInt:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"parseInt","typeFullName":"parseInt","resolvedMethod":"parseInt","isExternal":null,"lineNumber":632,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"isNaN","resolvedMethod":"Number.isNaN","paramTypes":["parseInt:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":634,"columnNumber":10},{"callName":"setTimeout","resolvedMethod":"req.setTimeout","paramTypes":["parseInt:<returnValue>","LAMBDA"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":650,"columnNumber":6}]},{"targetObj":{"name":"pipe","typeFullName":"ANY","resolvedMethod":"stream:stream:pipeline:<returnValue>:pipe","isExternal":true,"lineNumber":688,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"pipe","typeFullName":"ANY","resolvedMethod":"stream:stream:pipeline:<returnValue>:pipe","isExternal":true,"lineNumber":688,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"responseEncoding","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_16.responseEncoding","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":172,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"toString","resolvedMethod":"convertedData.toString","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":256,"columnNumber":24},{"callName":"toString","resolvedMethod":"responseData.toString","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":590,"columnNumber":29}]},{"targetObj":{"name":"once","typeFullName":"ANY","resolvedMethod":"stream:Readable:from:<returnValue>:once","isExternal":true,"lineNumber":677,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"once","typeFullName":"ANY","resolvedMethod":"stream:Readable:from:<returnValue>:once","isExternal":true,"lineNumber":677,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"protocol","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"parsed.protocol || supportedProtocols[0]","typeFullName":"ANY","resolvedMethod":"<operator>.logicalOr","isExternal":null,"lineNumber":233,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"indexOf","resolvedMethod":"supportedProtocols.indexOf","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":274,"columnNumber":8}]},{"targetObj":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:<member>(signal):addEventListener","isExternal":true,"lineNumber":226,"columnNumber":42,"label":"CALL"},"definedBy":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:<member>(signal):addEventListener","isExternal":true,"lineNumber":226,"columnNumber":42,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isFinite","typeFullName":"ANY","resolvedMethod":"Number.isFinite","isExternal":true,"lineNumber":602,"columnNumber":26,"label":"CALL"},"definedBy":{"name":"isFinite","typeFullName":"ANY","resolvedMethod":"Number.isFinite","isExternal":true,"lineNumber":602,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"setContentType","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:setContentType","isExternal":true,"lineNumber":134,"columnNumber":33,"label":"CALL"},"definedBy":{"name":"setContentType","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:setContentType","isExternal":true,"lineNumber":134,"columnNumber":33,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"from","typeFullName":"ANY","resolvedMethod":"Buffer.from","isExternal":true,"lineNumber":128,"columnNumber":73,"label":"CALL"},"definedBy":{"name":"from","typeFullName":"ANY","resolvedMethod":"Buffer.from","isExternal":true,"lineNumber":128,"columnNumber":73,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"setTimeout","typeFullName":"ANY","resolvedMethod":"req.setTimeout","isExternal":true,"lineNumber":650,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"setTimeout","typeFullName":"ANY","resolvedMethod":"req.setTimeout","isExternal":true,"lineNumber":650,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"knownLength","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"await util.promisify","typeFullName":"ANY","resolvedMethod":"<operator>.await","isExternal":null,"lineNumber":311,"columnNumber":30,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"isFinite","resolvedMethod":"Number.isFinite","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":312,"columnNumber":10},{"callName":"setContentLength","resolvedMethod":"headers.setContentLength","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":312,"columnNumber":62}]},{"targetObj":{"name":"headers","typeFullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"AxiosHeaders.from","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:from:<returnValue>:normalize","isExternal":null,"lineNumber":282,"columnNumber":20,"label":"CALL"},"invokedCalls":[{"callName":"set","resolvedMethod":"headers.set","paramTypes":["__ecma.String","ANY","__ecma.Boolean"],"returnType":"ANY","isExternal":false,"lineNumber":288,"columnNumber":4},{"callName":"getContentType","resolvedMethod":"headers.getContentType","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":297,"columnNumber":27},{"callName":"set","resolvedMethod":"headers.set","paramTypes":["ANY"],"returnType":"ANY","isExternal":false,"lineNumber":300,"columnNumber":8},{"callName":"set","resolvedMethod":"headers.set","paramTypes":["ANY"],"returnType":"ANY","isExternal":false,"lineNumber":307,"columnNumber":6},{"callName":"hasContentLength","resolvedMethod":"headers.hasContentLength","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":309,"columnNumber":11},{"callName":"setContentLength","resolvedMethod":"headers.setContentLength","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":312,"columnNumber":62},{"callName":"setContentType","resolvedMethod":"headers.setContentType","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":318,"columnNumber":19},{"callName":"setContentLength","resolvedMethod":"headers.setContentLength","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":319,"columnNumber":6},{"callName":"setContentLength","resolvedMethod":"headers.setContentLength","paramTypes":["ANY","__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":337,"columnNumber":6},{"callName":"getContentLength","resolvedMethod":"headers.getContentLength","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":348,"columnNumber":47},{"callName":"delete","resolvedMethod":"headers.delete","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":false,"lineNumber":389,"columnNumber":12},{"callName":"set","resolvedMethod":"headers.set","paramTypes":["__ecma.String","ANY","__ecma.Boolean"],"returnType":"ANY","isExternal":false,"lineNumber":407,"columnNumber":4},{"callName":"toJSON","resolvedMethod":"headers.toJSON","paramTypes":[],"returnType":"ANY","isExternal":false,"lineNumber":415,"columnNumber":15}],"argToCalls":[]},{"targetObj":{"name":"pipe","typeFullName":"ANY","resolvedMethod":"Buffer.from:<returnValue>:pipe","isExternal":true,"lineNumber":688,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"pipe","typeFullName":"ANY","resolvedMethod":"Buffer.from:<returnValue>:pipe","isExternal":true,"lineNumber":688,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"hasContentLength","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:hasContentLength","isExternal":true,"lineNumber":309,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"hasContentLength","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:hasContentLength","isExternal":true,"lineNumber":309,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getHeaders","typeFullName":"ANY","resolvedMethod":"Buffer.from:<returnValue>:getHeaders","isExternal":true,"lineNumber":307,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"getHeaders","typeFullName":"ANY","resolvedMethod":"Buffer.from:<returnValue>:getHeaders","isExternal":true,"lineNumber":307,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"Array<string>:indexOf","isExternal":true,"lineNumber":274,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"Array<string>:indexOf","isExternal":true,"lineNumber":274,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"from","typeFullName":"ANY","resolvedMethod":"stream:stream:<member>(Readable):from","isExternal":true,"lineNumber":359,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"from","typeFullName":"ANY","resolvedMethod":"stream:stream:<member>(Readable):from","isExternal":true,"lineNumber":359,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"__ecma.String:slice:<returnValue>:replace","isExternal":true,"lineNumber":394,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"__ecma.String:slice:<returnValue>:replace","isExternal":true,"lineNumber":394,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"data","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"stream.Readable.from","typeFullName":"ANY","resolvedMethod":"stream:stream:<member>(Readable):from","isExternal":null,"lineNumber":359,"columnNumber":15,"label":"CALL"},"invokedCalls":[{"callName":"getHeaders","resolvedMethod":"data.getHeaders","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":307,"columnNumber":18},{"callName":"on","resolvedMethod":"data.on","paramTypes":["__ecma.String","[any, ANY]:<member>(throttled)"],"returnType":"[any, ANY]:<member>(throttled)","isExternal":true,"lineNumber":366,"columnNumber":26},{"callName":"on","resolvedMethod":"data.on","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":673,"columnNumber":6},{"callName":"once","resolvedMethod":"data.once","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":677,"columnNumber":6},{"callName":"on","resolvedMethod":"data.on","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":682,"columnNumber":6},{"callName":"pipe","resolvedMethod":"data.pipe","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":688,"columnNumber":6}],"argToCalls":[{"callName":"isSpecCompliantForm","resolvedMethod":"utils.isSpecCompliantForm","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":296,"columnNumber":8},{"callName":"formDataToStream","resolvedMethod":"formDataToStream","paramTypes":["__ecma.Boolean","LAMBDA","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":299,"columnNumber":13},{"callName":"isFormData","resolvedMethod":"utils.isFormData","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":306,"columnNumber":15},{"callName":"call","resolvedMethod":"util.promisify","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":311,"columnNumber":36},{"callName":"isBlob","resolvedMethod":"utils.isBlob","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":317,"columnNumber":15},{"callName":"isFile","resolvedMethod":"utils.isFile","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":317,"columnNumber":37},{"callName":"readBlob","resolvedMethod":"readBlob","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":320,"columnNumber":34},{"callName":"isStream","resolvedMethod":"utils.isStream","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":321,"columnNumber":24},{"callName":"isBuffer","resolvedMethod":"Buffer.isBuffer","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":322,"columnNumber":10},{"callName":"isArrayBuffer","resolvedMethod":"utils.isArrayBuffer","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":324,"columnNumber":17},{"callName":"Uint8Array","resolvedMethod":"Buffer.from","paramTypes":["__ecma.Boolean"],"returnType":"Uint8Array","position":1,"isExternal":true,"lineNumber":325,"columnNumber":8},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":326,"columnNumber":17},{"callName":"from","resolvedMethod":"Buffer.from","paramTypes":["__ecma.Boolean","__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":327,"columnNumber":15},{"callName":"isStream","resolvedMethod":"utils.isStream","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":358,"columnNumber":11},{"callName":"from","resolvedMethod":"stream.Readable.from","paramTypes":["__ecma.Boolean","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":359,"columnNumber":15},{"callName":"AxiosTransformStream","resolvedMethod":"stream.pipeline","paramTypes":["ANY"],"returnType":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream","position":1,"isExternal":true,"lineNumber":362,"columnNumber":6},{"callName":"","resolvedMethod":"_tmp_43.push","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":362,"columnNumber":30},{"callName":"flushOnFinish","resolvedMethod":"flushOnFinish","paramTypes":["__ecma.Boolean","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":366,"columnNumber":46},{"callName":"isStream","resolvedMethod":"utils.isStream","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":669,"columnNumber":8},{"callName":"end","resolvedMethod":"req.end","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":690,"columnNumber":6}]},{"targetObj":{"name":"once","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:once","isExternal":true,"lineNumber":677,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"once","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:once","isExternal":true,"lineNumber":677,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"on","typeFullName":"ANY","resolvedMethod":"req.on","isExternal":true,"lineNumber":44,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"on","typeFullName":"ANY","resolvedMethod":"req.on","isExternal":true,"lineNumber":44,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"on","typeFullName":"ANY","resolvedMethod":"Buffer.from:<returnValue>:on","isExternal":true,"lineNumber":682,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"on","typeFullName":"ANY","resolvedMethod":"Buffer.from:<returnValue>:on","isExternal":true,"lineNumber":682,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"transport","typeFullName":"__ecma.Boolean:<member>(transport)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"isHttpsRequest ? httpsFollow : httpFollow","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":null,"lineNumber":449,"columnNumber":18,"label":"CALL"},"invokedCalls":[{"callName":"request","resolvedMethod":"transport.request","paramTypes":["http:http:ClientRequestArgs","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":464,"columnNumber":10}],"argToCalls":[]},{"targetObj":{"name":"startsWith","typeFullName":"ANY","resolvedMethod":"__ecma.URL:<member>(hostname):startsWith","isExternal":true,"lineNumber":430,"columnNumber":25,"label":"CALL"},"definedBy":{"name":"startsWith","typeFullName":"ANY","resolvedMethod":"__ecma.URL:<member>(hostname):startsWith","isExternal":true,"lineNumber":430,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"maxUploadRate","typeFullName":"Array<any>:<indexAccess>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"maxDownloadRate = maxRate","typeFullName":"ANY","resolvedMethod":"<operator>.assignment","isExternal":null,"lineNumber":354,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"toFiniteNumber","resolvedMethod":"utils.toFiniteNumber","paramTypes":["Array<any>:<indexAccess>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":363,"columnNumber":17}]},{"targetObj":{"name":"end","typeFullName":"ANY","resolvedMethod":"req.end","isExternal":true,"lineNumber":690,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"end","typeFullName":"ANY","resolvedMethod":"req.end","isExternal":true,"lineNumber":690,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"subscribe","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:<member>(cancelToken):subscribe","isExternal":true,"lineNumber":224,"columnNumber":28,"label":"CALL"},"definedBy":{"name":"subscribe","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:<member>(cancelToken):subscribe","isExternal":true,"lineNumber":224,"columnNumber":28,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"customErr","typeFullName":"__ecma.Error","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new Error","typeFullName":"Error","resolvedMethod":"Error","isExternal":null,"lineNumber":400,"columnNumber":24,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"Error","resolvedMethod":"Error","paramTypes":["ANY"],"returnType":"Error","position":1,"isExternal":true,"lineNumber":400,"columnNumber":12},{"callName":"reject","resolvedMethod":"reject","paramTypes":["__ecma.Error"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":404,"columnNumber":13}]},{"targetObj":{"name":"isUndefined","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isUndefined","isExternal":true,"lineNumber":101,"columnNumber":12,"label":"CALL"},"definedBy":{"name":"isUndefined","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isUndefined","isExternal":true,"lineNumber":101,"columnNumber":12,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.new","typeFullName":"ANY","resolvedMethod":"events:EventEmitter","isExternal":true,"lineNumber":195,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"<operator>.new","typeFullName":"ANY","resolvedMethod":"events:EventEmitter","isExternal":true,"lineNumber":195,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"reject","typeFullName":"ANY","position":2,"lineNumber":170,"columnNumber":63,"label":"PARAM"},"definedBy":{"name":"reject","typeFullName":"ANY","position":2,"lineNumber":170,"columnNumber":63,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"once","resolvedMethod":"emitter.once","paramTypes":["__ecma.String","(reason?: ANY) => void"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":221,"columnNumber":4},{"callName":"settle","resolvedMethod":"settle","paramTypes":["(value: ANY) => void","(reason?: ANY) => void","ANY"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":239,"columnNumber":15},{"callName":"AxiosHeaders","resolvedMethod":"settle","paramTypes":[],"returnType":"lib/core/AxiosHeaders.js::program:AxiosHeaders","position":2,"isExternal":false,"lineNumber":265,"columnNumber":13},{"callName":"settle","resolvedMethod":"settle","paramTypes":["(value: ANY) => void","(reason?: ANY) => void","{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":547,"columnNumber":8},{"callName":"settle","resolvedMethod":"settle","paramTypes":["(value: ANY) => void","(reason?: ANY) => void","{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":599,"columnNumber":10}]},{"targetObj":{"name":"setContentLength","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:setContentLength","isExternal":true,"lineNumber":337,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"setContentLength","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:setContentLength","isExternal":true,"lineNumber":337,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getContentType","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:getContentType","isExternal":true,"lineNumber":297,"columnNumber":27,"label":"CALL"},"definedBy":{"name":"getContentType","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:getContentType","isExternal":true,"lineNumber":297,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"onDownloadProgress","typeFullName":"__ecma.Boolean:<member>(onDownloadProgress)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_34.onDownloadProgress","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":290,"columnNumber":29,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"asyncDecorator","resolvedMethod":"asyncDecorator","paramTypes":["__ecma.Boolean:<member>(onDownloadProgress)"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":480,"columnNumber":33}]},{"targetObj":{"name":"isBuffer","typeFullName":"ANY","resolvedMethod":"Buffer.isBuffer","isExternal":true,"lineNumber":322,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"isBuffer","typeFullName":"ANY","resolvedMethod":"Buffer.isBuffer","isExternal":true,"lineNumber":322,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"test","typeFullName":"ANY","resolvedMethod":"RegExp:test","isExternal":true,"lineNumber":436,"columnNumber":27,"label":"CALL"},"definedBy":{"name":"test","typeFullName":"ANY","resolvedMethod":"RegExp:test","isExternal":true,"lineNumber":436,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"resolve","typeFullName":"ANY","position":1,"lineNumber":170,"columnNumber":54,"label":"PARAM"},"definedBy":{"name":"resolve","typeFullName":"ANY","position":1,"lineNumber":170,"columnNumber":54,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"settle","resolvedMethod":"settle","paramTypes":["(value: ANY) => void","(reason?: ANY) => void","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":239,"columnNumber":15},{"callName":"AxiosHeaders","resolvedMethod":"settle","paramTypes":[],"returnType":"lib/core/AxiosHeaders.js::program:AxiosHeaders","position":1,"isExternal":false,"lineNumber":265,"columnNumber":13},{"callName":"settle","resolvedMethod":"settle","paramTypes":["(value: ANY) => void","(reason?: ANY) => void","{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":547,"columnNumber":8},{"callName":"settle","resolvedMethod":"settle","paramTypes":["(value: ANY) => void","(reason?: ANY) => void","{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":599,"columnNumber":10}]},{"targetObj":{"name":"startsWith","typeFullName":"ANY","resolvedMethod":"{ new (url: __ecma.String | URL, base?: __ecma.String | URL): URL; prototype: URL; canParse(url: __ecma.String | URL, base?: __ecma.String | URL): __ecma.Boolean; createObjectURL(obj: Blob | MediaSource): __ecma.String; parse(url: __ecma.String | URL, base?: __ecma.String | URL): URL | __ecma.Null; revokeObjectURL(url: __ecma.String): void; }:<member>(hostname):startsWith","isExternal":true,"lineNumber":430,"columnNumber":25,"label":"CALL"},"definedBy":{"name":"startsWith","typeFullName":"ANY","resolvedMethod":"{ new (url: __ecma.String | URL, base?: __ecma.String | URL): URL; prototype: URL; canParse(url: __ecma.String | URL, base?: __ecma.String | URL): __ecma.Boolean; createObjectURL(obj: Blob | MediaSource): __ecma.String; parse(url: __ecma.String | URL, base?: __ecma.String | URL): URL | __ecma.Null; revokeObjectURL(url: __ecma.String): void; }:<member>(hostname):startsWith","isExternal":true,"lineNumber":430,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"normalize","typeFullName":"lib/core/AxiosHeaders.js::program","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:from:<returnValue>:normalize","isExternal":true,"lineNumber":25,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"normalize","typeFullName":"lib/core/AxiosHeaders.js::program","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:from:<returnValue>:normalize","isExternal":true,"lineNumber":25,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getHeaders","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:getHeaders","isExternal":true,"lineNumber":307,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"getHeaders","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:getHeaders","isExternal":true,"lineNumber":307,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"call","typeFullName":"ANY","resolvedMethod":"util:util:promisify:<returnValue>:call","isExternal":true,"lineNumber":311,"columnNumber":36,"label":"CALL"},"definedBy":{"name":"call","typeFullName":"ANY","resolvedMethod":"util:util:promisify:<returnValue>:call","isExternal":true,"lineNumber":311,"columnNumber":36,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"parsed","typeFullName":"__ecma.URL","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new URL","typeFullName":"URL","resolvedMethod":"URL","isExternal":null,"lineNumber":232,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"URL","resolvedMethod":"URL","paramTypes":["lib/helpers/combineURLs.js::program:combineURLs:<returnValue>","ANY"],"returnType":"URL","position":1,"isExternal":true,"lineNumber":232,"columnNumber":10}]},{"targetObj":{"name":"isNaN","typeFullName":"ANY","resolvedMethod":"Number.isNaN","isExternal":true,"lineNumber":634,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"isNaN","typeFullName":"ANY","resolvedMethod":"Number.isNaN","isExternal":true,"lineNumber":634,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isStream","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isStream","isExternal":true,"lineNumber":59,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"isStream","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isStream","isExternal":true,"lineNumber":59,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"req","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"transport.request","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:<member>(transport):request","isExternal":null,"lineNumber":464,"columnNumber":10,"label":"CALL"},"invokedCalls":[{"callName":"destroy","resolvedMethod":"req.destroy","paramTypes":["lib/core/AxiosError.js::program:AxiosError"],"returnType":"ANY","isExternal":true,"lineNumber":613,"columnNumber":6},{"callName":"on","resolvedMethod":"req.on","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":617,"columnNumber":4},{"callName":"on","resolvedMethod":"req.on","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":624,"columnNumber":4},{"callName":"setTimeout","resolvedMethod":"req.setTimeout","paramTypes":["parseInt:<returnValue>","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":650,"columnNumber":6},{"callName":"destroy","resolvedMethod":"req.destroy","paramTypes":["lib/core/AxiosError.js::program:AxiosError"],"returnType":"ANY","isExternal":true,"lineNumber":679,"columnNumber":8},{"callName":"end","resolvedMethod":"req.end","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":690,"columnNumber":6}],"argToCalls":[{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["lib/core/AxiosError.js::program:AxiosError","__ecma.Null","__ecma.Boolean","ANY","LAMBDA"],"returnType":"ANY","position":4,"isExternal":true,"lineNumber":620,"columnNumber":13},{"callName":"pipe","resolvedMethod":"data.pipe","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":688,"columnNumber":6}]},{"targetObj":{"name":"maxRate","typeFullName":"Array<any>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"config.maxRate","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":291,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":350,"columnNumber":8}]},{"targetObj":{"name":"contentLength","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFiniteNumber:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"utils.toFiniteNumber","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFiniteNumber","isExternal":null,"lineNumber":348,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"progressEventDecorator","resolvedMethod":"progressEventDecorator","paramTypes":["{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFiniteNumber:<returnValue>","Function"],"returnType":"Function","position":1,"isExternal":false,"lineNumber":368,"columnNumber":8}]},{"targetObj":{"name":"async function dispatchHttpRequest(resolve, reject, onDone)","typeFullName":"ANY","lineNumber":170,"columnNumber":19,"label":"UNKNOWN"},"definedBy":{"name":"async function dispatchHttpRequest(resolve, reject, onDone)","typeFullName":"ANY","lineNumber":170,"columnNumber":19,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isFile","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isFile","isExternal":true,"lineNumber":60,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"isFile","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isFile","isExternal":true,"lineNumber":60,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"onUploadProgress","typeFullName":"__ecma.Boolean:<member>(onUploadProgress)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_34.onUploadProgress","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":290,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"asyncDecorator","resolvedMethod":"asyncDecorator","paramTypes":["__ecma.Boolean:<member>(onUploadProgress)"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":370,"columnNumber":31}]},{"targetObj":{"name":"toString","typeFullName":"ANY","resolvedMethod":"lib/helpers/fromDataURI.js::program:fromDataURI:<returnValue>:toString","isExternal":true,"lineNumber":256,"columnNumber":24,"label":"CALL"},"definedBy":{"name":"toString","typeFullName":"ANY","resolvedMethod":"lib/helpers/fromDataURI.js::program:fromDataURI:<returnValue>:toString","isExternal":true,"lineNumber":256,"columnNumber":24,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"on","typeFullName":"ANY","resolvedMethod":"stream:Readable:from:<returnValue>:on","isExternal":true,"lineNumber":682,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"on","typeFullName":"ANY","resolvedMethod":"stream:Readable:from:<returnValue>:on","isExternal":true,"lineNumber":682,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"pipe","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:pipe","isExternal":true,"lineNumber":688,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"pipe","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:pipe","isExternal":true,"lineNumber":688,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getContentLength","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:getContentLength","isExternal":true,"lineNumber":348,"columnNumber":47,"label":"CALL"},"definedBy":{"name":"getContentLength","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:getContentLength","isExternal":true,"lineNumber":348,"columnNumber":47,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getHeaders","typeFullName":"ANY","resolvedMethod":"stream:Readable:from:<returnValue>:getHeaders","isExternal":true,"lineNumber":307,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"getHeaders","typeFullName":"ANY","resolvedMethod":"stream:Readable:from:<returnValue>:getHeaders","isExternal":true,"lineNumber":307,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"slice","typeFullName":"ANY","resolvedMethod":"{ new (url: __ecma.String | URL, base?: __ecma.String | URL): URL; prototype: URL; canParse(url: __ecma.String | URL, base?: __ecma.String | URL): __ecma.Boolean; createObjectURL(obj: Blob | MediaSource): __ecma.String; parse(url: __ecma.String | URL, base?: __ecma.String | URL): URL | __ecma.Null; revokeObjectURL(url: __ecma.String): void; }:<member>(hostname):slice","isExternal":true,"lineNumber":430,"columnNumber":59,"label":"CALL"},"definedBy":{"name":"slice","typeFullName":"ANY","resolvedMethod":"{ new (url: __ecma.String | URL, base?: __ecma.String | URL): URL; prototype: URL; canParse(url: __ecma.String | URL, base?: __ecma.String | URL): __ecma.Boolean; createObjectURL(obj: Blob | MediaSource): __ecma.String; parse(url: __ecma.String | URL, base?: __ecma.String | URL): URL | __ecma.Null; revokeObjectURL(url: __ecma.String): void; }:<member>(hostname):slice","isExternal":true,"lineNumber":430,"columnNumber":59,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"once","typeFullName":"ANY","resolvedMethod":"stream:stream:pipeline:<returnValue>:once","isExternal":true,"lineNumber":677,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"once","typeFullName":"ANY","resolvedMethod":"stream:stream:pipeline:<returnValue>:once","isExternal":true,"lineNumber":677,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"on","typeFullName":"ANY","resolvedMethod":"stream:stream:pipeline:<returnValue>:on","isExternal":true,"lineNumber":682,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"on","typeFullName":"ANY","resolvedMethod":"stream:stream:pipeline:<returnValue>:on","isExternal":true,"lineNumber":682,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:abort","signature":"","fileName":"lib/adapters/http.js","lineNumber":217,"columnNumber":4,"usages":[{"targetObj":{"name":"abort","typeFullName":"void","resolvedMethod":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:abort","isExternal":false,"lineNumber":226,"columnNumber":32,"label":"CALL"},"definedBy":{"name":"abort","typeFullName":"void","resolvedMethod":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:abort","isExternal":false,"lineNumber":226,"columnNumber":32,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"emit","typeFullName":"ANY","resolvedMethod":"events:EventEmitter:emit","isExternal":true,"lineNumber":218,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"emit","typeFullName":"ANY","resolvedMethod":"events:EventEmitter:emit","isExternal":true,"lineNumber":218,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:anonymous","signature":"","fileName":"lib/adapters/http.js","lineNumber":179,"columnNumber":42,"usages":[{"targetObj":{"name":"(value)","typeFullName":"ANY","lineNumber":179,"columnNumber":42,"label":"UNKNOWN"},"definedBy":{"name":"(value)","typeFullName":"ANY","lineNumber":179,"columnNumber":42,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":179,"columnNumber":43,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":179,"columnNumber":43,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":179,"columnNumber":53},{"callName":"","resolvedMethod":"_tmp_18.push","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":179,"columnNumber":85}]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:anonymous1","signature":"","fileName":"lib/adapters/http.js","lineNumber":181,"columnNumber":15,"usages":[{"targetObj":{"name":"(hostname, opt, cb)","typeFullName":"ANY","lineNumber":181,"columnNumber":15,"label":"UNKNOWN"},"definedBy":{"name":"(hostname, opt, cb)","typeFullName":"ANY","lineNumber":181,"columnNumber":15,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"hostname","typeFullName":"ANY","position":1,"lineNumber":181,"columnNumber":16,"label":"PARAM"},"definedBy":{"name":"hostname","typeFullName":"ANY","position":1,"lineNumber":181,"columnNumber":16,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"_lookup","resolvedMethod":"_lookup","paramTypes":["ANY","ANY","LAMBDA"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":182,"columnNumber":8}]},{"targetObj":{"name":"opt","typeFullName":"ANY","position":2,"lineNumber":181,"columnNumber":26,"label":"PARAM"},"definedBy":{"name":"opt","typeFullName":"ANY","position":2,"lineNumber":181,"columnNumber":26,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"_lookup","resolvedMethod":"_lookup","paramTypes":["ANY","ANY","LAMBDA"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":182,"columnNumber":8}]},{"targetObj":{"name":"_lookup","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:_lookup","isExternal":true,"lineNumber":182,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"_lookup","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:_lookup","isExternal":true,"lineNumber":182,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:anonymous1:anonymous","signature":"","fileName":"lib/adapters/http.js","lineNumber":182,"columnNumber":31,"usages":[{"targetObj":{"name":"(err, arg0, arg1)","typeFullName":"ANY","lineNumber":182,"columnNumber":31,"label":"UNKNOWN"},"definedBy":{"name":"(err, arg0, arg1)","typeFullName":"ANY","lineNumber":182,"columnNumber":31,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"arg1","typeFullName":"ANY","position":3,"lineNumber":182,"columnNumber":43,"label":"PARAM"},"definedBy":{"name":"arg1","typeFullName":"ANY","position":3,"lineNumber":182,"columnNumber":43,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"buildAddressEntry","resolvedMethod":"buildAddressEntry","paramTypes":["Array<any>","ANY"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":187,"columnNumber":95}]},{"targetObj":{"name":"cb","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:cb","isExternal":true,"lineNumber":189,"columnNumber":41,"label":"CALL"},"definedBy":{"name":"cb","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:cb","isExternal":true,"lineNumber":189,"columnNumber":41,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"arg0","typeFullName":"ANY","position":2,"lineNumber":182,"columnNumber":37,"label":"PARAM"},"definedBy":{"name":"arg0","typeFullName":"ANY","position":2,"lineNumber":182,"columnNumber":37,"label":"PARAM"},"invokedCalls":[{"callName":"map","resolvedMethod":"arg0.map","paramTypes":["LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":187,"columnNumber":50}],"argToCalls":[{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":187,"columnNumber":28},{"callName":"buildAddressEntry","resolvedMethod":"buildAddressEntry","paramTypes":["Array<any>","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":187,"columnNumber":95}]},{"targetObj":{"name":"err","typeFullName":"ANY","position":1,"lineNumber":182,"columnNumber":32,"label":"PARAM"},"definedBy":{"name":"err","typeFullName":"ANY","position":1,"lineNumber":182,"columnNumber":32,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"cb","resolvedMethod":"cb","paramTypes":["lib/core/AxiosError.js::program:AxiosError"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":184,"columnNumber":19},{"callName":"cb","resolvedMethod":"cb","paramTypes":["lib/core/AxiosError.js::program:AxiosError","Array<{ address: ANY; family: ANY; }>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":189,"columnNumber":20},{"callName":"cb","resolvedMethod":"cb","paramTypes":["lib/core/AxiosError.js::program:AxiosError","ANY","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":189,"columnNumber":41}]},{"targetObj":{"name":"addresses","typeFullName":"Array<{ address: ANY; family: ANY; }>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"utils.isArray","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":null,"lineNumber":187,"columnNumber":28,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"cb","resolvedMethod":"cb","paramTypes":["lib/core/AxiosError.js::program:AxiosError","Array<{ address: ANY; family: ANY; }>"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":189,"columnNumber":20}]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:anonymous1:anonymous:anonymous","signature":"","fileName":"lib/adapters/http.js","lineNumber":187,"columnNumber":59,"usages":[{"targetObj":{"name":"addr => buildAddressEntry(addr)","typeFullName":"ANY","lineNumber":187,"columnNumber":59,"label":"UNKNOWN"},"definedBy":{"name":"addr => buildAddressEntry(addr)","typeFullName":"ANY","lineNumber":187,"columnNumber":59,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"addr","typeFullName":"ANY","position":1,"lineNumber":187,"columnNumber":59,"label":"PARAM"},"definedBy":{"name":"addr","typeFullName":"ANY","position":1,"lineNumber":187,"columnNumber":59,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"buildAddressEntry","resolvedMethod":"buildAddressEntry","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":187,"columnNumber":67}]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:anonymous3","signature":"","fileName":"lib/adapters/http.js","lineNumber":209,"columnNumber":11,"usages":[{"targetObj":{"name":"(value, isRejected)","typeFullName":"ANY","lineNumber":209,"columnNumber":11,"label":"UNKNOWN"},"definedBy":{"name":"(value, isRejected)","typeFullName":"ANY","lineNumber":209,"columnNumber":11,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:anonymous4","signature":"","fileName":"lib/adapters/http.js","lineNumber":299,"columnNumber":36,"usages":[{"targetObj":{"name":"(formHeaders)","typeFullName":"ANY","lineNumber":299,"columnNumber":36,"label":"UNKNOWN"},"definedBy":{"name":"(formHeaders)","typeFullName":"ANY","lineNumber":299,"columnNumber":36,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"formHeaders","typeFullName":"ANY","position":1,"lineNumber":299,"columnNumber":37,"label":"PARAM"},"definedBy":{"name":"formHeaders","typeFullName":"ANY","position":1,"lineNumber":299,"columnNumber":37,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"set","resolvedMethod":"headers.set","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":300,"columnNumber":8}]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:anonymous5","signature":"","fileName":"lib/adapters/http.js","lineNumber":611,"columnNumber":26,"usages":[{"targetObj":{"name":"err => { reject","typeFullName":"ANY","lineNumber":611,"columnNumber":26,"label":"UNKNOWN"},"definedBy":{"name":"err => { reject","typeFullName":"ANY","lineNumber":611,"columnNumber":26,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"err","typeFullName":"void","position":1,"lineNumber":611,"columnNumber":26,"label":"PARAM"},"definedBy":{"name":"err","typeFullName":"void","position":1,"lineNumber":611,"columnNumber":26,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"reject","resolvedMethod":"reject","paramTypes":["lib/core/AxiosError.js::program:AxiosError"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":612,"columnNumber":6},{"callName":"destroy","resolvedMethod":"req.destroy","paramTypes":["lib/core/AxiosError.js::program:AxiosError"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":613,"columnNumber":6}]},{"targetObj":{"name":"destroy","typeFullName":"ANY","resolvedMethod":"req.destroy","isExternal":true,"lineNumber":679,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"destroy","typeFullName":"ANY","resolvedMethod":"req.destroy","isExternal":true,"lineNumber":679,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:anonymous6","signature":"","fileName":"lib/adapters/http.js","lineNumber":673,"columnNumber":21,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":673,"columnNumber":21,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":673,"columnNumber":21,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:anonymous7","signature":"","fileName":"lib/adapters/http.js","lineNumber":677,"columnNumber":25,"usages":[{"targetObj":{"name":"err => { errored = true; req.destroy","typeFullName":"ANY","lineNumber":677,"columnNumber":25,"label":"UNKNOWN"},"definedBy":{"name":"err => { errored = true; req.destroy","typeFullName":"ANY","lineNumber":677,"columnNumber":25,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"err","typeFullName":"void","position":1,"lineNumber":677,"columnNumber":25,"label":"PARAM"},"definedBy":{"name":"err","typeFullName":"void","position":1,"lineNumber":677,"columnNumber":25,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"destroy","resolvedMethod":"req.destroy","paramTypes":["lib/core/AxiosError.js::program:AxiosError"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":679,"columnNumber":8}]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:anonymous8","signature":"","fileName":"lib/adapters/http.js","lineNumber":682,"columnNumber":23,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":682,"columnNumber":23,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":682,"columnNumber":23,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:handleRequestError","signature":"","fileName":"lib/adapters/http.js","lineNumber":617,"columnNumber":20,"usages":[{"targetObj":{"name":"function handleRequestError(err)","typeFullName":"ANY","lineNumber":617,"columnNumber":20,"label":"UNKNOWN"},"definedBy":{"name":"function handleRequestError(err)","typeFullName":"ANY","lineNumber":617,"columnNumber":20,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"err","typeFullName":"ANY","position":1,"lineNumber":617,"columnNumber":48,"label":"PARAM"},"definedBy":{"name":"err","typeFullName":"ANY","position":1,"lineNumber":617,"columnNumber":48,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["lib/core/AxiosError.js::program:AxiosError","__ecma.Null","__ecma.Boolean","ANY","LAMBDA"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":620,"columnNumber":13}]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:handleRequestSocket","signature":"","fileName":"lib/adapters/http.js","lineNumber":624,"columnNumber":21,"usages":[{"targetObj":{"name":"function handleRequestSocket(socket)","typeFullName":"ANY","lineNumber":624,"columnNumber":21,"label":"UNKNOWN"},"definedBy":{"name":"function handleRequestSocket(socket)","typeFullName":"ANY","lineNumber":624,"columnNumber":21,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"socket","typeFullName":"ANY","position":1,"lineNumber":624,"columnNumber":50,"label":"PARAM"},"definedBy":{"name":"socket","typeFullName":"ANY","position":1,"lineNumber":624,"columnNumber":50,"label":"PARAM"},"invokedCalls":[{"callName":"setKeepAlive","resolvedMethod":"socket.setKeepAlive","paramTypes":["__ecma.Boolean","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":626,"columnNumber":6}],"argToCalls":[]},{"targetObj":{"name":"setKeepAlive","typeFullName":"ANY","resolvedMethod":"socket.setKeepAlive","isExternal":true,"lineNumber":626,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"setKeepAlive","typeFullName":"ANY","resolvedMethod":"socket.setKeepAlive","isExternal":true,"lineNumber":626,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:handleRequestTimeout","signature":"","fileName":"lib/adapters/http.js","lineNumber":650,"columnNumber":30,"usages":[{"targetObj":{"name":"function handleRequestTimeout()","typeFullName":"ANY","lineNumber":650,"columnNumber":30,"label":"UNKNOWN"},"definedBy":{"name":"function handleRequestTimeout()","typeFullName":"ANY","lineNumber":650,"columnNumber":30,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:handleResponse","signature":"","fileName":"lib/adapters/http.js","lineNumber":464,"columnNumber":37,"usages":[{"targetObj":{"name":"createUnzip","typeFullName":"ANY","resolvedMethod":"zlib:zlib:createUnzip","isExternal":true,"lineNumber":517,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"createUnzip","typeFullName":"ANY","resolvedMethod":"zlib:zlib:createUnzip","isExternal":true,"lineNumber":517,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"on","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:on","isExternal":true,"lineNumber":682,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"on","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:on","isExternal":true,"lineNumber":682,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"responseLength","typeFullName":"__ecma.Number","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"+res.headers['content-length']","typeFullName":"ANY","resolvedMethod":"<operator>.plus","isExternal":null,"lineNumber":469,"columnNumber":29,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"progressEventDecorator","resolvedMethod":"progressEventDecorator","paramTypes":["__ecma.Number","Function"],"returnType":"Function","position":1,"isExternal":false,"lineNumber":478,"columnNumber":10}]},{"targetObj":{"name":"<operator>.delete","typeFullName":"ANY","resolvedMethod":"<operator>.delete","isExternal":true,"lineNumber":215,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"<operator>.delete","typeFullName":"ANY","resolvedMethod":"<operator>.delete","isExternal":true,"lineNumber":215,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"once","typeFullName":"ANY","resolvedMethod":"events:EventEmitter:once","isExternal":true,"lineNumber":611,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"once","typeFullName":"ANY","resolvedMethod":"events:EventEmitter:once","isExternal":true,"lineNumber":611,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"on","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:on","isExternal":true,"lineNumber":476,"columnNumber":30,"label":"CALL"},"definedBy":{"name":"on","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:on","isExternal":true,"lineNumber":476,"columnNumber":30,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"function handleResponse(res)","typeFullName":"ANY","lineNumber":464,"columnNumber":37,"label":"UNKNOWN"},"definedBy":{"name":"function handleResponse(res)","typeFullName":"ANY","lineNumber":464,"columnNumber":37,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"lastRequest","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"res.req || req","typeFullName":"ANY","resolvedMethod":"<operator>.logicalOr","isExternal":null,"lineNumber":491,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["lib/core/AxiosError.js::program:AxiosError","__ecma.Null","__ecma.Boolean","ANY","LAMBDA"],"returnType":"ANY","position":4,"isExternal":true,"lineNumber":583,"columnNumber":17}]},{"targetObj":{"name":"response","typeFullName":"{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new AxiosHeaders","typeFullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders","isExternal":null,"lineNumber":540,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"AxiosHeaders","resolvedMethod":"AxiosHeaders","paramTypes":["ANY"],"returnType":"lib/core/AxiosHeaders.js::program:AxiosHeaders","position":1,"isExternal":true,"lineNumber":537,"columnNumber":12},{"callName":"settle","resolvedMethod":"settle","paramTypes":["(value: ANY) => void","(reason?: ANY) => void","{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":547,"columnNumber":8},{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["lib/core/AxiosError.js::program:AxiosError","__ecma.Null","__ecma.Boolean","ANY","{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }","LAMBDA"],"returnType":"ANY","position":5,"isExternal":true,"lineNumber":597,"columnNumber":26},{"callName":"settle","resolvedMethod":"settle","paramTypes":["(value: ANY) => void","(reason?: ANY) => void","{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":599,"columnNumber":10}]},{"targetObj":{"name":"responseBuffer","typeFullName":"__ecma.Array","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"__ecma.Array.factory","typeFullName":"__ecma.Array.factory","resolvedMethod":"__ecma.Array.factory","isExternal":null,"lineNumber":549,"columnNumber":31,"label":"CALL"},"invokedCalls":[{"callName":"push","resolvedMethod":"responseBuffer.push","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":553,"columnNumber":10}],"argToCalls":[{"callName":"concat","resolvedMethod":"Buffer.concat","paramTypes":["__ecma.Array"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":588,"columnNumber":81}]},{"targetObj":{"name":"createBrotliDecompress","typeFullName":"ANY","resolvedMethod":"zlib:zlib:createBrotliDecompress","isExternal":true,"lineNumber":524,"columnNumber":25,"label":"CALL"},"definedBy":{"name":"createBrotliDecompress","typeFullName":"ANY","resolvedMethod":"zlib:zlib:createBrotliDecompress","isExternal":true,"lineNumber":524,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.new","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:<operator>.new","isExternal":true,"lineNumber":269,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"<operator>.new","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:<operator>.new","isExternal":true,"lineNumber":269,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"res","typeFullName":"ANY","position":1,"lineNumber":464,"columnNumber":61,"label":"PARAM"},"definedBy":{"name":"res","typeFullName":"ANY","position":1,"lineNumber":464,"columnNumber":61,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"","resolvedMethod":"_tmp_53.push","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":467,"columnNumber":23}]},{"targetObj":{"name":"transformStream","typeFullName":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new AxiosTransformStream","typeFullName":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream","isExternal":null,"lineNumber":472,"columnNumber":32,"label":"CALL"},"invokedCalls":[{"callName":"on","resolvedMethod":"transformStream.on","paramTypes":["__ecma.String","[any, ANY]:<member>(throttled)"],"returnType":"[any, ANY]:<member>(throttled)","isExternal":true,"lineNumber":476,"columnNumber":30}],"argToCalls":[{"callName":"AxiosTransformStream","resolvedMethod":"AxiosTransformStream","paramTypes":["ANY"],"returnType":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream","position":1,"isExternal":true,"lineNumber":472,"columnNumber":14},{"callName":"flushOnFinish","resolvedMethod":"flushOnFinish","paramTypes":["lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":476,"columnNumber":61},{"callName":"push","resolvedMethod":"streams.push","paramTypes":["lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":484,"columnNumber":8}]},{"targetObj":{"name":"pipeline","typeFullName":"ANY","resolvedMethod":"stream:stream:pipeline","isExternal":true,"lineNumber":362,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"pipeline","typeFullName":"ANY","resolvedMethod":"stream:stream:pipeline","isExternal":true,"lineNumber":362,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"finished","typeFullName":"ANY","resolvedMethod":"stream:stream:finished","isExternal":true,"lineNumber":532,"columnNumber":27,"label":"CALL"},"definedBy":{"name":"finished","typeFullName":"ANY","resolvedMethod":"stream:stream:finished","isExternal":true,"lineNumber":532,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:handleResponse:anonymous","signature":"","fileName":"lib/adapters/http.js","lineNumber":532,"columnNumber":59,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":532,"columnNumber":59,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":532,"columnNumber":59,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"offListeners","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:offListeners","isExternal":true,"lineNumber":533,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"offListeners","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:offListeners","isExternal":true,"lineNumber":533,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:handleResponse:anonymous1","signature":"","fileName":"lib/adapters/http.js","lineNumber":603,"columnNumber":28,"usages":[{"targetObj":{"name":"err => { if ","typeFullName":"ANY","lineNumber":603,"columnNumber":28,"label":"UNKNOWN"},"definedBy":{"name":"err => { if ","typeFullName":"ANY","lineNumber":603,"columnNumber":28,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"err","typeFullName":"void","position":1,"lineNumber":603,"columnNumber":28,"label":"PARAM"},"definedBy":{"name":"err","typeFullName":"void","position":1,"lineNumber":603,"columnNumber":28,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"emit","resolvedMethod":"responseStream.emit","paramTypes":["__ecma.String","lib/core/AxiosError.js::program:AxiosError"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":605,"columnNumber":10}]},{"targetObj":{"name":"emit","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:emit","isExternal":true,"lineNumber":605,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"emit","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:emit","isExternal":true,"lineNumber":605,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:handleResponse:handleStreamData","signature":"","fileName":"lib/adapters/http.js","lineNumber":552,"columnNumber":34,"usages":[{"targetObj":{"name":"function handleStreamData(chunk)","typeFullName":"ANY","lineNumber":552,"columnNumber":34,"label":"UNKNOWN"},"definedBy":{"name":"function handleStreamData(chunk)","typeFullName":"ANY","lineNumber":552,"columnNumber":34,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"chunk","typeFullName":"ANY","position":1,"lineNumber":552,"columnNumber":60,"label":"PARAM"},"definedBy":{"name":"chunk","typeFullName":"ANY","position":1,"lineNumber":552,"columnNumber":60,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"push","resolvedMethod":"responseBuffer.push","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":553,"columnNumber":10}]},{"targetObj":{"name":"<operator>.minus","typeFullName":"ANY","resolvedMethod":"<operator>.minus","isExternal":true,"lineNumber":562,"columnNumber":79,"label":"CALL"},"definedBy":{"name":"<operator>.minus","typeFullName":"ANY","resolvedMethod":"<operator>.minus","isExternal":true,"lineNumber":562,"columnNumber":79,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"destroy","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:destroy","isExternal":true,"lineNumber":606,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"destroy","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:destroy","isExternal":true,"lineNumber":606,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:handleResponse:handleStreamEnd","signature":"","fileName":"lib/adapters/http.js","lineNumber":586,"columnNumber":33,"usages":[{"targetObj":{"name":"toString","typeFullName":"ANY","resolvedMethod":"__ecma.String:toString","isExternal":true,"lineNumber":78,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"toString","typeFullName":"ANY","resolvedMethod":"__ecma.String:toString","isExternal":true,"lineNumber":78,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"stripBOM","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:stripBOM","isExternal":true,"lineNumber":259,"columnNumber":26,"label":"CALL"},"definedBy":{"name":"stripBOM","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:stripBOM","isExternal":true,"lineNumber":259,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"function handleStreamEnd()","typeFullName":"ANY","lineNumber":586,"columnNumber":33,"label":"UNKNOWN"},"definedBy":{"name":"function handleStreamEnd()","typeFullName":"ANY","lineNumber":586,"columnNumber":33,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"concat","typeFullName":"ANY","resolvedMethod":"Buffer.concat","isExternal":true,"lineNumber":588,"columnNumber":81,"label":"CALL"},"definedBy":{"name":"concat","typeFullName":"ANY","resolvedMethod":"Buffer.concat","isExternal":true,"lineNumber":588,"columnNumber":81,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"responseData","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":null,"lineNumber":588,"columnNumber":31,"label":"CALL"},"invokedCalls":[{"callName":"toString","resolvedMethod":"responseData.toString","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":590,"columnNumber":29}],"argToCalls":[{"callName":"stripBOM","resolvedMethod":"utils.stripBOM","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":592,"columnNumber":31}]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:handleResponse:handleStreamError","signature":"","fileName":"lib/adapters/http.js","lineNumber":581,"columnNumber":35,"usages":[{"targetObj":{"name":"function handleStreamError(err)","typeFullName":"ANY","lineNumber":581,"columnNumber":35,"label":"UNKNOWN"},"definedBy":{"name":"function handleStreamError(err)","typeFullName":"ANY","lineNumber":581,"columnNumber":35,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"err","typeFullName":"ANY","position":1,"lineNumber":581,"columnNumber":62,"label":"PARAM"},"definedBy":{"name":"err","typeFullName":"ANY","position":1,"lineNumber":581,"columnNumber":62,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["lib/core/AxiosError.js::program:AxiosError","__ecma.Null","__ecma.Boolean","ANY","LAMBDA"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":583,"columnNumber":17}]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:handleResponse:handlerStreamAborted","signature":"","fileName":"lib/adapters/http.js","lineNumber":566,"columnNumber":37,"usages":[{"targetObj":{"name":"function handlerStreamAborted()","typeFullName":"ANY","lineNumber":566,"columnNumber":37,"label":"UNKNOWN"},"definedBy":{"name":"function handlerStreamAborted()","typeFullName":"ANY","lineNumber":566,"columnNumber":37,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"err","typeFullName":"lib/core/AxiosError.js::program:AxiosError","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new AxiosError","typeFullName":"lib/core/AxiosError.js::program:AxiosError","resolvedMethod":"lib/core/AxiosError.js::program:AxiosError","isExternal":null,"lineNumber":571,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"AxiosError","resolvedMethod":"AxiosError","paramTypes":["__ecma.String","ANY","__ecma.Boolean","ANY","LAMBDA"],"returnType":"lib/core/AxiosError.js::program:AxiosError","position":1,"isExternal":true,"lineNumber":571,"columnNumber":16},{"callName":"destroy","resolvedMethod":"responseStream.destroy","paramTypes":["lib/core/AxiosError.js::program:AxiosError"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":577,"columnNumber":10},{"callName":"reject","resolvedMethod":"reject","paramTypes":["lib/core/AxiosError.js::program:AxiosError"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":578,"columnNumber":10}]}]},{"code":"","fullName":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:onFinished","signature":"","fileName":"lib/adapters/http.js","lineNumber":197,"columnNumber":23,"usages":[{"targetObj":{"name":"onFinished","typeFullName":"void","resolvedMethod":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:onFinished","isExternal":false,"lineNumber":534,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"onFinished","typeFullName":"void","resolvedMethod":"lib/adapters/http.js::program:httpAdapter:dispatchHttpRequest:onFinished","isExternal":false,"lineNumber":534,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"unsubscribe","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:<member>(cancelToken):unsubscribe","isExternal":true,"lineNumber":199,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"unsubscribe","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:<member>(cancelToken):unsubscribe","isExternal":true,"lineNumber":199,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"removeEventListener","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:<member>(signal):removeEventListener","isExternal":true,"lineNumber":203,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"removeEventListener","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:<member>(signal):removeEventListener","isExternal":true,"lineNumber":203,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"removeAllListeners","typeFullName":"ANY","resolvedMethod":"events:EventEmitter:removeAllListeners","isExternal":true,"lineNumber":206,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"removeAllListeners","typeFullName":"ANY","resolvedMethod":"events:EventEmitter:removeAllListeners","isExternal":true,"lineNumber":206,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:resolveFamily","signature":"","fileName":"lib/adapters/http.js","lineNumber":156,"columnNumber":22,"usages":[{"targetObj":{"name":"resolveFamily","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:resolveFamily","isExternal":false,"lineNumber":166,"columnNumber":47,"label":"CALL"},"definedBy":{"name":"resolveFamily","typeFullName":"ANY","resolvedMethod":"lib/adapters/http.js::program:resolveFamily","isExternal":false,"lineNumber":166,"columnNumber":47,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"address","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"param1_0.address","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":156,"columnNumber":24,"label":"CALL"},"invokedCalls":[{"callName":"indexOf","resolvedMethod":"address.indexOf","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":162,"columnNumber":23}],"argToCalls":[{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":157,"columnNumber":7}]},{"targetObj":{"name":"TypeError","typeFullName":"ANY","resolvedMethod":"TypeError","isExternal":true,"lineNumber":70,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"TypeError","typeFullName":"ANY","resolvedMethod":"TypeError","isExternal":true,"lineNumber":70,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/http.js::program:setProxy","signature":"","fileName":"lib/adapters/http.js","lineNumber":83,"columnNumber":0,"usages":[{"targetObj":{"name":"includes","typeFullName":"ANY","resolvedMethod":"__ecma.String:includes","isExternal":true,"lineNumber":116,"columnNumber":25,"label":"CALL"},"definedBy":{"name":"includes","typeFullName":"ANY","resolvedMethod":"__ecma.String:includes","isExternal":true,"lineNumber":116,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"proxy","typeFullName":"__ecma.URL","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new URL","typeFullName":"URL","resolvedMethod":"URL","isExternal":null,"lineNumber":88,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"URL","resolvedMethod":"URL","paramTypes":["proxy-from-env:proxyFromEnv:getProxyForUrl:<returnValue>"],"returnType":"URL","position":1,"isExternal":true,"lineNumber":88,"columnNumber":6}]},{"targetObj":{"name":"getProxyForUrl","typeFullName":"ANY","resolvedMethod":"proxy-from-env:proxyFromEnv:getProxyForUrl","isExternal":true,"lineNumber":86,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"getProxyForUrl","typeFullName":"ANY","resolvedMethod":"proxy-from-env:proxyFromEnv:getProxyForUrl","isExternal":true,"lineNumber":86,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"configProxy","typeFullName":"AxiosProxyConfig","position":2,"lineNumber":83,"columnNumber":27,"label":"PARAM"},"definedBy":{"name":"configProxy","typeFullName":"AxiosProxyConfig","position":2,"lineNumber":83,"columnNumber":27,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"setProxy","resolvedMethod":"setProxy","paramTypes":["ANY","AxiosProxyConfig","ANY"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":123,"columnNumber":4}]},{"targetObj":{"name":"setProxy","typeFullName":"http:http:ClientRequestArgs","resolvedMethod":"lib/adapters/http.js::program:setProxy","isExternal":false,"lineNumber":432,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"setProxy","typeFullName":"http:http:ClientRequestArgs","resolvedMethod":"lib/adapters/http.js::program:setProxy","isExternal":false,"lineNumber":432,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"from","typeFullName":"ANY","resolvedMethod":"Buffer\n        .from","isExternal":true,"lineNumber":102,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"from","typeFullName":"ANY","resolvedMethod":"Buffer\n        .from","isExternal":true,"lineNumber":102,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"location","typeFullName":"__ecma.String","position":3,"lineNumber":83,"columnNumber":40,"label":"PARAM"},"definedBy":{"name":"location","typeFullName":"__ecma.String","position":3,"lineNumber":83,"columnNumber":40,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"getProxyForUrl","resolvedMethod":"proxyFromEnv.getProxyForUrl","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":86,"columnNumber":21}]}]},{"code":"","fullName":"lib/adapters/http.js::program:setProxy:beforeRedirect","signature":"","fileName":"lib/adapters/http.js","lineNumber":120,"columnNumber":34,"usages":[{"targetObj":{"name":"function beforeRedirect(redirectOptions)","typeFullName":"ANY","lineNumber":120,"columnNumber":34,"label":"UNKNOWN"},"definedBy":{"name":"function beforeRedirect(redirectOptions)","typeFullName":"ANY","lineNumber":120,"columnNumber":34,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"redirectOptions","typeFullName":"ANY","position":1,"lineNumber":120,"columnNumber":58,"label":"PARAM"},"definedBy":{"name":"redirectOptions","typeFullName":"ANY","position":1,"lineNumber":120,"columnNumber":58,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"setProxy","resolvedMethod":"setProxy","paramTypes":["ANY","AxiosProxyConfig","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":123,"columnNumber":4}]}]},{"code":"","fullName":"lib/adapters/http.js::program:wrapAsync","signature":"","fileName":"lib/adapters/http.js","lineNumber":131,"columnNumber":18,"usages":[{"targetObj":{"name":"wrapAsync","typeFullName":"Promise<any>","resolvedMethod":"lib/adapters/http.js::program:wrapAsync","isExternal":false,"lineNumber":170,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"wrapAsync","typeFullName":"Promise<any>","resolvedMethod":"lib/adapters/http.js::program:wrapAsync","isExternal":false,"lineNumber":170,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/xhr.js::program","signature":"","fileName":"lib/adapters/xhr.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/xhr.js::program:require","isExternal":null,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"forEach","resolvedMethod":"utils.forEach","paramTypes":["(asStrings: ANY) => ANY","LAMBDA"],"returnType":"(asStrings: ANY) => ANY","isExternal":true,"lineNumber":138,"columnNumber":6},{"callName":"isUndefined","resolvedMethod":"utils.isUndefined","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":144,"columnNumber":9}],"argToCalls":[]},{"targetObj":{"name":"AxiosHeaders","typeFullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/xhr.js::program:require","isExternal":null,"lineNumber":8,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"from","resolvedMethod":"AxiosHeaders.from","paramTypes":["ANY"],"returnType":"ANY","isExternal":false,"lineNumber":18,"columnNumber":27},{"callName":"from","resolvedMethod":"AxiosHeaders.from","paramTypes":["ANY"],"returnType":"ANY","isExternal":false,"lineNumber":45,"columnNumber":30}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/xhr.js::program:require","isExternal":true,"lineNumber":10,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/adapters/xhr.js::program:require","isExternal":true,"lineNumber":10,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/xhr.js::program:anonymous","signature":"","fileName":"lib/adapters/xhr.js","lineNumber":14,"columnNumber":40,"usages":[{"targetObj":{"name":"function (config)","typeFullName":"ANY","lineNumber":14,"columnNumber":40,"label":"UNKNOWN"},"definedBy":{"name":"function (config)","typeFullName":"ANY","lineNumber":14,"columnNumber":40,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"config","typeFullName":"ANY","position":1,"lineNumber":14,"columnNumber":50,"label":"PARAM"},"definedBy":{"name":"config","typeFullName":"ANY","position":1,"lineNumber":14,"columnNumber":50,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"resolveConfig","resolvedMethod":"resolveConfig","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":16,"columnNumber":20}]}]},{"code":"","fullName":"lib/adapters/xhr.js::program:anonymous:dispatchXhrRequest","signature":"","fileName":"lib/adapters/xhr.js","lineNumber":15,"columnNumber":21,"usages":[{"targetObj":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(signal):addEventListener","isExternal":true,"lineNumber":182,"columnNumber":48,"label":"CALL"},"definedBy":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(signal):addEventListener","isExternal":true,"lineNumber":182,"columnNumber":48,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"flushUpload","typeFullName":"Function:<indexAccess>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_13[1]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":161,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"addEventListener","resolvedMethod":"request.upload.addEventListener","paramTypes":["__ecma.String","Function:<indexAccess>"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":165,"columnNumber":6}]},{"targetObj":{"name":"function dispatchXhrRequest(resolve, reject)","typeFullName":"ANY","lineNumber":15,"columnNumber":21,"label":"UNKNOWN"},"definedBy":{"name":"function dispatchXhrRequest(resolve, reject)","typeFullName":"ANY","lineNumber":15,"columnNumber":21,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"send","typeFullName":"ANY","resolvedMethod":"__ecma.Null:send","isExternal":true,"lineNumber":195,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"send","typeFullName":"ANY","resolvedMethod":"__ecma.Null:send","isExternal":true,"lineNumber":195,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:<member>(upload):addEventListener","isExternal":true,"lineNumber":165,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:<member>(upload):addEventListener","isExternal":true,"lineNumber":165,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"onDownloadProgress","typeFullName":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(onDownloadProgress)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_5.onDownloadProgress","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":19,"columnNumber":41,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"progressEventReducer","resolvedMethod":"progressEventReducer","paramTypes":["../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(onDownloadProgress)","__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":155,"columnNumber":44}]},{"targetObj":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"__ecma.String:<member>(method):toUpperCase","isExternal":true,"lineNumber":35,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"__ecma.String:<member>(method):toUpperCase","isExternal":true,"lineNumber":35,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"send","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:send","isExternal":true,"lineNumber":195,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"send","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:send","isExternal":true,"lineNumber":195,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"subscribe","typeFullName":"ANY","resolvedMethod":"__ecma.String:<member>(cancelToken):subscribe","isExternal":true,"lineNumber":180,"columnNumber":29,"label":"CALL"},"definedBy":{"name":"subscribe","typeFullName":"ANY","resolvedMethod":"__ecma.String:<member>(cancelToken):subscribe","isExternal":true,"lineNumber":180,"columnNumber":29,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"__ecma.String:<member>(signal):addEventListener","isExternal":true,"lineNumber":182,"columnNumber":48,"label":"CALL"},"definedBy":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"__ecma.String:<member>(signal):addEventListener","isExternal":true,"lineNumber":182,"columnNumber":48,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"requestHeaders","typeFullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"AxiosHeaders.from","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:from:<returnValue>:normalize","isExternal":null,"lineNumber":18,"columnNumber":27,"label":"CALL"},"invokedCalls":[{"callName":"setContentType","resolvedMethod":"requestHeaders.setContentType","paramTypes":["__ecma.Null"],"returnType":"ANY","isExternal":true,"lineNumber":134,"columnNumber":33},{"callName":"toJSON","resolvedMethod":"requestHeaders.toJSON","paramTypes":[],"returnType":"ANY","isExternal":false,"lineNumber":138,"columnNumber":20}],"argToCalls":[]},{"targetObj":{"name":"open","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:open","isExternal":true,"lineNumber":35,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"open","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:open","isExternal":true,"lineNumber":35,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"request","typeFullName":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new XMLHttpRequest","typeFullName":"XMLHttpRequest","resolvedMethod":"XMLHttpRequest","isExternal":null,"lineNumber":33,"columnNumber":18,"label":"CALL"},"invokedCalls":[{"callName":"open","resolvedMethod":"request.open","paramTypes":["ANY","ANY","__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":35,"columnNumber":4},{"callName":"getAllResponseHeaders","resolvedMethod":"request.getAllResponseHeaders","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":46,"columnNumber":46},{"callName":"setRequestHeader","resolvedMethod":"request.setRequestHeader","paramTypes":["ANY","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":139,"columnNumber":8},{"callName":"addEventListener","resolvedMethod":"request.addEventListener","paramTypes":["__ecma.String","Function:<indexAccess>"],"returnType":"ANY","isExternal":true,"lineNumber":156,"columnNumber":6},{"callName":"abort","resolvedMethod":"request.abort","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":176,"columnNumber":8},{"callName":"send","resolvedMethod":"request.send","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":195,"columnNumber":4}],"argToCalls":[{"callName":"XMLHttpRequest","resolvedMethod":"XMLHttpRequest","paramTypes":[],"returnType":"XMLHttpRequest","position":1,"isExternal":true,"lineNumber":33,"columnNumber":8}]},{"targetObj":{"name":"protocol","typeFullName":"lib/helpers/parseProtocol.js::program:parseProtocol:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"parseProtocol","typeFullName":"ANY","resolvedMethod":"lib/helpers/parseProtocol.js::program:parseProtocol","isExternal":null,"lineNumber":186,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"indexOf","resolvedMethod":"platform.protocols.indexOf","paramTypes":["lib/helpers/parseProtocol.js::program:parseProtocol:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":188,"columnNumber":20}]},{"targetObj":{"name":"open","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:open","isExternal":true,"lineNumber":35,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"open","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:open","isExternal":true,"lineNumber":35,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"{ isNode: __ecma.Boolean; classes: { URLSearchParams: ANY; FormData: ANY; Blob: { new (blobParts?: BlobPart[], options?: BlobPropertyBag): Blob; prototype: Blob; }; }; protocols: Array<string>; hasBrowserEnv: __ecma.Boolean; hasStandardBrowserWebWorkerEnv: __ecma.Boolean; hasStandardBrowserEnv: __ecma.Boolean; navigator: Navigator; origin: __ecma.String; }:<member>(protocols):indexOf","isExternal":true,"lineNumber":188,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"{ isNode: __ecma.Boolean; classes: { URLSearchParams: ANY; FormData: ANY; Blob: { new (blobParts?: BlobPart[], options?: BlobPropertyBag): Blob; prototype: Blob; }; }; protocols: Array<string>; hasBrowserEnv: __ecma.Boolean; hasStandardBrowserWebWorkerEnv: __ecma.Boolean; hasStandardBrowserEnv: __ecma.Boolean; navigator: Navigator; origin: __ecma.String; }:<member>(protocols):indexOf","isExternal":true,"lineNumber":188,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"onUploadProgress","typeFullName":"XMLHttpRequestUpload","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_5.onUploadProgress","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":19,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"progressEventReducer","resolvedMethod":"progressEventReducer","paramTypes":["XMLHttpRequestUpload"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":161,"columnNumber":40}]},{"targetObj":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(method):toUpperCase","isExternal":true,"lineNumber":35,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(method):toUpperCase","isExternal":true,"lineNumber":35,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"__ecma.Null:addEventListener","isExternal":true,"lineNumber":156,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"__ecma.Null:addEventListener","isExternal":true,"lineNumber":156,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:addEventListener","isExternal":true,"lineNumber":156,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:addEventListener","isExternal":true,"lineNumber":156,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"send","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:send","isExternal":true,"lineNumber":195,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"send","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:send","isExternal":true,"lineNumber":195,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"subscribe","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(cancelToken):subscribe","isExternal":true,"lineNumber":180,"columnNumber":29,"label":"CALL"},"definedBy":{"name":"subscribe","typeFullName":"ANY","resolvedMethod":"../helpers/resolveConfig.js:resolveConfig:<returnValue>:<member>(cancelToken):subscribe","isExternal":true,"lineNumber":180,"columnNumber":29,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:addEventListener","isExternal":true,"lineNumber":156,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:addEventListener","isExternal":true,"lineNumber":156,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:<member>(upload):addEventListener","isExternal":true,"lineNumber":165,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:<member>(upload):addEventListener","isExternal":true,"lineNumber":165,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"uploadThrottled","typeFullName":"Function:<indexAccess>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_13[0]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":161,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"addEventListener","resolvedMethod":"request.upload.addEventListener","paramTypes":["__ecma.String","Function:<indexAccess>"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":163,"columnNumber":6}]},{"targetObj":{"name":"open","typeFullName":"ANY","resolvedMethod":"__ecma.Null:open","isExternal":true,"lineNumber":35,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"open","typeFullName":"ANY","resolvedMethod":"__ecma.Null:open","isExternal":true,"lineNumber":35,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"downloadThrottled","typeFullName":"Function:<indexAccess>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_12[0]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":155,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"addEventListener","resolvedMethod":"request.addEventListener","paramTypes":["__ecma.String","Function:<indexAccess>"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":156,"columnNumber":6}]}]},{"code":"","fullName":"lib/adapters/xhr.js::program:anonymous:dispatchXhrRequest:anonymous","signature":"","fileName":"lib/adapters/xhr.js","lineNumber":171,"columnNumber":19,"usages":[{"targetObj":{"name":"onCanceled","typeFullName":"void","resolvedMethod":"lib/adapters/xhr.js::program:anonymous:dispatchXhrRequest:anonymous","isExternal":false,"lineNumber":182,"columnNumber":33,"label":"CALL"},"definedBy":{"name":"onCanceled","typeFullName":"void","resolvedMethod":"lib/adapters/xhr.js::program:anonymous:dispatchXhrRequest:anonymous","isExternal":false,"lineNumber":182,"columnNumber":33,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"abort","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:abort","isExternal":true,"lineNumber":176,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"abort","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:abort","isExternal":true,"lineNumber":176,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"abort","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:abort","isExternal":true,"lineNumber":176,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"abort","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:abort","isExternal":true,"lineNumber":176,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"abort","typeFullName":"ANY","resolvedMethod":"__ecma.Null:abort","isExternal":true,"lineNumber":176,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"abort","typeFullName":"ANY","resolvedMethod":"__ecma.Null:abort","isExternal":true,"lineNumber":176,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/xhr.js::program:anonymous:dispatchXhrRequest:done","signature":"","fileName":"lib/adapters/xhr.js","lineNumber":24,"columnNumber":4,"usages":[{"targetObj":{"name":"unsubscribe","typeFullName":"ANY","resolvedMethod":"__ecma.String:<member>(cancelToken):unsubscribe","isExternal":true,"lineNumber":28,"columnNumber":29,"label":"CALL"},"definedBy":{"name":"unsubscribe","typeFullName":"ANY","resolvedMethod":"__ecma.String:<member>(cancelToken):unsubscribe","isExternal":true,"lineNumber":28,"columnNumber":29,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"flushUpload","typeFullName":"ANY","resolvedMethod":"lib/adapters/xhr.js::program:flushUpload","isExternal":true,"lineNumber":25,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"flushUpload","typeFullName":"ANY","resolvedMethod":"lib/adapters/xhr.js::program:flushUpload","isExternal":true,"lineNumber":25,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"done","typeFullName":"void","resolvedMethod":"lib/adapters/xhr.js::program:anonymous:dispatchXhrRequest:done","isExternal":false,"lineNumber":64,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"done","typeFullName":"void","resolvedMethod":"lib/adapters/xhr.js::program:anonymous:dispatchXhrRequest:done","isExternal":false,"lineNumber":64,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"flushDownload","typeFullName":"ANY","resolvedMethod":"lib/adapters/xhr.js::program:flushDownload","isExternal":true,"lineNumber":26,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"flushDownload","typeFullName":"ANY","resolvedMethod":"lib/adapters/xhr.js::program:flushDownload","isExternal":true,"lineNumber":26,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"removeEventListener","typeFullName":"ANY","resolvedMethod":"__ecma.String:<member>(signal):removeEventListener","isExternal":true,"lineNumber":30,"columnNumber":24,"label":"CALL"},"definedBy":{"name":"removeEventListener","typeFullName":"ANY","resolvedMethod":"__ecma.String:<member>(signal):removeEventListener","isExternal":true,"lineNumber":30,"columnNumber":24,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/xhr.js::program:anonymous:dispatchXhrRequest:handleAbort","signature":"","fileName":"lib/adapters/xhr.js","lineNumber":95,"columnNumber":22,"usages":[{"targetObj":{"name":"function handleAbort()","typeFullName":"ANY","lineNumber":95,"columnNumber":22,"label":"UNKNOWN"},"definedBy":{"name":"function handleAbort()","typeFullName":"ANY","lineNumber":95,"columnNumber":22,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/xhr.js::program:anonymous:dispatchXhrRequest:handleError","signature":"","fileName":"lib/adapters/xhr.js","lineNumber":107,"columnNumber":22,"usages":[{"targetObj":{"name":"function handleError()","typeFullName":"ANY","lineNumber":107,"columnNumber":22,"label":"UNKNOWN"},"definedBy":{"name":"function handleError()","typeFullName":"ANY","lineNumber":107,"columnNumber":22,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/xhr.js::program:anonymous:dispatchXhrRequest:handleLoad","signature":"","fileName":"lib/adapters/xhr.js","lineNumber":76,"columnNumber":35,"usages":[{"targetObj":{"name":"function handleLoad()","typeFullName":"ANY","lineNumber":76,"columnNumber":35,"label":"UNKNOWN"},"definedBy":{"name":"function handleLoad()","typeFullName":"ANY","lineNumber":76,"columnNumber":35,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:<member>(responseURL):indexOf","isExternal":true,"lineNumber":85,"columnNumber":61,"label":"CALL"},"definedBy":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:<member>(responseURL):indexOf","isExternal":true,"lineNumber":85,"columnNumber":61,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:<member>(responseURL):indexOf","isExternal":true,"lineNumber":85,"columnNumber":61,"label":"CALL"},"definedBy":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:<member>(responseURL):indexOf","isExternal":true,"lineNumber":85,"columnNumber":61,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"setTimeout","typeFullName":"ANY","resolvedMethod":"lib/adapters/xhr.js::program:setTimeout","isExternal":true,"lineNumber":90,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"setTimeout","typeFullName":"ANY","resolvedMethod":"lib/adapters/xhr.js::program:setTimeout","isExternal":true,"lineNumber":90,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/xhr.js::program:anonymous:dispatchXhrRequest:handleTimeout","signature":"","fileName":"lib/adapters/xhr.js","lineNumber":117,"columnNumber":24,"usages":[{"targetObj":{"name":"function handleTimeout()","typeFullName":"ANY","lineNumber":117,"columnNumber":24,"label":"UNKNOWN"},"definedBy":{"name":"function handleTimeout()","typeFullName":"ANY","lineNumber":117,"columnNumber":24,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/xhr.js::program:anonymous:dispatchXhrRequest:onloadend","signature":"","fileName":"lib/adapters/xhr.js","lineNumber":40,"columnNumber":4,"usages":[{"targetObj":{"name":"function onloadend()","typeFullName":"ANY","lineNumber":40,"columnNumber":4,"label":"UNKNOWN"},"definedBy":{"name":"function onloadend()","typeFullName":"ANY","lineNumber":40,"columnNumber":4,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getAllResponseHeaders","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:getAllResponseHeaders","isExternal":true,"lineNumber":46,"columnNumber":46,"label":"CALL"},"definedBy":{"name":"getAllResponseHeaders","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:getAllResponseHeaders","isExternal":true,"lineNumber":46,"columnNumber":46,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getAllResponseHeaders","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:getAllResponseHeaders","isExternal":true,"lineNumber":46,"columnNumber":46,"label":"CALL"},"definedBy":{"name":"getAllResponseHeaders","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:getAllResponseHeaders","isExternal":true,"lineNumber":46,"columnNumber":46,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getAllResponseHeaders","typeFullName":"ANY","resolvedMethod":"__ecma.Null:getAllResponseHeaders","isExternal":true,"lineNumber":46,"columnNumber":46,"label":"CALL"},"definedBy":{"name":"getAllResponseHeaders","typeFullName":"ANY","resolvedMethod":"__ecma.Null:getAllResponseHeaders","isExternal":true,"lineNumber":46,"columnNumber":46,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/xhr.js::program:anonymous:dispatchXhrRequest:onloadend:_reject","signature":"","fileName":"lib/adapters/xhr.js","lineNumber":62,"columnNumber":9,"usages":[{"targetObj":{"name":"function _reject(err)","typeFullName":"ANY","lineNumber":62,"columnNumber":9,"label":"UNKNOWN"},"definedBy":{"name":"function _reject(err)","typeFullName":"ANY","lineNumber":62,"columnNumber":9,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"err","typeFullName":"ANY","position":1,"lineNumber":62,"columnNumber":26,"label":"PARAM"},"definedBy":{"name":"err","typeFullName":"ANY","position":1,"lineNumber":62,"columnNumber":26,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"reject","resolvedMethod":"reject","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":63,"columnNumber":8}]},{"targetObj":{"name":"reject","typeFullName":"ANY","resolvedMethod":"lib/adapters/xhr.js::program:reject","isExternal":true,"lineNumber":189,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"reject","typeFullName":"ANY","resolvedMethod":"lib/adapters/xhr.js::program:reject","isExternal":true,"lineNumber":189,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/xhr.js::program:anonymous:dispatchXhrRequest:onloadend:_resolve","signature":"","fileName":"lib/adapters/xhr.js","lineNumber":59,"columnNumber":13,"usages":[{"targetObj":{"name":"function _resolve(value)","typeFullName":"ANY","lineNumber":59,"columnNumber":13,"label":"UNKNOWN"},"definedBy":{"name":"function _resolve(value)","typeFullName":"ANY","lineNumber":59,"columnNumber":13,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":59,"columnNumber":31,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":59,"columnNumber":31,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"resolve","resolvedMethod":"resolve","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":60,"columnNumber":8}]},{"targetObj":{"name":"resolve","typeFullName":"ANY","resolvedMethod":"lib/adapters/xhr.js::program:resolve","isExternal":true,"lineNumber":60,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"resolve","typeFullName":"ANY","resolvedMethod":"lib/adapters/xhr.js::program:resolve","isExternal":true,"lineNumber":60,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/adapters/xhr.js::program:anonymous:dispatchXhrRequest:setRequestHeader","signature":"","fileName":"lib/adapters/xhr.js","lineNumber":138,"columnNumber":45,"usages":[{"targetObj":{"name":"val","typeFullName":"ANY","position":1,"lineNumber":138,"columnNumber":71,"label":"PARAM"},"definedBy":{"name":"val","typeFullName":"ANY","position":1,"lineNumber":138,"columnNumber":71,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"setRequestHeader","resolvedMethod":"request.setRequestHeader","paramTypes":["ANY","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":139,"columnNumber":8}]},{"targetObj":{"name":"setRequestHeader","typeFullName":"ANY","resolvedMethod":"__ecma.Null:setRequestHeader","isExternal":true,"lineNumber":139,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"setRequestHeader","typeFullName":"ANY","resolvedMethod":"__ecma.Null:setRequestHeader","isExternal":true,"lineNumber":139,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"setRequestHeader","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:setRequestHeader","isExternal":true,"lineNumber":139,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"setRequestHeader","typeFullName":"ANY","resolvedMethod":"{ new (): XMLHttpRequest; prototype: XMLHttpRequest; readonly UNSENT: 0; readonly OPENED: 1; readonly HEADERS_RECEIVED: 2; readonly LOADING: 3; readonly DONE: 4; }:setRequestHeader","isExternal":true,"lineNumber":139,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"setRequestHeader","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:setRequestHeader","isExternal":true,"lineNumber":139,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"setRequestHeader","typeFullName":"ANY","resolvedMethod":"__ecma.XMLHttpRequest:setRequestHeader","isExternal":true,"lineNumber":139,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"function setRequestHeader(val, key)","typeFullName":"ANY","lineNumber":138,"columnNumber":45,"label":"UNKNOWN"},"definedBy":{"name":"function setRequestHeader(val, key)","typeFullName":"ANY","lineNumber":138,"columnNumber":45,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"key","typeFullName":"ANY","position":2,"lineNumber":138,"columnNumber":76,"label":"PARAM"},"definedBy":{"name":"key","typeFullName":"ANY","position":2,"lineNumber":138,"columnNumber":76,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"setRequestHeader","resolvedMethod":"request.setRequestHeader","paramTypes":["ANY","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":139,"columnNumber":8}]}]},{"code":"","fullName":"lib/axios.js::program","signature":"","fileName":"lib/axios.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/axios.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"extend","resolvedMethod":"utils.extend","paramTypes":["lib/helpers/bind.js::program:bind:<returnValue>","ANY","lib/core/Axios.js::program:Axios","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":33,"columnNumber":2},{"callName":"extend","resolvedMethod":"utils.extend","paramTypes":["lib/helpers/bind.js::program:bind:<returnValue>","lib/core/Axios.js::program:Axios","__ecma.Null","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":36,"columnNumber":2},{"callName":"isHTMLForm","resolvedMethod":"utils.isHTMLForm","paramTypes":["{ [x: __ecma.String]: ANY; }"],"returnType":"ANY","isExternal":true,"lineNumber":80,"columnNumber":43}],"argToCalls":[]},{"targetObj":{"name":"defaults","typeFullName":"{ transitional: { silentJSONParsing: __ecma.Boolean; forcedJSONParsing: __ecma.Boolean; clarifyTimeoutError: __ecma.Boolean; }; adapter: Array<string>; transformRequest: Array<(data: ANY, headers: ANY) => ANY>; transformResponse: Array<(data: ANY) => ANY>; timeout: __ecma.Number; xsrfCookieName: __ecma.String; xsrfHeaderName: __ecma.String; maxContentLength: __ecma.Number; maxBodyLength: __ecma.Number; env: { FormData: ANY; Blob: { new (blobParts?: BlobPart[], options?: BlobPropertyBag): Blob; prototype: Blob; }; }; validateStatus: (status: ANY) => __ecma.Boolean; headers: { common: { Accept: __ecma.String; 'Content-Type': ANY; }; }; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/axios.js::program:require","isExternal":null,"lineNumber":7,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"createInstance","resolvedMethod":"createInstance","paramTypes":["{ transitional: { silentJSONParsing: __ecma.Boolean; forcedJSONParsing: __ecma.Boolean; clarifyTimeoutError: __ecma.Boolean; }; adapter: Array<string>; transformRequest: Array<(data: ANY, headers: ANY) => ANY>; transformResponse: Array<(data: ANY) => ANY>; timeout: __ecma.Number; xsrfCookieName: __ecma.String; xsrfHeaderName: __ecma.String; maxContentLength: __ecma.Number; maxBodyLength: __ecma.Number; env: { FormData: ANY; Blob: { new (blobParts?: BlobPart[], options?: BlobPropertyBag): Blob; prototype: Blob; }; }; validateStatus: (status: ANY) => __ecma.Boolean; headers: { common: { Accept: __ecma.String; 'Content-Type': ANY; }; }; }"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":47,"columnNumber":14}]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/axios.js::program:require","isExternal":true,"lineNumber":19,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/axios.js::program:require","isExternal":true,"lineNumber":19,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/axios.js::program:all","signature":"","fileName":"lib/axios.js","lineNumber":66,"columnNumber":12,"usages":[{"targetObj":{"name":"function all(promises)","typeFullName":"ANY","lineNumber":66,"columnNumber":12,"label":"UNKNOWN"},"definedBy":{"name":"function all(promises)","typeFullName":"ANY","lineNumber":66,"columnNumber":12,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"promises","typeFullName":"ANY","position":1,"lineNumber":66,"columnNumber":25,"label":"PARAM"},"definedBy":{"name":"promises","typeFullName":"ANY","position":1,"lineNumber":66,"columnNumber":25,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"all","resolvedMethod":"Promise.all","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":67,"columnNumber":9}]}]},{"code":"","fullName":"lib/axios.js::program:anonymous","signature":"","fileName":"lib/axios.js","lineNumber":80,"columnNumber":19,"usages":[{"targetObj":{"name":"thing => formDataToJSON(utils.isHTMLForm(thing)","typeFullName":"ANY","lineNumber":80,"columnNumber":19,"label":"UNKNOWN"},"definedBy":{"name":"thing => formDataToJSON(utils.isHTMLForm(thing)","typeFullName":"ANY","lineNumber":80,"columnNumber":19,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"thing","typeFullName":"{ [x: __ecma.String]: ANY; }","position":1,"lineNumber":80,"columnNumber":19,"label":"PARAM"},"definedBy":{"name":"thing","typeFullName":"{ [x: __ecma.String]: ANY; }","position":1,"lineNumber":80,"columnNumber":19,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isHTMLForm","resolvedMethod":"utils.isHTMLForm","paramTypes":["{ [x: __ecma.String]: ANY; }"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":80,"columnNumber":43}]},{"targetObj":{"name":"isHTMLForm","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isHTMLForm","isExternal":true,"lineNumber":47,"columnNumber":27,"label":"CALL"},"definedBy":{"name":"isHTMLForm","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isHTMLForm","isExternal":true,"lineNumber":47,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/axios.js::program:createInstance","signature":"","fileName":"lib/axios.js","lineNumber":28,"columnNumber":0,"usages":[{"targetObj":{"name":"createInstance","typeFullName":"(...args: Array<any>) => ANY","resolvedMethod":"lib/axios.js::program:createInstance","isExternal":false,"lineNumber":47,"columnNumber":14,"label":"CALL"},"definedBy":{"name":"createInstance","typeFullName":"(...args: Array<any>) => ANY","resolvedMethod":"lib/axios.js::program:createInstance","isExternal":false,"lineNumber":47,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"defaultConfig","typeFullName":"ANY","position":1,"lineNumber":28,"columnNumber":24,"label":"PARAM"},"definedBy":{"name":"defaultConfig","typeFullName":"ANY","position":1,"lineNumber":28,"columnNumber":24,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"mergeConfig","resolvedMethod":"mergeConfig","paramTypes":["ANY","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":40,"columnNumber":26}]},{"targetObj":{"name":"extend","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:extend","isExternal":true,"lineNumber":36,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"extend","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:extend","isExternal":true,"lineNumber":36,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"instance","typeFullName":"lib/helpers/bind.js::program:bind:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"bind","typeFullName":"ANY","resolvedMethod":"lib/helpers/bind.js::program:bind","isExternal":null,"lineNumber":30,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"extend","resolvedMethod":"utils.extend","paramTypes":["lib/helpers/bind.js::program:bind:<returnValue>","ANY","lib/core/Axios.js::program:Axios","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":33,"columnNumber":2},{"callName":"extend","resolvedMethod":"utils.extend","paramTypes":["lib/helpers/bind.js::program:bind:<returnValue>","lib/core/Axios.js::program:Axios","__ecma.Null","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":36,"columnNumber":2}]},{"targetObj":{"name":"context","typeFullName":"lib/core/Axios.js::program:Axios","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new Axios","typeFullName":"lib/core/Axios.js::program:Axios","resolvedMethod":"lib/core/Axios.js::program:Axios","isExternal":null,"lineNumber":29,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"Axios","resolvedMethod":"Axios","paramTypes":["ANY"],"returnType":"lib/core/Axios.js::program:Axios","position":1,"isExternal":true,"lineNumber":29,"columnNumber":8},{"callName":"bind","resolvedMethod":"bind","paramTypes":["ANY","lib/core/Axios.js::program:Axios"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":30,"columnNumber":19},{"callName":"extend","resolvedMethod":"utils.extend","paramTypes":["lib/helpers/bind.js::program:bind:<returnValue>","ANY","lib/core/Axios.js::program:Axios","ANY"],"returnType":"ANY","position":3,"isExternal":true,"lineNumber":33,"columnNumber":2},{"callName":"extend","resolvedMethod":"utils.extend","paramTypes":["lib/helpers/bind.js::program:bind:<returnValue>","lib/core/Axios.js::program:Axios","__ecma.Null","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":36,"columnNumber":2}]}]},{"code":"","fullName":"lib/axios.js::program:createInstance:create","signature":"","fileName":"lib/axios.js","lineNumber":39,"columnNumber":20,"usages":[{"targetObj":{"name":"function create(instanceConfig)","typeFullName":"ANY","lineNumber":39,"columnNumber":20,"label":"UNKNOWN"},"definedBy":{"name":"function create(instanceConfig)","typeFullName":"ANY","lineNumber":39,"columnNumber":20,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"instanceConfig","typeFullName":"ANY","position":1,"lineNumber":39,"columnNumber":36,"label":"PARAM"},"definedBy":{"name":"instanceConfig","typeFullName":"ANY","position":1,"lineNumber":39,"columnNumber":36,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"mergeConfig","resolvedMethod":"mergeConfig","paramTypes":["ANY","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":40,"columnNumber":26}]},{"targetObj":{"name":"mergeConfig","typeFullName":"ANY","resolvedMethod":"core/mergeConfig.js:mergeConfig","isExternal":true,"lineNumber":40,"columnNumber":26,"label":"CALL"},"definedBy":{"name":"mergeConfig","typeFullName":"ANY","resolvedMethod":"core/mergeConfig.js:mergeConfig","isExternal":true,"lineNumber":40,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/cancel/CancelToken.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/cancel/CancelToken.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program:CancelToken:<init>","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":13,"columnNumber":2,"usages":[{"targetObj":{"name":"<operator>.new","typeFullName":"ANY","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:<init>","isExternal":false,"lineNumber":125,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"<operator>.new","typeFullName":"ANY","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:<init>","isExternal":false,"lineNumber":125,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.new","typeFullName":"ANY","resolvedMethod":"__ecma.Promise:<operator>.new","isExternal":true,"lineNumber":20,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"<operator>.new","typeFullName":"ANY","resolvedMethod":"__ecma.Promise:<operator>.new","isExternal":true,"lineNumber":20,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"then","typeFullName":"ANY","resolvedMethod":"Promise<TResult1>:then","isExternal":true,"lineNumber":27,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"then","typeFullName":"ANY","resolvedMethod":"Promise<TResult1>:then","isExternal":true,"lineNumber":27,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program:CancelToken:<init>:anonymous","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":27,"columnNumber":22,"usages":[{"targetObj":{"name":"cancel => { if ","typeFullName":"ANY","lineNumber":27,"columnNumber":22,"label":"UNKNOWN"},"definedBy":{"name":"cancel => { if ","typeFullName":"ANY","lineNumber":27,"columnNumber":22,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"cancel","typeFullName":"void","position":1,"lineNumber":27,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"cancel","typeFullName":"void","position":1,"lineNumber":27,"columnNumber":22,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"i","resolvedMethod":"token._listeners[i]","paramTypes":["void"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":33,"columnNumber":8}]},{"targetObj":{"name":"i","typeFullName":"ANY","resolvedMethod":"lib/cancel/CancelToken.js::program:<member>(_listeners):i","isExternal":true,"lineNumber":33,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"i","typeFullName":"ANY","resolvedMethod":"lib/cancel/CancelToken.js::program:<member>(_listeners):i","isExternal":true,"lineNumber":33,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"i","typeFullName":"ANY","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:<member>(_listeners):i","isExternal":true,"lineNumber":33,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"i","typeFullName":"ANY","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:<member>(_listeners):i","isExternal":true,"lineNumber":33,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program:CancelToken:<init>:anonymous1","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":39,"columnNumber":24,"usages":[{"targetObj":{"name":"onfulfilled => { let _resolve; // eslint-disable-next-line func-names const promise = new Promise","typeFullName":"ANY","lineNumber":39,"columnNumber":24,"label":"UNKNOWN"},"definedBy":{"name":"onfulfilled => { let _resolve; // eslint-disable-next-line func-names const promise = new Promise","typeFullName":"ANY","lineNumber":39,"columnNumber":24,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"onfulfilled","typeFullName":"(value: ANY) => TResult1 | PromiseLike<TResult1>","position":1,"lineNumber":39,"columnNumber":24,"label":"PARAM"},"definedBy":{"name":"onfulfilled","typeFullName":"(value: ANY) => TResult1 | PromiseLike<TResult1>","position":1,"lineNumber":39,"columnNumber":24,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"Promise","resolvedMethod":"Promise","paramTypes":["LAMBDA"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":42,"columnNumber":22}]},{"targetObj":{"name":"promise","typeFullName":"__ecma.Promise","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new Promise","typeFullName":"ANY","resolvedMethod":null,"isExternal":null,"lineNumber":42,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"Promise","resolvedMethod":"Promise","paramTypes":["LAMBDA"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":42,"columnNumber":12}]},{"targetObj":{"name":"then","typeFullName":"ANY","resolvedMethod":"__ecma.Promise:then","isExternal":true,"lineNumber":27,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"then","typeFullName":"ANY","resolvedMethod":"__ecma.Promise:then","isExternal":true,"lineNumber":27,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program:CancelToken:<init>:anonymous1:anonymous","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":42,"columnNumber":34,"usages":[{"targetObj":{"name":"resolve => { token.subscribe","typeFullName":"ANY","lineNumber":42,"columnNumber":34,"label":"UNKNOWN"},"definedBy":{"name":"resolve => { token.subscribe","typeFullName":"ANY","lineNumber":42,"columnNumber":34,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"resolve","typeFullName":"(value: ANY) => void","position":1,"lineNumber":42,"columnNumber":34,"label":"PARAM"},"definedBy":{"name":"resolve","typeFullName":"(value: ANY) => void","position":1,"lineNumber":42,"columnNumber":34,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"subscribe","resolvedMethod":"token.subscribe","paramTypes":["(value: ANY) => void"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":43,"columnNumber":8}]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program:CancelToken:<init>:anonymous1:reject","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":47,"columnNumber":23,"usages":[{"targetObj":{"name":"function reject()","typeFullName":"ANY","lineNumber":47,"columnNumber":23,"label":"UNKNOWN"},"definedBy":{"name":"function reject()","typeFullName":"ANY","lineNumber":47,"columnNumber":23,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program:CancelToken:<init>:cancel","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":54,"columnNumber":13,"usages":[{"targetObj":{"name":"function cancel(message, config, request)","typeFullName":"ANY","lineNumber":54,"columnNumber":13,"label":"UNKNOWN"},"definedBy":{"name":"function cancel(message, config, request)","typeFullName":"ANY","lineNumber":54,"columnNumber":13,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"resolvePromise","typeFullName":"ANY","resolvedMethod":"lib/cancel/CancelToken.js::program:resolvePromise","isExternal":true,"lineNumber":61,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"resolvePromise","typeFullName":"ANY","resolvedMethod":"lib/cancel/CancelToken.js::program:resolvePromise","isExternal":true,"lineNumber":61,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program:CancelToken:<init>:promiseExecutor","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":20,"columnNumber":31,"usages":[{"targetObj":{"name":"function promiseExecutor(resolve)","typeFullName":"ANY","lineNumber":20,"columnNumber":31,"label":"UNKNOWN"},"definedBy":{"name":"function promiseExecutor(resolve)","typeFullName":"ANY","lineNumber":20,"columnNumber":31,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program:CancelToken:source","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":123,"columnNumber":2,"usages":[{"targetObj":{"name":"static source()","typeFullName":"ANY","lineNumber":123,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"static source()","typeFullName":"ANY","lineNumber":123,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"token","typeFullName":"lib/cancel/CancelToken.js::program","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new CancelToken","typeFullName":"lib/cancel/CancelToken.js::program:CancelToken","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken","isExternal":null,"lineNumber":125,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"CancelToken","resolvedMethod":"CancelToken","paramTypes":["LAMBDA"],"returnType":"lib/cancel/CancelToken.js::program:CancelToken","position":1,"isExternal":true,"lineNumber":125,"columnNumber":10}]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program:CancelToken:source:executor","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":125,"columnNumber":34,"usages":[{"targetObj":{"name":"executor","typeFullName":"void","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:source:executor","isExternal":false,"lineNumber":54,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"executor","typeFullName":"void","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:source:executor","isExternal":false,"lineNumber":54,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program:CancelToken:subscribe","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":78,"columnNumber":2,"usages":[{"targetObj":{"name":"subscribe","typeFullName":"(listener: ANY) => void","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:subscribe","isExternal":false,"lineNumber":112,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"subscribe","typeFullName":"(listener: ANY) => void","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:subscribe","isExternal":false,"lineNumber":112,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"listener","typeFullName":"ANY","position":1,"lineNumber":78,"columnNumber":12,"label":"PARAM"},"definedBy":{"name":"listener","typeFullName":"ANY","position":1,"lineNumber":78,"columnNumber":12,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"push","resolvedMethod":"this._listeners.push","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":85,"columnNumber":6},{"callName":"","resolvedMethod":"_tmp_8.push","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":87,"columnNumber":25}]},{"targetObj":{"name":"listener","typeFullName":"ANY","resolvedMethod":"lib/cancel/CancelToken.js::program:listener","isExternal":true,"lineNumber":80,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"listener","typeFullName":"ANY","resolvedMethod":"lib/cancel/CancelToken.js::program:listener","isExternal":true,"lineNumber":80,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program:CancelToken:throwIfRequested","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":68,"columnNumber":2,"usages":[{"targetObj":{"name":"throwIfRequested()","typeFullName":"ANY","lineNumber":68,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"throwIfRequested()","typeFullName":"ANY","lineNumber":68,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program:CancelToken:toAbortSignal","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":105,"columnNumber":2,"usages":[{"targetObj":{"name":"toAbortSignal()","typeFullName":"ANY","lineNumber":105,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"toAbortSignal()","typeFullName":"ANY","lineNumber":105,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"controller","typeFullName":"__ecma.AbortController","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new AbortController","typeFullName":"AbortController","resolvedMethod":"AbortController","isExternal":null,"lineNumber":106,"columnNumber":23,"label":"CALL"},"invokedCalls":[{"callName":"abort","resolvedMethod":"controller.abort","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":109,"columnNumber":6}],"argToCalls":[{"callName":"AbortController","resolvedMethod":"AbortController","paramTypes":[],"returnType":"AbortController","position":1,"isExternal":true,"lineNumber":106,"columnNumber":10}]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program:CancelToken:toAbortSignal:abort","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":108,"columnNumber":18,"usages":[{"targetObj":{"name":"(err)","typeFullName":"ANY","lineNumber":108,"columnNumber":18,"label":"UNKNOWN"},"definedBy":{"name":"(err)","typeFullName":"ANY","lineNumber":108,"columnNumber":18,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"err","typeFullName":"ANY","position":1,"lineNumber":108,"columnNumber":19,"label":"PARAM"},"definedBy":{"name":"err","typeFullName":"ANY","position":1,"lineNumber":108,"columnNumber":19,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"abort","resolvedMethod":"controller.abort","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":109,"columnNumber":6}]},{"targetObj":{"name":"abort","typeFullName":"ANY","resolvedMethod":"{ new (): AbortController; prototype: AbortController; }:abort","isExternal":true,"lineNumber":18,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"abort","typeFullName":"ANY","resolvedMethod":"{ new (): AbortController; prototype: AbortController; }:abort","isExternal":true,"lineNumber":18,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"abort","typeFullName":"ANY","resolvedMethod":"__ecma.AbortController:abort","isExternal":true,"lineNumber":18,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"abort","typeFullName":"ANY","resolvedMethod":"__ecma.AbortController:abort","isExternal":true,"lineNumber":18,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program:CancelToken:toAbortSignal:anonymous1","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":114,"columnNumber":36,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":114,"columnNumber":36,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":114,"columnNumber":36,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/CancelToken.js::program:CancelToken:unsubscribe","signature":"","fileName":"lib/cancel/CancelToken.js","lineNumber":95,"columnNumber":2,"usages":[{"targetObj":{"name":"splice","typeFullName":"ANY","resolvedMethod":"__ecma.Array:splice","isExternal":true,"lineNumber":101,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"splice","typeFullName":"ANY","resolvedMethod":"__ecma.Array:splice","isExternal":true,"lineNumber":101,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"listener","typeFullName":"ANY","position":1,"lineNumber":95,"columnNumber":14,"label":"PARAM"},"definedBy":{"name":"listener","typeFullName":"ANY","position":1,"lineNumber":95,"columnNumber":14,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"indexOf","resolvedMethod":"this._listeners.indexOf","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":99,"columnNumber":18}]},{"targetObj":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"__ecma.Array:indexOf","isExternal":true,"lineNumber":642,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"__ecma.Array:indexOf","isExternal":true,"lineNumber":642,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"index","typeFullName":"__ecma.Array:indexOf:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"this._listeners.indexOf","typeFullName":"ANY","resolvedMethod":"__ecma.Array:indexOf","isExternal":null,"lineNumber":99,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"splice","resolvedMethod":"this._listeners.splice","paramTypes":["__ecma.Array:indexOf:<returnValue>","__ecma.Number"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":101,"columnNumber":6}]},{"targetObj":{"name":"unsubscribe","typeFullName":"(listener: ANY) => void","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:unsubscribe","isExternal":false,"lineNumber":114,"columnNumber":42,"label":"CALL"},"definedBy":{"name":"unsubscribe","typeFullName":"(listener: ANY) => void","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:unsubscribe","isExternal":false,"lineNumber":114,"columnNumber":42,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/CanceledError.js::program","signature":"","fileName":"lib/cancel/CanceledError.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"inherits","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:inherits","isExternal":true,"lineNumber":36,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"inherits","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:inherits","isExternal":true,"lineNumber":36,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/cancel/CanceledError.js::program:require","isExternal":null,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"inherits","resolvedMethod":"utils.inherits","paramTypes":["lib/cancel/CanceledError.js::program:CanceledError","lib/core/AxiosError.js::program:AxiosError","ANY","LAMBDA","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":21,"columnNumber":0}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/cancel/CanceledError.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/cancel/CanceledError.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"AxiosError","typeFullName":"lib/core/AxiosError.js::program:AxiosError","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/cancel/CanceledError.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"call","resolvedMethod":"AxiosError.call","paramTypes":["lib/cancel/CanceledError.js::program","ANY","ANY","ANY","ANY","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":17,"columnNumber":2}],"argToCalls":[{"callName":"inherits","resolvedMethod":"utils.inherits","paramTypes":["lib/cancel/CanceledError.js::program:CanceledError","lib/core/AxiosError.js::program:AxiosError","ANY","LAMBDA","LAMBDA"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":21,"columnNumber":0}]}]},{"code":"","fullName":"lib/cancel/CanceledError.js::program:CanceledError","signature":"","fileName":"lib/cancel/CanceledError.js","lineNumber":15,"columnNumber":0,"usages":[{"targetObj":{"name":"<operator>.new","typeFullName":"ANY","resolvedMethod":"lib/cancel/CanceledError.js::program:CanceledError","isExternal":false,"lineNumber":18,"columnNumber":59,"label":"CALL"},"definedBy":{"name":"<operator>.new","typeFullName":"ANY","resolvedMethod":"lib/cancel/CanceledError.js::program:CanceledError","isExternal":false,"lineNumber":18,"columnNumber":59,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"config","typeFullName":"ANY","position":2,"lineNumber":15,"columnNumber":32,"label":"PARAM"},"definedBy":{"name":"config","typeFullName":"ANY","position":2,"lineNumber":15,"columnNumber":32,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"AxiosError.call","paramTypes":["lib/cancel/CanceledError.js::program","ANY","ANY","ANY","ANY","LAMBDA"],"returnType":"ANY","position":4,"isExternal":true,"lineNumber":17,"columnNumber":2}]},{"targetObj":{"name":"request","typeFullName":"ANY","position":3,"lineNumber":15,"columnNumber":40,"label":"PARAM"},"definedBy":{"name":"request","typeFullName":"ANY","position":3,"lineNumber":15,"columnNumber":40,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"AxiosError.call","paramTypes":["lib/cancel/CanceledError.js::program","ANY","ANY","ANY","ANY","LAMBDA"],"returnType":"ANY","position":5,"isExternal":true,"lineNumber":17,"columnNumber":2}]},{"targetObj":{"name":"call","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosError.js::program:AxiosError:call","isExternal":true,"lineNumber":92,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"call","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosError.js::program:AxiosError:call","isExternal":true,"lineNumber":92,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/isCancel.js::program","signature":"","fileName":"lib/cancel/isCancel.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/cancel/isCancel.js::program:isCancel","signature":"","fileName":"lib/cancel/isCancel.js","lineNumber":3,"columnNumber":15,"usages":[{"targetObj":{"name":"isCancel","typeFullName":"ANY","resolvedMethod":"lib/cancel/isCancel.js::program:isCancel","isExternal":false,"lineNumber":65,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"isCancel","typeFullName":"ANY","resolvedMethod":"lib/cancel/isCancel.js::program:isCancel","isExternal":false,"lineNumber":65,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/Axios.js::program","signature":"","fileName":"lib/core/Axios.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/Axios.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"forEach","resolvedMethod":"utils.forEach","paramTypes":["ANY","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":201,"columnNumber":0},{"callName":"forEach","resolvedMethod":"utils.forEach","paramTypes":["ANY","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":212,"columnNumber":0}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/Axios.js::program:require","isExternal":true,"lineNumber":10,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/Axios.js::program:require","isExternal":true,"lineNumber":10,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/Axios.js::program:Axios:<init>","signature":"","fileName":"lib/core/Axios.js","lineNumber":22,"columnNumber":2,"usages":[{"targetObj":{"name":"constructor(instanceConfig)","typeFullName":"ANY","lineNumber":22,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"constructor(instanceConfig)","typeFullName":"ANY","lineNumber":22,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.new","typeFullName":"ANY","resolvedMethod":"lib/core/InterceptorManager.js::program:InterceptorManager:<operator>.new","isExternal":true,"lineNumber":26,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"<operator>.new","typeFullName":"ANY","resolvedMethod":"lib/core/InterceptorManager.js::program:InterceptorManager:<operator>.new","isExternal":true,"lineNumber":26,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/Axios.js::program:Axios:_request","signature":"","fileName":"lib/core/Axios.js","lineNumber":65,"columnNumber":2,"usages":[{"targetObj":{"name":"assertOptions","typeFullName":"ANY","resolvedMethod":"{ assertOptions: (options: object, schema: object, allowUnknown: __ecma.Boolean | __ecma.Null) => object; validators: validators; }:assertOptions","isExternal":true,"lineNumber":100,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"assertOptions","typeFullName":"ANY","resolvedMethod":"{ assertOptions: (options: object, schema: object, allowUnknown: __ecma.Boolean | __ecma.Null) => object; validators: validators; }:assertOptions","isExternal":true,"lineNumber":100,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"then","typeFullName":"ANY","resolvedMethod":"(config: object) => Promise<any>:call:<returnValue>:then","isExternal":true,"lineNumber":187,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"then","typeFullName":"ANY","resolvedMethod":"(config: object) => Promise<any>:call:<returnValue>:then","isExternal":true,"lineNumber":187,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"newConfig","typeFullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"onFulfilled","typeFullName":"ANY","resolvedMethod":"lib/core/Axios.js::program:onFulfilled","isExternal":null,"lineNumber":170,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"onFulfilled","resolvedMethod":"onFulfilled","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":170,"columnNumber":20},{"callName":"call","resolvedMethod":"dispatchRequest.call","paramTypes":["lib/core/Axios.js::program","lib/core/AxiosHeaders.js::program:AxiosHeaders"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":178,"columnNumber":16}]},{"targetObj":{"name":"headers","typeFullName":"mergeConfig.js:mergeConfig:<returnValue>:<member>(headers)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_9.headers","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":77,"columnNumber":43,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"concat","resolvedMethod":"AxiosHeaders.concat","paramTypes":["ANY","mergeConfig.js:mergeConfig:<returnValue>:<member>(headers)"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":121,"columnNumber":21}]},{"targetObj":{"name":"onFulfilled","typeFullName":"ANY","resolvedMethod":"lib/core/Axios.js::program:onFulfilled","isExternal":true,"lineNumber":170,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"onFulfilled","typeFullName":"ANY","resolvedMethod":"lib/core/Axios.js::program:onFulfilled","isExternal":true,"lineNumber":170,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"paramsSerializer","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_9.paramsSerializer","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":77,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"isFunction","resolvedMethod":"utils.isFunction","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":88,"columnNumber":10},{"callName":"assertOptions","resolvedMethod":"validator.assertOptions","paramTypes":["__ecma.Boolean","ANY","__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":93,"columnNumber":8}]},{"targetObj":{"name":"bind","typeFullName":"ANY","resolvedMethod":"(config: object) => Promise<any>:bind","isExternal":true,"lineNumber":146,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"bind","typeFullName":"ANY","resolvedMethod":"(config: object) => Promise<any>:bind","isExternal":true,"lineNumber":146,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"then","typeFullName":"ANY","resolvedMethod":"Promise.resolve:<returnValue>:then","isExternal":true,"lineNumber":187,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"then","typeFullName":"ANY","resolvedMethod":"Promise.resolve:<returnValue>:then","isExternal":true,"lineNumber":187,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"merge","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:merge","isExternal":true,"lineNumber":109,"columnNumber":36,"label":"CALL"},"definedBy":{"name":"merge","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:merge","isExternal":true,"lineNumber":109,"columnNumber":36,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"promise","typeFullName":"Promise<any>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"promise.then","typeFullName":"Promise.resolve:<returnValue>:then","resolvedMethod":"Promise<any>:then","isExternal":null,"lineNumber":187,"columnNumber":16,"label":"CALL"},"invokedCalls":[{"callName":"then","resolvedMethod":"promise.then","paramTypes":["ANY","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":154,"columnNumber":18},{"callName":"then","resolvedMethod":"promise.then","paramTypes":["ANY","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":187,"columnNumber":16}],"argToCalls":[]},{"targetObj":{"name":"transitional","typeFullName":"ANY","resolvedMethod":"validators:transitional","isExternal":true,"lineNumber":83,"columnNumber":29,"label":"CALL"},"definedBy":{"name":"transitional","typeFullName":"ANY","resolvedMethod":"validators:transitional","isExternal":true,"lineNumber":83,"columnNumber":29,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"apply","typeFullName":"ANY","resolvedMethod":"__ecma.Array:<member>(unshift):apply","isExternal":true,"lineNumber":147,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"apply","typeFullName":"ANY","resolvedMethod":"__ecma.Array:<member>(unshift):apply","isExternal":true,"lineNumber":147,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"then","typeFullName":"ANY","resolvedMethod":"Promise<any>:then","isExternal":true,"lineNumber":187,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"then","typeFullName":"ANY","resolvedMethod":"Promise<any>:then","isExternal":true,"lineNumber":187,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"resolve","typeFullName":"ANY","resolvedMethod":"Promise.resolve","isExternal":true,"lineNumber":151,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"resolve","typeFullName":"ANY","resolvedMethod":"Promise.resolve","isExternal":true,"lineNumber":151,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"responseInterceptorChain","typeFullName":"__ecma.Array","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"__ecma.Array.factory","typeFullName":"__ecma.Array.factory","resolvedMethod":"__ecma.Array.factory","isExternal":null,"lineNumber":136,"columnNumber":37,"label":"CALL"},"invokedCalls":[{"callName":"push","resolvedMethod":"responseInterceptorChain.push","paramTypes":["ANY","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":138,"columnNumber":6}],"argToCalls":[{"callName":"apply","resolvedMethod":"chain.push.apply","paramTypes":["__ecma.Array","__ecma.Array"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":148,"columnNumber":6}]},{"targetObj":{"name":"apply","typeFullName":"ANY","resolvedMethod":"Array<any>:<member>(push):apply","isExternal":true,"lineNumber":148,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"apply","typeFullName":"ANY","resolvedMethod":"Array<any>:<member>(push):apply","isExternal":true,"lineNumber":148,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_request","typeFullName":"(configOrUrl: ANY, config: ANY) => ANY","resolvedMethod":"lib/core/Axios.js::program:Axios:_request","isExternal":false,"lineNumber":40,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"_request","typeFullName":"(configOrUrl: ANY, config: ANY) => ANY","resolvedMethod":"lib/core/Axios.js::program:Axios:_request","isExternal":false,"lineNumber":40,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"config","typeFullName":"ANY","position":2,"lineNumber":65,"columnNumber":24,"label":"PARAM"},"definedBy":{"name":"config","typeFullName":"ANY","position":2,"lineNumber":65,"columnNumber":24,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"mergeConfig","resolvedMethod":"mergeConfig","paramTypes":["ANY","mergeConfig.js:mergeConfig:<returnValue>"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":75,"columnNumber":13},{"callName":"assertOptions","resolvedMethod":"validator.assertOptions","paramTypes":["mergeConfig.js:mergeConfig:<returnValue>","ANY","__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":100,"columnNumber":4},{"callName":"runWhen","resolvedMethod":"interceptor.runWhen","paramTypes":["mergeConfig.js:mergeConfig:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":127,"columnNumber":55},{"callName":"resolve","resolvedMethod":"Promise.resolve","paramTypes":["mergeConfig.js:mergeConfig:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":151,"columnNumber":16}]},{"targetObj":{"name":"reject","typeFullName":"ANY","resolvedMethod":"Promise.reject","isExternal":true,"lineNumber":79,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"reject","typeFullName":"ANY","resolvedMethod":"Promise.reject","isExternal":true,"lineNumber":79,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"call","typeFullName":"ANY","resolvedMethod":"(config: object) => Promise<any>:call","isExternal":true,"lineNumber":178,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"call","typeFullName":"ANY","resolvedMethod":"(config: object) => Promise<any>:call","isExternal":true,"lineNumber":178,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"contextHeaders","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"headers && utils.merge","typeFullName":"ANY","resolvedMethod":"<operator>.logicalAnd","isExternal":null,"lineNumber":109,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"concat","resolvedMethod":"AxiosHeaders.concat","paramTypes":["ANY","mergeConfig.js:mergeConfig:<returnValue>:<member>(headers)"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":121,"columnNumber":21}]},{"targetObj":{"name":"apply","typeFullName":"ANY","resolvedMethod":"__ecma.Array:<member>(push):apply","isExternal":true,"lineNumber":148,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"apply","typeFullName":"ANY","resolvedMethod":"__ecma.Array:<member>(push):apply","isExternal":true,"lineNumber":148,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"spelling","typeFullName":"ANY","resolvedMethod":"validators:spelling","isExternal":true,"lineNumber":102,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"spelling","typeFullName":"ANY","resolvedMethod":"validators:spelling","isExternal":true,"lineNumber":102,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"mergeConfig","typeFullName":"ANY","resolvedMethod":"mergeConfig.js:mergeConfig","isExternal":true,"lineNumber":217,"columnNumber":26,"label":"CALL"},"definedBy":{"name":"mergeConfig","typeFullName":"ANY","resolvedMethod":"mergeConfig.js:mergeConfig","isExternal":true,"lineNumber":217,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"requestInterceptorChain","typeFullName":"__ecma.Array","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"__ecma.Array.factory","typeFullName":"__ecma.Array.factory","resolvedMethod":"__ecma.Array.factory","isExternal":null,"lineNumber":124,"columnNumber":36,"label":"CALL"},"invokedCalls":[{"callName":"unshift","resolvedMethod":"requestInterceptorChain.unshift","paramTypes":["ANY","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":133,"columnNumber":6}],"argToCalls":[{"callName":"apply","resolvedMethod":"chain.unshift.apply","paramTypes":["__ecma.Array","__ecma.Array"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":147,"columnNumber":6}]},{"targetObj":{"name":"onRejected","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"requestInterceptorChain[i++]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":168,"columnNumber":25,"label":"CALL"},"invokedCalls":[{"callName":"call","resolvedMethod":"onRejected.call","paramTypes":["lib/core/Axios.js::program","ANY"],"returnType":"ANY","isExternal":null,"lineNumber":172,"columnNumber":8}],"argToCalls":[]},{"targetObj":{"name":"apply","typeFullName":"ANY","resolvedMethod":"Array<any>:<member>(unshift):apply","isExternal":true,"lineNumber":147,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"apply","typeFullName":"ANY","resolvedMethod":"Array<any>:<member>(unshift):apply","isExternal":true,"lineNumber":147,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"transitional","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_9.transitional","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":77,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"assertOptions","resolvedMethod":"validator.assertOptions","paramTypes":["__ecma.Boolean","ANY","__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":80,"columnNumber":6}]}]},{"code":"","fullName":"lib/core/Axios.js::program:Axios:_request:anonymous","signature":"","fileName":"lib/core/Axios.js","lineNumber":116,"columnNumber":6,"usages":[{"targetObj":{"name":"(method)","typeFullName":"ANY","lineNumber":116,"columnNumber":6,"label":"UNKNOWN"},"definedBy":{"name":"(method)","typeFullName":"ANY","lineNumber":116,"columnNumber":6,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/Axios.js::program:Axios:_request:pushResponseInterceptors","signature":"","fileName":"lib/core/Axios.js","lineNumber":137,"columnNumber":39,"usages":[{"targetObj":{"name":"function pushResponseInterceptors(interceptor)","typeFullName":"ANY","lineNumber":137,"columnNumber":39,"label":"UNKNOWN"},"definedBy":{"name":"function pushResponseInterceptors(interceptor)","typeFullName":"ANY","lineNumber":137,"columnNumber":39,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/Axios.js::program:Axios:_request:unshiftRequestInterceptors","signature":"","fileName":"lib/core/Axios.js","lineNumber":126,"columnNumber":38,"usages":[{"targetObj":{"name":"interceptor","typeFullName":"ANY","position":1,"lineNumber":126,"columnNumber":74,"label":"PARAM"},"definedBy":{"name":"interceptor","typeFullName":"ANY","position":1,"lineNumber":126,"columnNumber":74,"label":"PARAM"},"invokedCalls":[{"callName":"runWhen","resolvedMethod":"interceptor.runWhen","paramTypes":["mergeConfig.js:mergeConfig:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":127,"columnNumber":55}],"argToCalls":[]},{"targetObj":{"name":"function unshiftRequestInterceptors(interceptor)","typeFullName":"ANY","lineNumber":126,"columnNumber":38,"label":"UNKNOWN"},"definedBy":{"name":"function unshiftRequestInterceptors(interceptor)","typeFullName":"ANY","lineNumber":126,"columnNumber":38,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"unshift","typeFullName":"ANY","resolvedMethod":"__ecma.Array:unshift","isExternal":true,"lineNumber":133,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"unshift","typeFullName":"ANY","resolvedMethod":"__ecma.Array:unshift","isExternal":true,"lineNumber":133,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"unshift","typeFullName":"ANY","resolvedMethod":"Array<any>:unshift","isExternal":true,"lineNumber":133,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"unshift","typeFullName":"ANY","resolvedMethod":"Array<any>:unshift","isExternal":true,"lineNumber":133,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"runWhen","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:runWhen","isExternal":true,"lineNumber":127,"columnNumber":55,"label":"CALL"},"definedBy":{"name":"runWhen","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:runWhen","isExternal":true,"lineNumber":127,"columnNumber":55,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/Axios.js::program:Axios:getUri","signature":"","fileName":"lib/core/Axios.js","lineNumber":193,"columnNumber":2,"usages":[{"targetObj":{"name":"getUri(config)","typeFullName":"ANY","lineNumber":193,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"getUri(config)","typeFullName":"ANY","lineNumber":193,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"config","typeFullName":"ANY","position":1,"lineNumber":193,"columnNumber":9,"label":"PARAM"},"definedBy":{"name":"config","typeFullName":"ANY","position":1,"lineNumber":193,"columnNumber":9,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"mergeConfig","resolvedMethod":"mergeConfig","paramTypes":["ANY","mergeConfig.js:mergeConfig:<returnValue>"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":194,"columnNumber":13}]},{"targetObj":{"name":"fullPath","typeFullName":"lib/helpers/combineURLs.js::program:combineURLs:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"buildFullPath","typeFullName":"lib/helpers/combineURLs.js::program:combineURLs:<returnValue>","resolvedMethod":"lib/core/buildFullPath.js::program:buildFullPath","isExternal":null,"lineNumber":195,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"buildURL","resolvedMethod":"buildURL","paramTypes":["lib/helpers/combineURLs.js::program:combineURLs:<returnValue>","ANY","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":196,"columnNumber":11}]}]},{"code":"","fullName":"lib/core/Axios.js::program:Axios:request","signature":"","fileName":"lib/core/Axios.js","lineNumber":38,"columnNumber":2,"usages":[{"targetObj":{"name":"stack","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"dummy.stack ? dummy.stack.replace","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":null,"lineNumber":48,"columnNumber":22,"label":"CALL"},"invokedCalls":[{"callName":"replace","resolvedMethod":"stack.replace","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":53,"columnNumber":58}],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:replace","isExternal":true,"lineNumber":53,"columnNumber":58,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:replace","isExternal":true,"lineNumber":53,"columnNumber":58,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"configOrUrl","typeFullName":"ANY","position":1,"lineNumber":38,"columnNumber":16,"label":"PARAM"},"definedBy":{"name":"configOrUrl","typeFullName":"ANY","position":1,"lineNumber":38,"columnNumber":16,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"_request","resolvedMethod":"this._request","paramTypes":["__ecma.String","mergeConfig.js:mergeConfig:<returnValue>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":40,"columnNumber":19}]},{"targetObj":{"name":"dummy","typeFullName":"__ecma.Error","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new Error","typeFullName":"Error","resolvedMethod":"Error","isExternal":null,"lineNumber":45,"columnNumber":76,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"captureStackTrace","resolvedMethod":"Error.captureStackTrace","paramTypes":["__ecma.Error"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":45,"columnNumber":34},{"callName":"Error","resolvedMethod":"Error","paramTypes":[],"returnType":"Error","position":1,"isExternal":true,"lineNumber":45,"columnNumber":68}]},{"targetObj":{"name":"request","typeFullName":"Promise<any>","resolvedMethod":"lib/core/Axios.js::program:Axios:request","isExternal":false,"lineNumber":217,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"request","typeFullName":"Promise<any>","resolvedMethod":"lib/core/Axios.js::program:Axios:request","isExternal":false,"lineNumber":217,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"config","typeFullName":"ANY","position":2,"lineNumber":38,"columnNumber":29,"label":"PARAM"},"definedBy":{"name":"config","typeFullName":"ANY","position":2,"lineNumber":38,"columnNumber":29,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"_request","resolvedMethod":"this._request","paramTypes":["__ecma.String","mergeConfig.js:mergeConfig:<returnValue>"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":40,"columnNumber":19}]},{"targetObj":{"name":"endsWith","typeFullName":"ANY","resolvedMethod":"String:<returnValue>:endsWith","isExternal":true,"lineNumber":53,"columnNumber":31,"label":"CALL"},"definedBy":{"name":"endsWith","typeFullName":"ANY","resolvedMethod":"String:<returnValue>:endsWith","isExternal":true,"lineNumber":53,"columnNumber":31,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"captureStackTrace","typeFullName":"ANY","resolvedMethod":"ErrorConstructor:captureStackTrace","isExternal":true,"lineNumber":20,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"captureStackTrace","typeFullName":"ANY","resolvedMethod":"ErrorConstructor:captureStackTrace","isExternal":true,"lineNumber":20,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/Axios.js::program:forEachMethodNoData","signature":"","fileName":"lib/core/Axios.js","lineNumber":201,"columnNumber":52,"usages":[{"targetObj":{"name":"function forEachMethodNoData(method)","typeFullName":"ANY","lineNumber":201,"columnNumber":52,"label":"UNKNOWN"},"definedBy":{"name":"function forEachMethodNoData(method)","typeFullName":"ANY","lineNumber":201,"columnNumber":52,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/Axios.js::program:forEachMethodNoData:anonymous","signature":"","fileName":"lib/core/Axios.js","lineNumber":203,"columnNumber":28,"usages":[{"targetObj":{"name":"function(url, config)","typeFullName":"ANY","lineNumber":203,"columnNumber":28,"label":"UNKNOWN"},"definedBy":{"name":"function(url, config)","typeFullName":"ANY","lineNumber":203,"columnNumber":28,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/Axios.js::program:forEachMethodWithData","signature":"","fileName":"lib/core/Axios.js","lineNumber":212,"columnNumber":40,"usages":[{"targetObj":{"name":"function forEachMethodWithData(method)","typeFullName":"ANY","lineNumber":212,"columnNumber":40,"label":"UNKNOWN"},"definedBy":{"name":"function forEachMethodWithData(method)","typeFullName":"ANY","lineNumber":212,"columnNumber":40,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/Axios.js::program:forEachMethodWithData:generateHTTPMethod","signature":"","fileName":"lib/core/Axios.js","lineNumber":215,"columnNumber":2,"usages":[{"targetObj":{"name":"generateHTTPMethod","typeFullName":"ANY","resolvedMethod":"lib/core/Axios.js::program:forEachMethodWithData:generateHTTPMethod","isExternal":false,"lineNumber":230,"columnNumber":37,"label":"CALL"},"definedBy":{"name":"generateHTTPMethod","typeFullName":"ANY","resolvedMethod":"lib/core/Axios.js::program:forEachMethodWithData:generateHTTPMethod","isExternal":false,"lineNumber":230,"columnNumber":37,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/Axios.js::program:forEachMethodWithData:generateHTTPMethod:httpMethod","signature":"","fileName":"lib/core/Axios.js","lineNumber":216,"columnNumber":11,"usages":[{"targetObj":{"name":"function httpMethod(url, data, config)","typeFullName":"ANY","lineNumber":216,"columnNumber":11,"label":"UNKNOWN"},"definedBy":{"name":"function httpMethod(url, data, config)","typeFullName":"ANY","lineNumber":216,"columnNumber":11,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosError.js::program","signature":"","fileName":"lib/core/AxiosError.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"defineProperties","typeFullName":"ANY","resolvedMethod":"Object.defineProperties","isExternal":true,"lineNumber":551,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"defineProperties","typeFullName":"ANY","resolvedMethod":"Object.defineProperties","isExternal":true,"lineNumber":551,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosError.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosError.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosError.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"inherits","resolvedMethod":"utils.inherits","paramTypes":["lib/core/AxiosError.js::program:AxiosError","ErrorConstructor","ANY","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":36,"columnNumber":0},{"callName":"toJSONObject","resolvedMethod":"utils.toJSONObject","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":51,"columnNumber":14},{"callName":"toFlatObject","resolvedMethod":"utils.toFlatObject","paramTypes":["ANY","Object.create:<returnValue>","LAMBDA","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":86,"columnNumber":2}],"argToCalls":[]},{"targetObj":{"name":"prototype","typeFullName":"lib/core/AxiosError.js::program:AxiosError:<member>(prototype)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"AxiosError.prototype","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":58,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"defineProperty","resolvedMethod":"Object.defineProperty","paramTypes":["lib/core/AxiosError.js::program:AxiosError:<member>(prototype)","__ecma.String","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":80,"columnNumber":0},{"callName":"create","resolvedMethod":"Object.create","paramTypes":["lib/core/AxiosError.js::program:AxiosError:<member>(prototype)"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":84,"columnNumber":21}]}]},{"code":"","fullName":"lib/core/AxiosError.js::program:AxiosError","signature":"","fileName":"lib/core/AxiosError.js","lineNumber":16,"columnNumber":0,"usages":[{"targetObj":{"name":"<operator>.new","typeFullName":"ErrorConstructor","resolvedMethod":"lib/core/AxiosError.js::program:AxiosError","isExternal":false,"lineNumber":34,"columnNumber":12,"label":"CALL"},"definedBy":{"name":"<operator>.new","typeFullName":"ErrorConstructor","resolvedMethod":"lib/core/AxiosError.js::program:AxiosError","isExternal":false,"lineNumber":34,"columnNumber":12,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"call","typeFullName":"ANY","resolvedMethod":"ErrorConstructor:call","isExternal":true,"lineNumber":17,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"call","typeFullName":"ANY","resolvedMethod":"ErrorConstructor:call","isExternal":true,"lineNumber":17,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosError.js::program:anonymous","signature":"","fileName":"lib/core/AxiosError.js","lineNumber":75,"columnNumber":10,"usages":[{"targetObj":{"name":"code => { descriptors[code] = {value: code};}","typeFullName":"ANY","lineNumber":75,"columnNumber":10,"label":"UNKNOWN"},"definedBy":{"name":"code => { descriptors[code] = {value: code};}","typeFullName":"ANY","lineNumber":75,"columnNumber":10,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosError.js::program:anonymous1","signature":"","fileName":"lib/core/AxiosError.js","lineNumber":83,"columnNumber":18,"usages":[{"targetObj":{"name":"code","typeFullName":"ANY","position":2,"lineNumber":83,"columnNumber":26,"label":"PARAM"},"definedBy":{"name":"code","typeFullName":"ANY","position":2,"lineNumber":83,"columnNumber":26,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"AxiosError.call","paramTypes":["Object.create:<returnValue>","ANY","__ecma.String","ANY","ANY","ANY","LAMBDA"],"returnType":"ANY","position":3,"isExternal":true,"lineNumber":92,"columnNumber":2}]},{"targetObj":{"name":"response","typeFullName":"ANY","position":5,"lineNumber":83,"columnNumber":49,"label":"PARAM"},"definedBy":{"name":"response","typeFullName":"ANY","position":5,"lineNumber":83,"columnNumber":49,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"AxiosError.call","paramTypes":["Object.create:<returnValue>","ANY","__ecma.String","ANY","ANY","ANY","LAMBDA"],"returnType":"ANY","position":6,"isExternal":true,"lineNumber":92,"columnNumber":2}]},{"targetObj":{"name":"error","typeFullName":"ANY","position":1,"lineNumber":83,"columnNumber":19,"label":"PARAM"},"definedBy":{"name":"error","typeFullName":"ANY","position":1,"lineNumber":83,"columnNumber":19,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"toFlatObject","resolvedMethod":"utils.toFlatObject","paramTypes":["ANY","Object.create:<returnValue>","LAMBDA","LAMBDA"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":86,"columnNumber":2}]},{"targetObj":{"name":"(error, code, config, request, response, customProps)","typeFullName":"ANY","lineNumber":83,"columnNumber":18,"label":"UNKNOWN"},"definedBy":{"name":"(error, code, config, request, response, customProps)","typeFullName":"ANY","lineNumber":83,"columnNumber":18,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"config","typeFullName":"ANY","position":3,"lineNumber":83,"columnNumber":32,"label":"PARAM"},"definedBy":{"name":"config","typeFullName":"ANY","position":3,"lineNumber":83,"columnNumber":32,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"AxiosError.call","paramTypes":["Object.create:<returnValue>","ANY","__ecma.String","ANY","ANY","ANY","LAMBDA"],"returnType":"ANY","position":4,"isExternal":true,"lineNumber":92,"columnNumber":2}]},{"targetObj":{"name":"axiosError","typeFullName":"Object.create:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"Object.create","typeFullName":"Object.create","resolvedMethod":"Object.create","isExternal":null,"lineNumber":84,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"toFlatObject","resolvedMethod":"utils.toFlatObject","paramTypes":["ANY","Object.create:<returnValue>","LAMBDA","LAMBDA"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":86,"columnNumber":2},{"callName":"call","resolvedMethod":"AxiosError.call","paramTypes":["Object.create:<returnValue>","ANY","__ecma.String","ANY","ANY","ANY","LAMBDA"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":92,"columnNumber":2},{"callName":"assign","resolvedMethod":"Object.assign","paramTypes":["Object.create:<returnValue>","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":98,"columnNumber":17}]},{"targetObj":{"name":"customProps","typeFullName":"ANY","position":6,"lineNumber":83,"columnNumber":59,"label":"PARAM"},"definedBy":{"name":"customProps","typeFullName":"ANY","position":6,"lineNumber":83,"columnNumber":59,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"assign","resolvedMethod":"Object.assign","paramTypes":["Object.create:<returnValue>","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":98,"columnNumber":17}]},{"targetObj":{"name":"toFlatObject","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFlatObject","isExternal":true,"lineNumber":59,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"toFlatObject","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFlatObject","isExternal":true,"lineNumber":59,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"request","typeFullName":"ANY","position":4,"lineNumber":83,"columnNumber":40,"label":"PARAM"},"definedBy":{"name":"request","typeFullName":"ANY","position":4,"lineNumber":83,"columnNumber":40,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"AxiosError.call","paramTypes":["Object.create:<returnValue>","ANY","__ecma.String","ANY","ANY","ANY","LAMBDA"],"returnType":"ANY","position":5,"isExternal":true,"lineNumber":92,"columnNumber":2}]},{"targetObj":{"name":"create","typeFullName":"ANY","resolvedMethod":"Object.create","isExternal":true,"lineNumber":13,"columnNumber":3,"label":"CALL"},"definedBy":{"name":"create","typeFullName":"ANY","resolvedMethod":"Object.create","isExternal":true,"lineNumber":13,"columnNumber":3,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosError.js::program:anonymous1:anonymous","signature":"","fileName":"lib/core/AxiosError.js","lineNumber":88,"columnNumber":5,"usages":[{"targetObj":{"name":"prop => { return prop !== 'isAxiosError'; }","typeFullName":"ANY","lineNumber":88,"columnNumber":5,"label":"UNKNOWN"},"definedBy":{"name":"prop => { return prop !== 'isAxiosError'; }","typeFullName":"ANY","lineNumber":88,"columnNumber":5,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosError.js::program:anonymous1:filter","signature":"","fileName":"lib/core/AxiosError.js","lineNumber":86,"columnNumber":40,"usages":[{"targetObj":{"name":"function filter(obj)","typeFullName":"ANY","lineNumber":86,"columnNumber":40,"label":"UNKNOWN"},"definedBy":{"name":"function filter(obj)","typeFullName":"ANY","lineNumber":86,"columnNumber":40,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosError.js::program:toJSON","signature":"","fileName":"lib/core/AxiosError.js","lineNumber":37,"columnNumber":10,"usages":[{"targetObj":{"name":"function toJSON()","typeFullName":"ANY","lineNumber":37,"columnNumber":10,"label":"UNKNOWN"},"definedBy":{"name":"function toJSON()","typeFullName":"ANY","lineNumber":37,"columnNumber":10,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toJSONObject","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toJSONObject","isExternal":true,"lineNumber":51,"columnNumber":14,"label":"CALL"},"definedBy":{"name":"toJSONObject","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toJSONObject","isExternal":true,"lineNumber":51,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"Symbol","typeFullName":"ANY","resolvedMethod":"Symbol","isExternal":true,"lineNumber":6,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"Symbol","typeFullName":"ANY","resolvedMethod":"Symbol","isExternal":true,"lineNumber":6,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"reduceDescriptors","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:reduceDescriptors","isExternal":true,"lineNumber":290,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"reduceDescriptors","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:reduceDescriptors","isExternal":true,"lineNumber":290,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":17,"columnNumber":9},{"callName":"isFunction","resolvedMethod":"utils.isFunction","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":35,"columnNumber":6},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":43,"columnNumber":7},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":45,"columnNumber":6},{"callName":"isRegExp","resolvedMethod":"utils.isRegExp","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":49,"columnNumber":6},{"callName":"toCamelCase","resolvedMethod":"utils.toCamelCase","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":62,"columnNumber":23},{"callName":"reduceDescriptors","resolvedMethod":"utils.reduceDescriptors","paramTypes":["ANY","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":290,"columnNumber":0},{"callName":"freezeMethods","resolvedMethod":"utils.freezeMethods","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders"],"returnType":"ANY","isExternal":true,"lineNumber":300,"columnNumber":0}],"argToCalls":[]},{"targetObj":{"name":"freezeMethods","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:freezeMethods","isExternal":true,"lineNumber":300,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"freezeMethods","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:freezeMethods","isExternal":true,"lineNumber":300,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:<init>","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":75,"columnNumber":2,"usages":[{"targetObj":{"name":"constructor(headers)","typeFullName":"ANY","lineNumber":75,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"constructor(headers)","typeFullName":"ANY","lineNumber":75,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"headers","typeFullName":"ANY","position":1,"lineNumber":75,"columnNumber":14,"label":"PARAM"},"definedBy":{"name":"headers","typeFullName":"ANY","position":1,"lineNumber":75,"columnNumber":14,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"set","resolvedMethod":"this.set","paramTypes":["object"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":76,"columnNumber":15}]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:Symbol.iterator","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":240,"columnNumber":2,"usages":[{"targetObj":{"name":"[Symbol.iterator]()","typeFullName":"ANY","lineNumber":240,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"[Symbol.iterator]()","typeFullName":"ANY","lineNumber":240,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"Symbol.iterator","typeFullName":"ANY","resolvedMethod":"Object.entries:<returnValue>:Symbol.iterator","isExternal":true,"lineNumber":241,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"Symbol.iterator","typeFullName":"ANY","resolvedMethod":"Object.entries:<returnValue>:Symbol.iterator","isExternal":true,"lineNumber":241,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:Symbol.toStringTag","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":248,"columnNumber":2,"usages":[{"targetObj":{"name":"get [Symbol.toStringTag]()","typeFullName":"ANY","lineNumber":248,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"get [Symbol.toStringTag]()","typeFullName":"ANY","lineNumber":248,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:accessor","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":264,"columnNumber":2,"usages":[{"targetObj":{"name":"accessor","typeFullName":"lib/core/AxiosHeaders.js::program","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:accessor","isExternal":false,"lineNumber":287,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"accessor","typeFullName":"lib/core/AxiosHeaders.js::program","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:accessor","isExternal":false,"lineNumber":287,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"header","typeFullName":"ANY","position":1,"lineNumber":264,"columnNumber":18,"label":"PARAM"},"definedBy":{"name":"header","typeFullName":"ANY","position":1,"lineNumber":264,"columnNumber":18,"label":"PARAM"},"invokedCalls":[{"callName":"forEach","resolvedMethod":"header.forEach","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders:accessor:defineAccessor","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":281,"columnNumber":28}],"argToCalls":[{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":281,"columnNumber":4},{"callName":"defineAccessor","resolvedMethod":"defineAccessor","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":281,"columnNumber":61}]},{"targetObj":{"name":"prototype","typeFullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"this.prototype","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":270,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"buildAccessors","resolvedMethod":"buildAccessors","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":276,"columnNumber":8}]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:accessor:defineAccessor","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":272,"columnNumber":4,"usages":[{"targetObj":{"name":"defineAccessor","typeFullName":"void","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:accessor:defineAccessor","isExternal":false,"lineNumber":281,"columnNumber":61,"label":"CALL"},"definedBy":{"name":"defineAccessor","typeFullName":"void","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:accessor:defineAccessor","isExternal":false,"lineNumber":281,"columnNumber":61,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_header","typeFullName":"ANY","position":1,"lineNumber":272,"columnNumber":28,"label":"PARAM"},"definedBy":{"name":"_header","typeFullName":"ANY","position":1,"lineNumber":272,"columnNumber":28,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"normalizeHeader","resolvedMethod":"normalizeHeader","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":273,"columnNumber":22},{"callName":"buildAccessors","resolvedMethod":"buildAccessors","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","__ecma.String"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":276,"columnNumber":8}]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:clear","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":183,"columnNumber":2,"usages":[{"targetObj":{"name":"clear(matcher)","typeFullName":"ANY","lineNumber":183,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"clear(matcher)","typeFullName":"ANY","lineNumber":183,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"matcher","typeFullName":"ANY","position":1,"lineNumber":183,"columnNumber":8,"label":"PARAM"},"definedBy":{"name":"matcher","typeFullName":"ANY","position":1,"lineNumber":183,"columnNumber":8,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"matchHeaderValue","resolvedMethod":"matchHeaderValue","paramTypes":["lib/core/AxiosHeaders.js::program","ANY","__ecma.String","ANY","__ecma.Boolean"],"returnType":"ANY","position":4,"isExternal":false,"lineNumber":190,"columnNumber":21}]},{"targetObj":{"name":"key","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"keys[i]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":189,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"matchHeaderValue","resolvedMethod":"matchHeaderValue","paramTypes":["lib/core/AxiosHeaders.js::program","ANY","__ecma.String","ANY","__ecma.Boolean"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":190,"columnNumber":21}]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:concat","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":226,"columnNumber":2,"usages":[{"targetObj":{"name":"concat","typeFullName":"(...targets: Array<any>) => ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:concat","isExternal":false,"lineNumber":121,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"concat","typeFullName":"(...targets: Array<any>) => ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:concat","isExternal":false,"lineNumber":121,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"concat","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:<member>(constructor):concat","isExternal":true,"lineNumber":227,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"concat","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:<member>(constructor):concat","isExternal":true,"lineNumber":227,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:concat1","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":256,"columnNumber":2,"usages":[{"targetObj":{"name":"static concat(first, ...targets)","typeFullName":"ANY","lineNumber":256,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"static concat(first, ...targets)","typeFullName":"ANY","lineNumber":256,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"computed","typeFullName":"lib/core/AxiosHeaders.js::program","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new this","typeFullName":"this","resolvedMethod":"this","isExternal":null,"lineNumber":257,"columnNumber":21,"label":"CALL"},"invokedCalls":[{"callName":"set","resolvedMethod":"computed.set","paramTypes":["ANY"],"returnType":"ANY","isExternal":false,"lineNumber":259,"columnNumber":32}],"argToCalls":[{"callName":"this","resolvedMethod":"this","paramTypes":["ANY"],"returnType":"this","position":1,"isExternal":true,"lineNumber":257,"columnNumber":10}]},{"targetObj":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"Array<any>:forEach","isExternal":true,"lineNumber":589,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"Array<any>:forEach","isExternal":true,"lineNumber":589,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:concat1:anonymous","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":259,"columnNumber":20,"usages":[{"targetObj":{"name":"(target)","typeFullName":"ANY","lineNumber":259,"columnNumber":20,"label":"UNKNOWN"},"definedBy":{"name":"(target)","typeFullName":"ANY","lineNumber":259,"columnNumber":20,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"target","typeFullName":"ANY","position":1,"lineNumber":259,"columnNumber":21,"label":"PARAM"},"definedBy":{"name":"target","typeFullName":"ANY","position":1,"lineNumber":259,"columnNumber":21,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"set","resolvedMethod":"computed.set","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":259,"columnNumber":32}]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:delete","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":156,"columnNumber":2,"usages":[{"targetObj":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"__ecma.String:trim:<returnValue>:forEach","isExternal":true,"lineNumber":281,"columnNumber":28,"label":"CALL"},"definedBy":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"__ecma.String:trim:<returnValue>:forEach","isExternal":true,"lineNumber":281,"columnNumber":28,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"__ecma.String:<operator>.logicalAnd:<returnValue>:forEach","isExternal":true,"lineNumber":281,"columnNumber":28,"label":"CALL"},"definedBy":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"__ecma.String:<operator>.logicalAnd:<returnValue>:forEach","isExternal":true,"lineNumber":281,"columnNumber":28,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"header","typeFullName":"ANY","position":1,"lineNumber":156,"columnNumber":9,"label":"PARAM"},"definedBy":{"name":"header","typeFullName":"ANY","position":1,"lineNumber":156,"columnNumber":9,"label":"PARAM"},"invokedCalls":[{"callName":"forEach","resolvedMethod":"header.forEach","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders:delete:deleteHeader","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":175,"columnNumber":6}],"argToCalls":[{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":174,"columnNumber":8},{"callName":"deleteHeader","resolvedMethod":"deleteHeader","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":177,"columnNumber":6}]},{"targetObj":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"__ecma.String:forEach","isExternal":true,"lineNumber":281,"columnNumber":28,"label":"CALL"},"definedBy":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"__ecma.String:forEach","isExternal":true,"lineNumber":281,"columnNumber":28,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"__ecma.String:trim:<returnValue>:<operator>.logicalAnd:<returnValue>:forEach","isExternal":true,"lineNumber":281,"columnNumber":28,"label":"CALL"},"definedBy":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"__ecma.String:trim:<returnValue>:<operator>.logicalAnd:<returnValue>:forEach","isExternal":true,"lineNumber":281,"columnNumber":28,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"delete","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:delete","isExternal":false,"lineNumber":389,"columnNumber":12,"label":"CALL"},"definedBy":{"name":"delete","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:delete","isExternal":false,"lineNumber":389,"columnNumber":12,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"matcher","typeFullName":"ANY","position":2,"lineNumber":156,"columnNumber":17,"label":"PARAM"},"definedBy":{"name":"matcher","typeFullName":"ANY","position":2,"lineNumber":156,"columnNumber":17,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"matchHeaderValue","resolvedMethod":"matchHeaderValue","paramTypes":["lib/core/AxiosHeaders.js::program","ANY","__ecma.String","ANY"],"returnType":"ANY","position":4,"isExternal":false,"lineNumber":166,"columnNumber":32}]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:delete:deleteHeader","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":160,"columnNumber":4,"usages":[{"targetObj":{"name":"deleteHeader","typeFullName":"void","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:delete:deleteHeader","isExternal":false,"lineNumber":177,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"deleteHeader","typeFullName":"void","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:delete:deleteHeader","isExternal":false,"lineNumber":177,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_header","typeFullName":"ANY","position":1,"lineNumber":160,"columnNumber":26,"label":"PARAM"},"definedBy":{"name":"_header","typeFullName":"ANY","position":1,"lineNumber":160,"columnNumber":26,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"normalizeHeader","resolvedMethod":"normalizeHeader","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":161,"columnNumber":16},{"callName":"findKey","resolvedMethod":"utils.findKey","paramTypes":["lib/core/AxiosHeaders.js::program","__ecma.String"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":164,"columnNumber":20}]},{"targetObj":{"name":"key","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"utils.findKey","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:findKey","isExternal":null,"lineNumber":164,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"matchHeaderValue","resolvedMethod":"matchHeaderValue","paramTypes":["lib/core/AxiosHeaders.js::program","ANY","__ecma.String","ANY"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":166,"columnNumber":32}]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:from","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":252,"columnNumber":2,"usages":[{"targetObj":{"name":"from","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:from","isExternal":false,"lineNumber":18,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"from","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:from","isExternal":false,"lineNumber":18,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:get","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":114,"columnNumber":2,"usages":[{"targetObj":{"name":"parser","typeFullName":"ANY","position":2,"lineNumber":114,"columnNumber":14,"label":"PARAM"},"definedBy":{"name":"parser","typeFullName":"ANY","position":2,"lineNumber":114,"columnNumber":14,"label":"PARAM"},"invokedCalls":[{"callName":"call","resolvedMethod":"parser.call","paramTypes":["lib/core/AxiosHeaders.js::program","__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":132,"columnNumber":17},{"callName":"exec","resolvedMethod":"parser.exec","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":136,"columnNumber":17}],"argToCalls":[{"callName":"isFunction","resolvedMethod":"utils.isFunction","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":131,"columnNumber":12},{"callName":"isRegExp","resolvedMethod":"utils.isRegExp","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":135,"columnNumber":12}]},{"targetObj":{"name":"value","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"this[key]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":121,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"parseTokens","resolvedMethod":"parseTokens","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":128,"columnNumber":17},{"callName":"call","resolvedMethod":"parser.call","paramTypes":["lib/core/AxiosHeaders.js::program","__ecma.String","__ecma.String"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":132,"columnNumber":17},{"callName":"exec","resolvedMethod":"parser.exec","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":136,"columnNumber":17}]},{"targetObj":{"name":"header","typeFullName":"ANY","position":1,"lineNumber":114,"columnNumber":6,"label":"PARAM"},"definedBy":{"name":"header","typeFullName":"ANY","position":1,"lineNumber":114,"columnNumber":6,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"normalizeHeader","resolvedMethod":"normalizeHeader","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":115,"columnNumber":13},{"callName":"findKey","resolvedMethod":"utils.findKey","paramTypes":["lib/core/AxiosHeaders.js::program","__ecma.String"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":118,"columnNumber":18}]},{"targetObj":{"name":"get(header, parser)","typeFullName":"ANY","lineNumber":114,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"get(header, parser)","typeFullName":"ANY","lineNumber":114,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"call","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:call","isExternal":true,"lineNumber":132,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"call","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:call","isExternal":true,"lineNumber":132,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"key","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"utils.findKey","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:findKey","isExternal":null,"lineNumber":118,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"parser.call","paramTypes":["lib/core/AxiosHeaders.js::program","__ecma.String","__ecma.String"],"returnType":"ANY","position":3,"isExternal":true,"lineNumber":132,"columnNumber":17}]},{"targetObj":{"name":"exec","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:exec","isExternal":true,"lineNumber":136,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"exec","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:exec","isExternal":true,"lineNumber":136,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:has","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":144,"columnNumber":2,"usages":[{"targetObj":{"name":"has(header, matcher)","typeFullName":"ANY","lineNumber":144,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"has(header, matcher)","typeFullName":"ANY","lineNumber":144,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"header","typeFullName":"ANY","position":1,"lineNumber":144,"columnNumber":6,"label":"PARAM"},"definedBy":{"name":"header","typeFullName":"ANY","position":1,"lineNumber":144,"columnNumber":6,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"normalizeHeader","resolvedMethod":"normalizeHeader","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":145,"columnNumber":13},{"callName":"findKey","resolvedMethod":"utils.findKey","paramTypes":["lib/core/AxiosHeaders.js::program","__ecma.String"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":148,"columnNumber":18}]},{"targetObj":{"name":"matcher","typeFullName":"ANY","position":2,"lineNumber":144,"columnNumber":14,"label":"PARAM"},"definedBy":{"name":"matcher","typeFullName":"ANY","position":2,"lineNumber":144,"columnNumber":14,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"matchHeaderValue","resolvedMethod":"matchHeaderValue","paramTypes":["lib/core/AxiosHeaders.js::program","ANY","__ecma.String","ANY"],"returnType":"ANY","position":4,"isExternal":false,"lineNumber":150,"columnNumber":63}]},{"targetObj":{"name":"key","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"utils.findKey","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:findKey","isExternal":null,"lineNumber":148,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"matchHeaderValue","resolvedMethod":"matchHeaderValue","paramTypes":["lib/core/AxiosHeaders.js::program","ANY","__ecma.String","ANY"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":150,"columnNumber":63}]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:normalize","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":199,"columnNumber":2,"usages":[{"targetObj":{"name":"normalize","typeFullName":"lib/core/AxiosHeaders.js::program","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:normalize","isExternal":false,"lineNumber":25,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"normalize","typeFullName":"lib/core/AxiosHeaders.js::program","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:normalize","isExternal":false,"lineNumber":25,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:normalize:anonymous","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":203,"columnNumber":24,"usages":[{"targetObj":{"name":"(value, header)","typeFullName":"ANY","lineNumber":203,"columnNumber":24,"label":"UNKNOWN"},"definedBy":{"name":"(value, header)","typeFullName":"ANY","lineNumber":203,"columnNumber":24,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":203,"columnNumber":25,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":203,"columnNumber":25,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"normalizeValue","resolvedMethod":"normalizeValue","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":207,"columnNumber":20},{"callName":"normalizeValue","resolvedMethod":"normalizeValue","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":218,"columnNumber":25}]},{"targetObj":{"name":"header","typeFullName":"ANY","position":2,"lineNumber":203,"columnNumber":32,"label":"PARAM"},"definedBy":{"name":"header","typeFullName":"ANY","position":2,"lineNumber":203,"columnNumber":32,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"findKey","resolvedMethod":"utils.findKey","paramTypes":["object","__ecma.String"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":204,"columnNumber":18},{"callName":"formatHeader","resolvedMethod":"formatHeader","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":212,"columnNumber":34},{"callName":"String","resolvedMethod":"String","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":212,"columnNumber":57}]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:set","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":79,"columnNumber":2,"usages":[{"targetObj":{"name":"isPlainObject","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isPlainObject","isExternal":true,"lineNumber":16,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"isPlainObject","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isPlainObject","isExternal":true,"lineNumber":16,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"parseHeaders","typeFullName":"ANY","resolvedMethod":"../helpers/parseHeaders.js:parseHeaders","isExternal":true,"lineNumber":102,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"parseHeaders","typeFullName":"ANY","resolvedMethod":"../helpers/parseHeaders.js:parseHeaders","isExternal":true,"lineNumber":102,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isHeaders","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isHeaders","isExternal":true,"lineNumber":103,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"isHeaders","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isHeaders","isExternal":true,"lineNumber":103,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"entries","typeFullName":"ANY","resolvedMethod":"__ecma.String:entries","isExternal":true,"lineNumber":104,"columnNumber":33,"label":"CALL"},"definedBy":{"name":"entries","typeFullName":"ANY","resolvedMethod":"__ecma.String:entries","isExternal":true,"lineNumber":104,"columnNumber":33,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"entries","typeFullName":"ANY","resolvedMethod":"__ecma.String:trim:<returnValue>:entries","isExternal":true,"lineNumber":104,"columnNumber":33,"label":"CALL"},"definedBy":{"name":"entries","typeFullName":"ANY","resolvedMethod":"__ecma.String:trim:<returnValue>:entries","isExternal":true,"lineNumber":104,"columnNumber":33,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"valueOrRewrite","typeFullName":"ANY","position":2,"lineNumber":79,"columnNumber":14,"label":"PARAM"},"definedBy":{"name":"valueOrRewrite","typeFullName":"ANY","position":2,"lineNumber":79,"columnNumber":14,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"setHeaders","resolvedMethod":"setHeaders","paramTypes":["__ecma.String","ANY"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":100,"columnNumber":6},{"callName":"setHeaders","resolvedMethod":"setHeaders","paramTypes":["ANY","ANY"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":102,"columnNumber":6},{"callName":"setHeader","resolvedMethod":"setHeader","paramTypes":["ANY","__ecma.String","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":108,"columnNumber":24}]},{"targetObj":{"name":"entries","typeFullName":"ANY","resolvedMethod":"__ecma.String:<operator>.logicalAnd:<returnValue>:entries","isExternal":true,"lineNumber":104,"columnNumber":33,"label":"CALL"},"definedBy":{"name":"entries","typeFullName":"ANY","resolvedMethod":"__ecma.String:<operator>.logicalAnd:<returnValue>:entries","isExternal":true,"lineNumber":104,"columnNumber":33,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"header","typeFullName":"ANY","position":1,"lineNumber":79,"columnNumber":6,"label":"PARAM"},"definedBy":{"name":"header","typeFullName":"ANY","position":1,"lineNumber":79,"columnNumber":6,"label":"PARAM"},"invokedCalls":[{"callName":"trim","resolvedMethod":"header.trim","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":101,"columnNumber":50},{"callName":"entries","resolvedMethod":"header.entries","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":104,"columnNumber":33}],"argToCalls":[{"callName":"isPlainObject","resolvedMethod":"utils.isPlainObject","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":99,"columnNumber":8},{"callName":"setHeaders","resolvedMethod":"setHeaders","paramTypes":["__ecma.String","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":100,"columnNumber":6},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":101,"columnNumber":14},{"callName":"isValidHeaderName","resolvedMethod":"isValidHeaderName","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":101,"columnNumber":69},{"callName":"parseHeaders","resolvedMethod":"parseHeaders","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":102,"columnNumber":17},{"callName":"isHeaders","resolvedMethod":"utils.isHeaders","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":103,"columnNumber":15},{"callName":"setHeader","resolvedMethod":"setHeader","paramTypes":["ANY","__ecma.String","ANY"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":108,"columnNumber":24}]},{"targetObj":{"name":"set","typeFullName":"lib/core/AxiosHeaders.js::program","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:set","isExternal":false,"lineNumber":259,"columnNumber":32,"label":"CALL"},"definedBy":{"name":"set","typeFullName":"lib/core/AxiosHeaders.js::program","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:set","isExternal":false,"lineNumber":259,"columnNumber":32,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"entries","typeFullName":"ANY","resolvedMethod":"__ecma.String:trim:<returnValue>:<operator>.logicalAnd:<returnValue>:entries","isExternal":true,"lineNumber":104,"columnNumber":33,"label":"CALL"},"definedBy":{"name":"entries","typeFullName":"ANY","resolvedMethod":"__ecma.String:trim:<returnValue>:<operator>.logicalAnd:<returnValue>:entries","isExternal":true,"lineNumber":104,"columnNumber":33,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"rewrite","typeFullName":"ANY","position":3,"lineNumber":79,"columnNumber":30,"label":"PARAM"},"definedBy":{"name":"rewrite","typeFullName":"ANY","position":3,"lineNumber":79,"columnNumber":30,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"setHeader","resolvedMethod":"setHeader","paramTypes":["__ecma.String","__ecma.String","ANY"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":105,"columnNumber":8},{"callName":"setHeader","resolvedMethod":"setHeader","paramTypes":["ANY","__ecma.String","ANY"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":108,"columnNumber":24}]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:set:anonymous:anonymous","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":97,"columnNumber":29,"usages":[{"targetObj":{"name":"(_value, _header)","typeFullName":"ANY","lineNumber":97,"columnNumber":29,"label":"UNKNOWN"},"definedBy":{"name":"(_value, _header)","typeFullName":"ANY","lineNumber":97,"columnNumber":29,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_value","typeFullName":"ANY","position":1,"lineNumber":97,"columnNumber":30,"label":"PARAM"},"definedBy":{"name":"_value","typeFullName":"ANY","position":1,"lineNumber":97,"columnNumber":30,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"setHeader","resolvedMethod":"setHeader","paramTypes":["ANY","__ecma.String","__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":97,"columnNumber":50}]},{"targetObj":{"name":"_header","typeFullName":"ANY","position":2,"lineNumber":97,"columnNumber":38,"label":"PARAM"},"definedBy":{"name":"_header","typeFullName":"ANY","position":2,"lineNumber":97,"columnNumber":38,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"setHeader","resolvedMethod":"setHeader","paramTypes":["ANY","__ecma.String","__ecma.Boolean"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":97,"columnNumber":50}]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:set:setHeader","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":82,"columnNumber":4,"usages":[{"targetObj":{"name":"setHeader","typeFullName":"void","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:set:setHeader","isExternal":false,"lineNumber":108,"columnNumber":24,"label":"CALL"},"definedBy":{"name":"setHeader","typeFullName":"void","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:set:setHeader","isExternal":false,"lineNumber":108,"columnNumber":24,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_value","typeFullName":"ANY","position":1,"lineNumber":82,"columnNumber":23,"label":"PARAM"},"definedBy":{"name":"_value","typeFullName":"ANY","position":1,"lineNumber":82,"columnNumber":23,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"normalizeValue","resolvedMethod":"normalizeValue","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":92,"columnNumber":31}]},{"targetObj":{"name":"_header","typeFullName":"ANY","position":2,"lineNumber":82,"columnNumber":31,"label":"PARAM"},"definedBy":{"name":"_header","typeFullName":"ANY","position":2,"lineNumber":82,"columnNumber":31,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"normalizeHeader","resolvedMethod":"normalizeHeader","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":83,"columnNumber":22}]},{"targetObj":{"name":"lHeader","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"normalizeHeader","typeFullName":"__ecma.String","resolvedMethod":"lib/core/AxiosHeaders.js::program:normalizeHeader","isExternal":null,"lineNumber":83,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"findKey","resolvedMethod":"utils.findKey","paramTypes":["lib/core/AxiosHeaders.js::program","__ecma.String"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":89,"columnNumber":18}]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:set:setHeaders","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":96,"columnNumber":23,"usages":[{"targetObj":{"name":"setHeaders","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:forEach:<returnValue>","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:set:setHeaders","isExternal":false,"lineNumber":102,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"setHeaders","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:forEach:<returnValue>","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:set:setHeaders","isExternal":false,"lineNumber":102,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"headers","typeFullName":"ANY","position":1,"lineNumber":96,"columnNumber":24,"label":"PARAM"},"definedBy":{"name":"headers","typeFullName":"ANY","position":1,"lineNumber":96,"columnNumber":24,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"forEach","resolvedMethod":"utils.forEach","paramTypes":["object","LAMBDA"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":97,"columnNumber":6}]},{"targetObj":{"name":"_rewrite","typeFullName":"ANY","position":2,"lineNumber":96,"columnNumber":33,"label":"PARAM"},"definedBy":{"name":"_rewrite","typeFullName":"ANY","position":2,"lineNumber":96,"columnNumber":33,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"setHeader","resolvedMethod":"setHeader","paramTypes":["ANY","__ecma.String","__ecma.Boolean"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":97,"columnNumber":50}]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:toJSON","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":230,"columnNumber":2,"usages":[{"targetObj":{"name":"toJSON","typeFullName":"(asStrings: ANY) => ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:toJSON","isExternal":false,"lineNumber":245,"columnNumber":26,"label":"CALL"},"definedBy":{"name":"toJSON","typeFullName":"(asStrings: ANY) => ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:toJSON","isExternal":false,"lineNumber":245,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:toJSON:anonymous","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":233,"columnNumber":24,"usages":[{"targetObj":{"name":"join","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:<indexAccess>:join","isExternal":true,"lineNumber":234,"columnNumber":93,"label":"CALL"},"definedBy":{"name":"join","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:<indexAccess>:join","isExternal":true,"lineNumber":234,"columnNumber":93,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"join","typeFullName":"ANY","resolvedMethod":"__ecma.String:join","isExternal":true,"lineNumber":234,"columnNumber":93,"label":"CALL"},"definedBy":{"name":"join","typeFullName":"ANY","resolvedMethod":"__ecma.String:join","isExternal":true,"lineNumber":234,"columnNumber":93,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"join","typeFullName":"ANY","resolvedMethod":"Array<any>:join","isExternal":true,"lineNumber":234,"columnNumber":93,"label":"CALL"},"definedBy":{"name":"join","typeFullName":"ANY","resolvedMethod":"Array<any>:join","isExternal":true,"lineNumber":234,"columnNumber":93,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"(value, header)","typeFullName":"ANY","lineNumber":233,"columnNumber":24,"label":"UNKNOWN"},"definedBy":{"name":"(value, header)","typeFullName":"ANY","lineNumber":233,"columnNumber":24,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":233,"columnNumber":25,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":233,"columnNumber":25,"label":"PARAM"},"invokedCalls":[{"callName":"join","resolvedMethod":"value.join","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":234,"columnNumber":93}],"argToCalls":[{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":234,"columnNumber":70}]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:toString","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":244,"columnNumber":2,"usages":[{"targetObj":{"name":"toString()","typeFullName":"ANY","lineNumber":244,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"toString()","typeFullName":"ANY","lineNumber":244,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:toString:anonymous","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":245,"columnNumber":45,"usages":[{"targetObj":{"name":"([header, value])","typeFullName":"ANY","lineNumber":245,"columnNumber":45,"label":"UNKNOWN"},"definedBy":{"name":"([header, value])","typeFullName":"ANY","lineNumber":245,"columnNumber":45,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:anonymous1","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":290,"columnNumber":48,"usages":[{"targetObj":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"Object.keys:<returnValue>:<indexAccess>:<indexAccess>:toUpperCase","isExternal":true,"lineNumber":291,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"Object.keys:<returnValue>:<indexAccess>:<indexAccess>:toUpperCase","isExternal":true,"lineNumber":291,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:findKey:<returnValue>:<indexAccess>:toUpperCase","isExternal":true,"lineNumber":291,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:findKey:<returnValue>:<indexAccess>:toUpperCase","isExternal":true,"lineNumber":291,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"__ecma.String:<indexAccess>:toUpperCase","isExternal":true,"lineNumber":291,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"__ecma.String:<indexAccess>:toUpperCase","isExternal":true,"lineNumber":291,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"({value}, key)","typeFullName":"ANY","lineNumber":290,"columnNumber":48,"label":"UNKNOWN"},"definedBy":{"name":"({value}, key)","typeFullName":"ANY","lineNumber":290,"columnNumber":48,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"slice","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:findKey:<returnValue>:slice","isExternal":true,"lineNumber":291,"columnNumber":38,"label":"CALL"},"definedBy":{"name":"slice","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:findKey:<returnValue>:slice","isExternal":true,"lineNumber":291,"columnNumber":38,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"Array<string>:<indexAccess>:<indexAccess>:toUpperCase","isExternal":true,"lineNumber":291,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"Array<string>:<indexAccess>:<indexAccess>:toUpperCase","isExternal":true,"lineNumber":291,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"slice","typeFullName":"ANY","resolvedMethod":"Array<string>:<indexAccess>:slice","isExternal":true,"lineNumber":291,"columnNumber":38,"label":"CALL"},"definedBy":{"name":"slice","typeFullName":"ANY","resolvedMethod":"Array<string>:<indexAccess>:slice","isExternal":true,"lineNumber":291,"columnNumber":38,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"key","typeFullName":"ANY","position":2,"lineNumber":290,"columnNumber":58,"label":"PARAM"},"definedBy":{"name":"key","typeFullName":"ANY","position":2,"lineNumber":290,"columnNumber":58,"label":"PARAM"},"invokedCalls":[{"callName":"slice","resolvedMethod":"key.slice","paramTypes":["__ecma.Number"],"returnType":"ANY","isExternal":true,"lineNumber":291,"columnNumber":38}],"argToCalls":[]},{"targetObj":{"name":"slice","typeFullName":"ANY","resolvedMethod":"Object.keys:<returnValue>:<indexAccess>:slice","isExternal":true,"lineNumber":291,"columnNumber":38,"label":"CALL"},"definedBy":{"name":"slice","typeFullName":"ANY","resolvedMethod":"Object.keys:<returnValue>:<indexAccess>:slice","isExternal":true,"lineNumber":291,"columnNumber":38,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:anonymous1:anonymous","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":293,"columnNumber":9,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":293,"columnNumber":9,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":293,"columnNumber":9,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:anonymous1:set","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":294,"columnNumber":4,"usages":[{"targetObj":{"name":"set","typeFullName":"(headerValue: ANY) => void","resolvedMethod":"lib/core/AxiosHeaders.js::program:anonymous1:set","isExternal":false,"lineNumber":76,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"set","typeFullName":"(headerValue: ANY) => void","resolvedMethod":"lib/core/AxiosHeaders.js::program:anonymous1:set","isExternal":false,"lineNumber":76,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:buildAccessors","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":61,"columnNumber":0,"usages":[{"targetObj":{"name":"buildAccessors","typeFullName":"void","resolvedMethod":"lib/core/AxiosHeaders.js::program:buildAccessors","isExternal":false,"lineNumber":276,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"buildAccessors","typeFullName":"void","resolvedMethod":"lib/core/AxiosHeaders.js::program:buildAccessors","isExternal":false,"lineNumber":276,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":61,"columnNumber":24,"label":"PARAM"},"definedBy":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":61,"columnNumber":24,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"defineProperty","resolvedMethod":"Object.defineProperty","paramTypes":["Object.create:<returnValue>","ANY","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":65,"columnNumber":4}]},{"targetObj":{"name":"header","typeFullName":"ANY","position":2,"lineNumber":61,"columnNumber":29,"label":"PARAM"},"definedBy":{"name":"header","typeFullName":"ANY","position":2,"lineNumber":61,"columnNumber":29,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"this[methodName].call","paramTypes":["lib/core/AxiosHeaders.js::program","__ecma.String","ANY","ANY","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":67,"columnNumber":15}]},{"targetObj":{"name":"toCamelCase","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toCamelCase","isExternal":true,"lineNumber":62,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"toCamelCase","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toCamelCase","isExternal":true,"lineNumber":62,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:buildAccessors:anonymous","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":64,"columnNumber":32,"usages":[{"targetObj":{"name":"methodName => { Object.defineProperty","typeFullName":"ANY","lineNumber":64,"columnNumber":32,"label":"UNKNOWN"},"definedBy":{"name":"methodName => { Object.defineProperty","typeFullName":"ANY","lineNumber":64,"columnNumber":32,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:buildAccessors:anonymous:anonymous","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":66,"columnNumber":13,"usages":[{"targetObj":{"name":"arg1","typeFullName":"ANY","position":1,"lineNumber":66,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"arg1","typeFullName":"ANY","position":1,"lineNumber":66,"columnNumber":22,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"this[methodName].call","paramTypes":["lib/core/AxiosHeaders.js::program","__ecma.String","ANY","ANY","ANY"],"returnType":"ANY","position":3,"isExternal":true,"lineNumber":67,"columnNumber":15}]},{"targetObj":{"name":"call","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:<indexAccess>:call","isExternal":true,"lineNumber":67,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"call","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:<indexAccess>:call","isExternal":true,"lineNumber":67,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"arg2","typeFullName":"ANY","position":2,"lineNumber":66,"columnNumber":28,"label":"PARAM"},"definedBy":{"name":"arg2","typeFullName":"ANY","position":2,"lineNumber":66,"columnNumber":28,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"this[methodName].call","paramTypes":["lib/core/AxiosHeaders.js::program","__ecma.String","ANY","ANY","ANY"],"returnType":"ANY","position":4,"isExternal":true,"lineNumber":67,"columnNumber":15}]},{"targetObj":{"name":"arg3","typeFullName":"ANY","position":3,"lineNumber":66,"columnNumber":34,"label":"PARAM"},"definedBy":{"name":"arg3","typeFullName":"ANY","position":3,"lineNumber":66,"columnNumber":34,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"this[methodName].call","paramTypes":["lib/core/AxiosHeaders.js::program","__ecma.String","ANY","ANY","ANY"],"returnType":"ANY","position":5,"isExternal":true,"lineNumber":67,"columnNumber":15}]},{"targetObj":{"name":"function(arg1, arg2, arg3)","typeFullName":"ANY","lineNumber":66,"columnNumber":13,"label":"UNKNOWN"},"definedBy":{"name":"function(arg1, arg2, arg3)","typeFullName":"ANY","lineNumber":66,"columnNumber":13,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:formatHeader","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":54,"columnNumber":0,"usages":[{"targetObj":{"name":"formatHeader","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:formatHeader","isExternal":false,"lineNumber":212,"columnNumber":34,"label":"CALL"},"definedBy":{"name":"formatHeader","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:formatHeader","isExternal":false,"lineNumber":212,"columnNumber":34,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"header.trim","isExternal":true,"lineNumber":55,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"header.trim","isExternal":true,"lineNumber":55,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"__ecma.String:trim:<returnValue>:toLowerCase","isExternal":true,"lineNumber":55,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"__ecma.String:trim:<returnValue>:toLowerCase","isExternal":true,"lineNumber":55,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"trim","typeFullName":"ANY","resolvedMethod":"__ecma.String:trim","isExternal":true,"lineNumber":222,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"trim","typeFullName":"ANY","resolvedMethod":"__ecma.String:trim","isExternal":true,"lineNumber":222,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"header","typeFullName":"ANY","position":1,"lineNumber":54,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"header","typeFullName":"ANY","position":1,"lineNumber":54,"columnNumber":22,"label":"PARAM"},"invokedCalls":[{"callName":"trim","resolvedMethod":"header.trim","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":55,"columnNumber":9}],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:formatHeader:anonymous","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":56,"columnNumber":46,"usages":[{"targetObj":{"name":"(w, char, str)","typeFullName":"ANY","lineNumber":56,"columnNumber":46,"label":"UNKNOWN"},"definedBy":{"name":"(w, char, str)","typeFullName":"ANY","lineNumber":56,"columnNumber":46,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"char","typeFullName":"ANY","position":2,"lineNumber":56,"columnNumber":50,"label":"PARAM"},"definedBy":{"name":"char","typeFullName":"ANY","position":2,"lineNumber":56,"columnNumber":50,"label":"PARAM"},"invokedCalls":[{"callName":"toUpperCase","resolvedMethod":"char.toUpperCase","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":57,"columnNumber":13}],"argToCalls":[]},{"targetObj":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"char.toUpperCase","isExternal":true,"lineNumber":57,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"char.toUpperCase","isExternal":true,"lineNumber":57,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:isValidHeaderName","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":32,"columnNumber":26,"usages":[{"targetObj":{"name":"isValidHeaderName","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/core/AxiosHeaders.js::program:isValidHeaderName","isExternal":false,"lineNumber":101,"columnNumber":69,"label":"CALL"},"definedBy":{"name":"isValidHeaderName","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/core/AxiosHeaders.js::program:isValidHeaderName","isExternal":false,"lineNumber":101,"columnNumber":69,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"str","typeFullName":"ANY","position":1,"lineNumber":32,"columnNumber":27,"label":"PARAM"},"definedBy":{"name":"str","typeFullName":"ANY","position":1,"lineNumber":32,"columnNumber":27,"label":"PARAM"},"invokedCalls":[{"callName":"trim","resolvedMethod":"str.trim","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":32,"columnNumber":73}],"argToCalls":[]},{"targetObj":{"name":"trim","typeFullName":"ANY","resolvedMethod":"str.trim","isExternal":true,"lineNumber":32,"columnNumber":73,"label":"CALL"},"definedBy":{"name":"trim","typeFullName":"ANY","resolvedMethod":"str.trim","isExternal":true,"lineNumber":32,"columnNumber":73,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:matchHeaderValue","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":34,"columnNumber":0,"usages":[{"targetObj":{"name":"matchHeaderValue","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:matchHeaderValue","isExternal":false,"lineNumber":190,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"matchHeaderValue","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:matchHeaderValue","isExternal":false,"lineNumber":190,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:<indexAccess>:indexOf","isExternal":true,"lineNumber":46,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:<indexAccess>:indexOf","isExternal":true,"lineNumber":46,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"header","typeFullName":"ANY","position":3,"lineNumber":34,"columnNumber":42,"label":"PARAM"},"definedBy":{"name":"header","typeFullName":"ANY","position":3,"lineNumber":34,"columnNumber":42,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"filter.call","paramTypes":["lib/core/AxiosHeaders.js::program","__ecma.String","__ecma.String"],"returnType":"ANY","position":3,"isExternal":null,"lineNumber":36,"columnNumber":11}]},{"targetObj":{"name":"isRegExp","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isRegExp","isExternal":true,"lineNumber":135,"columnNumber":12,"label":"CALL"},"definedBy":{"name":"isRegExp","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isRegExp","isExternal":true,"lineNumber":135,"columnNumber":12,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"filter","typeFullName":"ANY","position":4,"lineNumber":34,"columnNumber":50,"label":"PARAM"},"definedBy":{"name":"filter","typeFullName":"ANY","position":4,"lineNumber":34,"columnNumber":50,"label":"PARAM"},"invokedCalls":[{"callName":"call","resolvedMethod":"filter.call","paramTypes":["lib/core/AxiosHeaders.js::program","__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":null,"lineNumber":36,"columnNumber":11},{"callName":"test","resolvedMethod":"filter.test","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":50,"columnNumber":11}],"argToCalls":[{"callName":"isFunction","resolvedMethod":"utils.isFunction","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":35,"columnNumber":6},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":45,"columnNumber":6},{"callName":"indexOf","resolvedMethod":"value.indexOf","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":46,"columnNumber":11},{"callName":"isRegExp","resolvedMethod":"utils.isRegExp","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":49,"columnNumber":6}]},{"targetObj":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"__ecma.String:indexOf","isExternal":true,"lineNumber":437,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"__ecma.String:indexOf","isExternal":true,"lineNumber":437,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"Array<any>:indexOf","isExternal":true,"lineNumber":642,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"Array<any>:indexOf","isExternal":true,"lineNumber":642,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":2,"lineNumber":34,"columnNumber":35,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":2,"lineNumber":34,"columnNumber":35,"label":"PARAM"},"invokedCalls":[{"callName":"indexOf","resolvedMethod":"value.indexOf","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":46,"columnNumber":11}],"argToCalls":[{"callName":"call","resolvedMethod":"filter.call","paramTypes":["lib/core/AxiosHeaders.js::program","__ecma.String","__ecma.String"],"returnType":"ANY","position":2,"isExternal":null,"lineNumber":36,"columnNumber":11},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":43,"columnNumber":7},{"callName":"test","resolvedMethod":"filter.test","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":50,"columnNumber":11}]},{"targetObj":{"name":"test","typeFullName":"ANY","resolvedMethod":"filter.test","isExternal":true,"lineNumber":50,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"test","typeFullName":"ANY","resolvedMethod":"filter.test","isExternal":true,"lineNumber":50,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:normalizeHeader","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":8,"columnNumber":0,"usages":[{"targetObj":{"name":"normalizeHeader","typeFullName":"__ecma.String","resolvedMethod":"lib/core/AxiosHeaders.js::program:normalizeHeader","isExternal":false,"lineNumber":273,"columnNumber":22,"label":"CALL"},"definedBy":{"name":"normalizeHeader","typeFullName":"__ecma.String","resolvedMethod":"lib/core/AxiosHeaders.js::program:normalizeHeader","isExternal":false,"lineNumber":273,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"header","typeFullName":"ANY","position":1,"lineNumber":8,"columnNumber":25,"label":"PARAM"},"definedBy":{"name":"header","typeFullName":"ANY","position":1,"lineNumber":8,"columnNumber":25,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"String","resolvedMethod":"String","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":9,"columnNumber":19}]},{"targetObj":{"name":"trim","typeFullName":"ANY","resolvedMethod":"String:<returnValue>:trim","isExternal":true,"lineNumber":222,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"trim","typeFullName":"ANY","resolvedMethod":"String:<returnValue>:trim","isExternal":true,"lineNumber":222,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:normalizeValue","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":12,"columnNumber":0,"usages":[{"targetObj":{"name":"normalizeValue","typeFullName":"__ecma.String","resolvedMethod":"lib/core/AxiosHeaders.js::program:normalizeValue","isExternal":false,"lineNumber":218,"columnNumber":25,"label":"CALL"},"definedBy":{"name":"normalizeValue","typeFullName":"__ecma.String","resolvedMethod":"lib/core/AxiosHeaders.js::program:normalizeValue","isExternal":false,"lineNumber":218,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":12,"columnNumber":24,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":12,"columnNumber":24,"label":"PARAM"},"invokedCalls":[{"callName":"map","resolvedMethod":"value.map","paramTypes":["lib/core/AxiosHeaders.js::program:normalizeValue","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":17,"columnNumber":32}],"argToCalls":[{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":17,"columnNumber":9},{"callName":"String","resolvedMethod":"String","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":17,"columnNumber":60}]},{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"__ecma.String:map","isExternal":true,"lineNumber":17,"columnNumber":32,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"__ecma.String:map","isExternal":true,"lineNumber":17,"columnNumber":32,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:<indexAccess>:map","isExternal":true,"lineNumber":17,"columnNumber":32,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:<indexAccess>:map","isExternal":true,"lineNumber":17,"columnNumber":32,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/AxiosHeaders.js::program:parseTokens","signature":"","fileName":"lib/core/AxiosHeaders.js","lineNumber":20,"columnNumber":0,"usages":[{"targetObj":{"name":"parseTokens","typeFullName":"__ecma.String","resolvedMethod":"lib/core/AxiosHeaders.js::program:parseTokens","isExternal":false,"lineNumber":128,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"parseTokens","typeFullName":"__ecma.String","resolvedMethod":"lib/core/AxiosHeaders.js::program:parseTokens","isExternal":false,"lineNumber":128,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"str","typeFullName":"ANY","position":1,"lineNumber":20,"columnNumber":21,"label":"PARAM"},"definedBy":{"name":"str","typeFullName":"ANY","position":1,"lineNumber":20,"columnNumber":21,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"exec","resolvedMethod":"tokensRE.exec","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":25,"columnNumber":18}]}]},{"code":"","fullName":"lib/core/InterceptorManager.js::program","signature":"","fileName":"lib/core/InterceptorManager.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/InterceptorManager.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/InterceptorManager.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/InterceptorManager.js::program:InterceptorManager:<init>","signature":"","fileName":"lib/core/InterceptorManager.js","lineNumber":6,"columnNumber":2,"usages":[{"targetObj":{"name":"constructor()","typeFullName":"ANY","lineNumber":6,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"constructor()","typeFullName":"ANY","lineNumber":6,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/InterceptorManager.js::program:InterceptorManager:clear","signature":"","fileName":"lib/core/InterceptorManager.js","lineNumber":46,"columnNumber":2,"usages":[{"targetObj":{"name":"clear()","typeFullName":"ANY","lineNumber":46,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"clear()","typeFullName":"ANY","lineNumber":46,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/InterceptorManager.js::program:InterceptorManager:eject","signature":"","fileName":"lib/core/InterceptorManager.js","lineNumber":35,"columnNumber":2,"usages":[{"targetObj":{"name":"eject(id)","typeFullName":"ANY","lineNumber":35,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"eject(id)","typeFullName":"ANY","lineNumber":35,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/InterceptorManager.js::program:InterceptorManager:forEach","signature":"","fileName":"lib/core/InterceptorManager.js","lineNumber":62,"columnNumber":2,"usages":[{"targetObj":{"name":"forEach(fn)","typeFullName":"ANY","lineNumber":62,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"forEach(fn)","typeFullName":"ANY","lineNumber":62,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/InterceptorManager.js::program:InterceptorManager:forEach:forEachHandler","signature":"","fileName":"lib/core/InterceptorManager.js","lineNumber":63,"columnNumber":33,"usages":[{"targetObj":{"name":"function forEachHandler(h)","typeFullName":"ANY","lineNumber":63,"columnNumber":33,"label":"UNKNOWN"},"definedBy":{"name":"function forEachHandler(h)","typeFullName":"ANY","lineNumber":63,"columnNumber":33,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"h","typeFullName":"ANY","position":1,"lineNumber":63,"columnNumber":57,"label":"PARAM"},"definedBy":{"name":"h","typeFullName":"ANY","position":1,"lineNumber":63,"columnNumber":57,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"fn","resolvedMethod":"fn","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":65,"columnNumber":8}]},{"targetObj":{"name":"fn","typeFullName":"ANY","resolvedMethod":"lib/core/InterceptorManager.js::program:fn","isExternal":true,"lineNumber":65,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"fn","typeFullName":"ANY","resolvedMethod":"lib/core/InterceptorManager.js::program:fn","isExternal":true,"lineNumber":65,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/InterceptorManager.js::program:InterceptorManager:use","signature":"","fileName":"lib/core/InterceptorManager.js","lineNumber":18,"columnNumber":2,"usages":[{"targetObj":{"name":"use(fulfilled, rejected, options)","typeFullName":"ANY","lineNumber":18,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"use(fulfilled, rejected, options)","typeFullName":"ANY","lineNumber":18,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"push","typeFullName":"ANY","resolvedMethod":"__ecma.Array.factory:push","isExternal":true,"lineNumber":45,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"push","typeFullName":"ANY","resolvedMethod":"__ecma.Array.factory:push","isExternal":true,"lineNumber":45,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/buildFullPath.js::program","signature":"","fileName":"lib/core/buildFullPath.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/buildFullPath.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/buildFullPath.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/buildFullPath.js::program:buildFullPath","signature":"","fileName":"lib/core/buildFullPath.js","lineNumber":16,"columnNumber":15,"usages":[{"targetObj":{"name":"buildFullPath","typeFullName":"lib/helpers/combineURLs.js::program:combineURLs:<returnValue>","resolvedMethod":"lib/core/buildFullPath.js::program:buildFullPath","isExternal":false,"lineNumber":195,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"buildFullPath","typeFullName":"lib/helpers/combineURLs.js::program:combineURLs:<returnValue>","resolvedMethod":"lib/core/buildFullPath.js::program:buildFullPath","isExternal":false,"lineNumber":195,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"baseURL","typeFullName":"__ecma.String","position":1,"lineNumber":16,"columnNumber":38,"label":"PARAM"},"definedBy":{"name":"baseURL","typeFullName":"__ecma.String","position":1,"lineNumber":16,"columnNumber":38,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"combineURLs","resolvedMethod":"combineURLs","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":18,"columnNumber":11}]},{"targetObj":{"name":"requestedURL","typeFullName":"__ecma.String","position":2,"lineNumber":16,"columnNumber":47,"label":"PARAM"},"definedBy":{"name":"requestedURL","typeFullName":"__ecma.String","position":2,"lineNumber":16,"columnNumber":47,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isAbsoluteURL","resolvedMethod":"isAbsoluteURL","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":17,"columnNumber":18},{"callName":"combineURLs","resolvedMethod":"combineURLs","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":18,"columnNumber":11}]}]},{"code":"","fullName":"lib/core/dispatchRequest.js::program","signature":"","fileName":"lib/core/dispatchRequest.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"AxiosHeaders","typeFullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/dispatchRequest.js::program:require","isExternal":null,"lineNumber":7,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"from","resolvedMethod":"AxiosHeaders.from","paramTypes":["ANY"],"returnType":"ANY","isExternal":false,"lineNumber":37,"columnNumber":19},{"callName":"from","resolvedMethod":"AxiosHeaders.from","paramTypes":["ANY"],"returnType":"ANY","isExternal":false,"lineNumber":61,"columnNumber":23},{"callName":"from","resolvedMethod":"AxiosHeaders.from","paramTypes":["ANY"],"returnType":"ANY","isExternal":false,"lineNumber":75,"columnNumber":34}],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"transformData","typeFullName":"(fns: Array<any> | Function, response: ANY | __ecma.Null) => ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/dispatchRequest.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"call","resolvedMethod":"transformData.call","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":40,"columnNumber":16},{"callName":"call","resolvedMethod":"transformData.call","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY","lib/core/AxiosHeaders.js::program:AxiosHeaders"],"returnType":"ANY","isExternal":true,"lineNumber":55,"columnNumber":20},{"callName":"call","resolvedMethod":"transformData.call","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":70,"columnNumber":31}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/dispatchRequest.js::program:require","isExternal":true,"lineNumber":8,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/dispatchRequest.js::program:require","isExternal":true,"lineNumber":8,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"adapters","typeFullName":"{ getAdapter: (adapters: ANY) => ANY; adapters: { http: (config: ANY) => Promise<any>; xhr: (config: ANY) => Promise<any>; fetch: (config: ANY) => Promise<any>; }; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/dispatchRequest.js::program:require","isExternal":null,"lineNumber":8,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"getAdapter","resolvedMethod":"adapters.getAdapter","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":49,"columnNumber":18}],"argToCalls":[]}]},{"code":"","fullName":"lib/core/dispatchRequest.js::program:dispatchRequest","signature":"","fileName":"lib/core/dispatchRequest.js","lineNumber":34,"columnNumber":15,"usages":[{"targetObj":{"name":"config","typeFullName":"ANY","position":1,"lineNumber":34,"columnNumber":40,"label":"PARAM"},"definedBy":{"name":"config","typeFullName":"ANY","position":1,"lineNumber":34,"columnNumber":40,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"throwIfCancellationRequested","resolvedMethod":"throwIfCancellationRequested","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":35,"columnNumber":2},{"callName":"call","resolvedMethod":"transformData.call","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":40,"columnNumber":16},{"callName":"adapter","resolvedMethod":"adapter","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":51,"columnNumber":9},{"callName":"throwIfCancellationRequested","resolvedMethod":"throwIfCancellationRequested","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":52,"columnNumber":4},{"callName":"call","resolvedMethod":"transformData.call","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY","lib/core/AxiosHeaders.js::program:AxiosHeaders"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":55,"columnNumber":20},{"callName":"throwIfCancellationRequested","resolvedMethod":"throwIfCancellationRequested","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":66,"columnNumber":6},{"callName":"call","resolvedMethod":"transformData.call","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":70,"columnNumber":31}]},{"targetObj":{"name":"then","typeFullName":"ANY","resolvedMethod":"lib/core/dispatchRequest.js::program:adapter:<returnValue>:then","isExternal":true,"lineNumber":51,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"then","typeFullName":"ANY","resolvedMethod":"lib/core/dispatchRequest.js::program:adapter:<returnValue>:then","isExternal":true,"lineNumber":51,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getAdapter","typeFullName":"ANY","resolvedMethod":"{ getAdapter: (adapters: ANY) => ANY; adapters: { http: (config: ANY) => Promise<any>; xhr: (config: ANY) => Promise<any>; fetch: (config: ANY) => Promise<any>; }; }:getAdapter","isExternal":true,"lineNumber":49,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"getAdapter","typeFullName":"ANY","resolvedMethod":"{ getAdapter: (adapters: ANY) => ANY; adapters: { http: (config: ANY) => Promise<any>; xhr: (config: ANY) => Promise<any>; fetch: (config: ANY) => Promise<any>; }; }:getAdapter","isExternal":true,"lineNumber":49,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"function dispatchRequest(config)","typeFullName":"ANY","lineNumber":34,"columnNumber":15,"label":"UNKNOWN"},"definedBy":{"name":"function dispatchRequest(config)","typeFullName":"ANY","lineNumber":34,"columnNumber":15,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"setContentType","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:<member>(headers):setContentType","isExternal":true,"lineNumber":46,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"setContentType","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:<member>(headers):setContentType","isExternal":true,"lineNumber":46,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"adapter","typeFullName":"ANY","resolvedMethod":"lib/core/dispatchRequest.js::program:adapter","isExternal":true,"lineNumber":51,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"adapter","typeFullName":"ANY","resolvedMethod":"lib/core/dispatchRequest.js::program:adapter","isExternal":true,"lineNumber":51,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/dispatchRequest.js::program:dispatchRequest:onAdapterRejection","signature":"","fileName":"lib/core/dispatchRequest.js","lineNumber":64,"columnNumber":5,"usages":[{"targetObj":{"name":"function onAdapterRejection(reason)","typeFullName":"ANY","lineNumber":64,"columnNumber":5,"label":"UNKNOWN"},"definedBy":{"name":"function onAdapterRejection(reason)","typeFullName":"ANY","lineNumber":64,"columnNumber":5,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"reason","typeFullName":"ANY","position":1,"lineNumber":64,"columnNumber":33,"label":"PARAM"},"definedBy":{"name":"reason","typeFullName":"ANY","position":1,"lineNumber":64,"columnNumber":33,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isCancel","resolvedMethod":"isCancel","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":65,"columnNumber":9},{"callName":"reject","resolvedMethod":"Promise.reject","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":79,"columnNumber":11}]}]},{"code":"","fullName":"lib/core/dispatchRequest.js::program:dispatchRequest:onAdapterResolution","signature":"","fileName":"lib/core/dispatchRequest.js","lineNumber":51,"columnNumber":30,"usages":[{"targetObj":{"name":"function onAdapterResolution(response)","typeFullName":"ANY","lineNumber":51,"columnNumber":30,"label":"UNKNOWN"},"definedBy":{"name":"function onAdapterResolution(response)","typeFullName":"ANY","lineNumber":51,"columnNumber":30,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"response","typeFullName":"ANY","position":1,"lineNumber":51,"columnNumber":59,"label":"PARAM"},"definedBy":{"name":"response","typeFullName":"ANY","position":1,"lineNumber":51,"columnNumber":59,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"transformData.call","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY","lib/core/AxiosHeaders.js::program:AxiosHeaders"],"returnType":"ANY","position":3,"isExternal":true,"lineNumber":55,"columnNumber":20}]},{"targetObj":{"name":"call","typeFullName":"ANY","resolvedMethod":"(fns: Array<any> | Function, response: ANY | __ecma.Null) => ANY:call","isExternal":true,"lineNumber":40,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"call","typeFullName":"ANY","resolvedMethod":"(fns: Array<any> | Function, response: ANY | __ecma.Null) => ANY:call","isExternal":true,"lineNumber":40,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/dispatchRequest.js::program:throwIfCancellationRequested","signature":"","fileName":"lib/core/dispatchRequest.js","lineNumber":17,"columnNumber":0,"usages":[{"targetObj":{"name":"throwIfCancellationRequested","typeFullName":"void","resolvedMethod":"lib/core/dispatchRequest.js::program:throwIfCancellationRequested","isExternal":false,"lineNumber":35,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"throwIfCancellationRequested","typeFullName":"void","resolvedMethod":"lib/core/dispatchRequest.js::program:throwIfCancellationRequested","isExternal":false,"lineNumber":35,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"throwIfRequested","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:<member>(cancelToken):throwIfRequested","isExternal":true,"lineNumber":19,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"throwIfRequested","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:<member>(cancelToken):throwIfRequested","isExternal":true,"lineNumber":19,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/settle.js::program","signature":"","fileName":"lib/core/settle.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/settle.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/settle.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/settle.js::program:settle","signature":"","fileName":"lib/core/settle.js","lineNumber":14,"columnNumber":15,"usages":[{"targetObj":{"name":"floor","typeFullName":"ANY","resolvedMethod":"__ecma.Math:floor","isExternal":true,"lineNumber":21,"columnNumber":64,"label":"CALL"},"definedBy":{"name":"floor","typeFullName":"ANY","resolvedMethod":"__ecma.Math:floor","isExternal":true,"lineNumber":21,"columnNumber":64,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"settle","typeFullName":"ANY","resolvedMethod":"lib/core/settle.js::program:settle","isExternal":false,"lineNumber":59,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"settle","typeFullName":"ANY","resolvedMethod":"lib/core/settle.js::program:settle","isExternal":false,"lineNumber":59,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"response","typeFullName":"ANY","position":3,"lineNumber":14,"columnNumber":48,"label":"PARAM"},"definedBy":{"name":"response","typeFullName":"ANY","position":3,"lineNumber":14,"columnNumber":48,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"resolve","resolvedMethod":"resolve","paramTypes":["__ecma.Number"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":17,"columnNumber":4}]},{"targetObj":{"name":"<operator>.division","typeFullName":"ANY","resolvedMethod":"<operator>.division","isExternal":true,"lineNumber":9,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"<operator>.division","typeFullName":"ANY","resolvedMethod":"<operator>.division","isExternal":true,"lineNumber":9,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"validateStatus","typeFullName":"ANY","resolvedMethod":"lib/core/settle.js::program:validateStatus","isExternal":true,"lineNumber":16,"columnNumber":45,"label":"CALL"},"definedBy":{"name":"validateStatus","typeFullName":"ANY","resolvedMethod":"lib/core/settle.js::program:validateStatus","isExternal":true,"lineNumber":16,"columnNumber":45,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"resolve","typeFullName":"ANY","resolvedMethod":"lib/core/settle.js::program:resolve","isExternal":true,"lineNumber":17,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"resolve","typeFullName":"ANY","resolvedMethod":"lib/core/settle.js::program:resolve","isExternal":true,"lineNumber":17,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"reject","typeFullName":"ANY","resolvedMethod":"lib/core/settle.js::program:reject","isExternal":true,"lineNumber":19,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"reject","typeFullName":"ANY","resolvedMethod":"lib/core/settle.js::program:reject","isExternal":true,"lineNumber":19,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/transformData.js::program","signature":"","fileName":"lib/core/transformData.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/transformData.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"forEach","resolvedMethod":"utils.forEach","paramTypes":["Function | Array<any>","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":21,"columnNumber":2}],"argToCalls":[]},{"targetObj":{"name":"AxiosHeaders","typeFullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/transformData.js::program:require","isExternal":null,"lineNumber":5,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"from","resolvedMethod":"AxiosHeaders.from","paramTypes":["ANY"],"returnType":"ANY","isExternal":false,"lineNumber":18,"columnNumber":18}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/transformData.js::program:require","isExternal":true,"lineNumber":5,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/core/transformData.js::program:require","isExternal":true,"lineNumber":5,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/core/transformData.js::program:transformData","signature":"","fileName":"lib/core/transformData.js","lineNumber":15,"columnNumber":15,"usages":[{"targetObj":{"name":"data","typeFullName":"context:data:<returnValue>:<member>(data)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"context.data","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":19,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"fn.call","paramTypes":["ANY","context:data:<returnValue>:<member>(data)","lib/core/AxiosHeaders.js::program","ANY"],"returnType":"lib/core/AxiosHeaders.js::program","position":2,"isExternal":true,"lineNumber":22,"columnNumber":11}]},{"targetObj":{"name":"function transformData(fns, response)","typeFullName":"ANY","lineNumber":15,"columnNumber":15,"label":"UNKNOWN"},"definedBy":{"name":"function transformData(fns, response)","typeFullName":"ANY","lineNumber":15,"columnNumber":15,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"config","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"this || defaults","typeFullName":"ANY","resolvedMethod":"<operator>.logicalOr","isExternal":null,"lineNumber":16,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"fn.call","paramTypes":["ANY","context:data:<returnValue>:<member>(data)","lib/core/AxiosHeaders.js::program","ANY"],"returnType":"lib/core/AxiosHeaders.js::program","position":1,"isExternal":true,"lineNumber":22,"columnNumber":11}]},{"targetObj":{"name":"headers","typeFullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:from:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"AxiosHeaders.from","typeFullName":"ANY","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:from","isExternal":null,"lineNumber":18,"columnNumber":18,"label":"CALL"},"invokedCalls":[{"callName":"normalize","resolvedMethod":"headers.normalize","paramTypes":[],"returnType":"ANY","isExternal":false,"lineNumber":22,"columnNumber":33},{"callName":"normalize","resolvedMethod":"headers.normalize","paramTypes":[],"returnType":"ANY","isExternal":false,"lineNumber":25,"columnNumber":2}],"argToCalls":[]},{"targetObj":{"name":"fns","typeFullName":"Function | Array<any>","position":1,"lineNumber":15,"columnNumber":38,"label":"PARAM"},"definedBy":{"name":"fns","typeFullName":"Function | Array<any>","position":1,"lineNumber":15,"columnNumber":38,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"forEach","resolvedMethod":"utils.forEach","paramTypes":["Function | Array<any>","LAMBDA"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":21,"columnNumber":2}]}]},{"code":"","fullName":"lib/core/transformData.js::program:transformData:transform","signature":"","fileName":"lib/core/transformData.js","lineNumber":21,"columnNumber":21,"usages":[{"targetObj":{"name":"function transform(fn)","typeFullName":"ANY","lineNumber":21,"columnNumber":21,"label":"UNKNOWN"},"definedBy":{"name":"function transform(fn)","typeFullName":"ANY","lineNumber":21,"columnNumber":21,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"fn","typeFullName":"ANY","position":1,"lineNumber":21,"columnNumber":40,"label":"PARAM"},"definedBy":{"name":"fn","typeFullName":"ANY","position":1,"lineNumber":21,"columnNumber":40,"label":"PARAM"},"invokedCalls":[{"callName":"call","resolvedMethod":"fn.call","paramTypes":["ANY","context:data:<returnValue>:<member>(data)","lib/core/AxiosHeaders.js::program","ANY"],"returnType":"lib/core/AxiosHeaders.js::program","isExternal":true,"lineNumber":22,"columnNumber":11}],"argToCalls":[]},{"targetObj":{"name":"data","typeFullName":"context:data:<returnValue>:<member>(data)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"fn.call","typeFullName":"ANY","resolvedMethod":"fn.call","isExternal":null,"lineNumber":22,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"fn.call","paramTypes":["ANY","context:data:<returnValue>:<member>(data)","lib/core/AxiosHeaders.js::program","ANY"],"returnType":"lib/core/AxiosHeaders.js::program","position":2,"isExternal":true,"lineNumber":22,"columnNumber":11}]},{"targetObj":{"name":"call","typeFullName":"ANY","resolvedMethod":"fn.call","isExternal":true,"lineNumber":22,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"call","typeFullName":"ANY","resolvedMethod":"fn.call","isExternal":true,"lineNumber":22,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/defaults/index.js::program","signature":"","fileName":"lib/defaults/index.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/defaults/index.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":22,"columnNumber":6},{"callName":"trim","resolvedMethod":"utils.trim","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":25,"columnNumber":13},{"callName":"isObject","resolvedMethod":"utils.isObject","paramTypes":["__ecma.FormData"],"returnType":"ANY","isExternal":true,"lineNumber":45,"columnNumber":28},{"callName":"isHTMLForm","resolvedMethod":"utils.isHTMLForm","paramTypes":["__ecma.FormData"],"returnType":"ANY","isExternal":true,"lineNumber":47,"columnNumber":27},{"callName":"isFormData","resolvedMethod":"utils.isFormData","paramTypes":["__ecma.FormData"],"returnType":"ANY","isExternal":true,"lineNumber":51,"columnNumber":23},{"callName":"isArrayBuffer","resolvedMethod":"utils.isArrayBuffer","paramTypes":["__ecma.FormData"],"returnType":"ANY","isExternal":true,"lineNumber":57,"columnNumber":8},{"callName":"isBuffer","resolvedMethod":"utils.isBuffer","paramTypes":["__ecma.FormData"],"returnType":"ANY","isExternal":true,"lineNumber":58,"columnNumber":6},{"callName":"isStream","resolvedMethod":"utils.isStream","paramTypes":["__ecma.FormData"],"returnType":"ANY","isExternal":true,"lineNumber":59,"columnNumber":6},{"callName":"isFile","resolvedMethod":"utils.isFile","paramTypes":["__ecma.FormData"],"returnType":"ANY","isExternal":true,"lineNumber":60,"columnNumber":6},{"callName":"isBlob","resolvedMethod":"utils.isBlob","paramTypes":["__ecma.FormData"],"returnType":"ANY","isExternal":true,"lineNumber":61,"columnNumber":6},{"callName":"isReadableStream","resolvedMethod":"utils.isReadableStream","paramTypes":["__ecma.FormData"],"returnType":"ANY","isExternal":true,"lineNumber":62,"columnNumber":6},{"callName":"isArrayBufferView","resolvedMethod":"utils.isArrayBufferView","paramTypes":["__ecma.FormData"],"returnType":"ANY","isExternal":true,"lineNumber":66,"columnNumber":8},{"callName":"isURLSearchParams","resolvedMethod":"utils.isURLSearchParams","paramTypes":["__ecma.FormData"],"returnType":"ANY","isExternal":true,"lineNumber":69,"columnNumber":8},{"callName":"isFileList","resolvedMethod":"utils.isFileList","paramTypes":["__ecma.FormData"],"returnType":"ANY","isExternal":true,"lineNumber":81,"columnNumber":24},{"callName":"isResponse","resolvedMethod":"utils.isResponse","paramTypes":["__ecma.FormData"],"returnType":"ANY","isExternal":true,"lineNumber":105,"columnNumber":8},{"callName":"isReadableStream","resolvedMethod":"utils.isReadableStream","paramTypes":["__ecma.FormData"],"returnType":"ANY","isExternal":true,"lineNumber":105,"columnNumber":34},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.FormData"],"returnType":"ANY","isExternal":true,"lineNumber":109,"columnNumber":16},{"callName":"forEach","resolvedMethod":"utils.forEach","paramTypes":["ANY","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":157,"columnNumber":0}],"argToCalls":[]},{"targetObj":{"name":"AxiosError","typeFullName":"lib/core/AxiosError.js::program:AxiosError","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/defaults/index.js::program:require","isExternal":null,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"from","resolvedMethod":"AxiosError.from","paramTypes":["__ecma.Boolean","ANY","lib/defaults/index.js::program","__ecma.Null","ANY","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":118,"columnNumber":18}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/defaults/index.js::program:require","isExternal":true,"lineNumber":9,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/defaults/index.js::program:require","isExternal":true,"lineNumber":9,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/defaults/index.js::program:anonymous","signature":"","fileName":"lib/defaults/index.js","lineNumber":157,"columnNumber":65,"usages":[{"targetObj":{"name":"(method)","typeFullName":"ANY","lineNumber":157,"columnNumber":65,"label":"UNKNOWN"},"definedBy":{"name":"(method)","typeFullName":"ANY","lineNumber":157,"columnNumber":65,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/defaults/index.js::program:stringifySafely","signature":"","fileName":"lib/defaults/index.js","lineNumber":21,"columnNumber":0,"usages":[{"targetObj":{"name":"parser || JSON.parse","typeFullName":"ANY","resolvedMethod":"lib/defaults/index.js::program:parser || JSON.parse","isExternal":true,"lineNumber":24,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"parser || JSON.parse","typeFullName":"ANY","resolvedMethod":"lib/defaults/index.js::program:parser || JSON.parse","isExternal":true,"lineNumber":24,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"encoder || JSON.stringify","typeFullName":"ANY","resolvedMethod":"lib/defaults/index.js::program:encoder || JSON.stringify","isExternal":true,"lineNumber":33,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"encoder || JSON.stringify","typeFullName":"ANY","resolvedMethod":"lib/defaults/index.js::program:encoder || JSON.stringify","isExternal":true,"lineNumber":33,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"stringifySafely","typeFullName":"__ecma.String","resolvedMethod":"lib/defaults/index.js::program:stringifySafely","isExternal":false,"lineNumber":94,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"stringifySafely","typeFullName":"__ecma.String","resolvedMethod":"lib/defaults/index.js::program:stringifySafely","isExternal":false,"lineNumber":94,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"trim","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:trim","isExternal":true,"lineNumber":25,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"trim","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:trim","isExternal":true,"lineNumber":25,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"rawValue","typeFullName":"ANY","position":1,"lineNumber":21,"columnNumber":25,"label":"PARAM"},"definedBy":{"name":"rawValue","typeFullName":"ANY","position":1,"lineNumber":21,"columnNumber":25,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":22,"columnNumber":6},{"callName":"parser || JSON.parse","resolvedMethod":"","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":24,"columnNumber":6},{"callName":"trim","resolvedMethod":"utils.trim","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":25,"columnNumber":13},{"callName":"encoder || JSON.stringify","resolvedMethod":"","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":33,"columnNumber":9}]}]},{"code":"","fullName":"lib/defaults/index.js::program:transformRequest","signature":"","fileName":"lib/defaults/index.js","lineNumber":42,"columnNumber":21,"usages":[{"targetObj":{"name":"data","typeFullName":"ANY","position":1,"lineNumber":42,"columnNumber":47,"label":"PARAM"},"definedBy":{"name":"data","typeFullName":"ANY","position":1,"lineNumber":42,"columnNumber":47,"label":"PARAM"},"invokedCalls":[{"callName":"toString","resolvedMethod":"data.toString","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":71,"columnNumber":13}],"argToCalls":[{"callName":"isObject","resolvedMethod":"utils.isObject","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":45,"columnNumber":28},{"callName":"isHTMLForm","resolvedMethod":"utils.isHTMLForm","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":47,"columnNumber":27},{"callName":"FormData","resolvedMethod":"FormData","paramTypes":["__ecma.FormData"],"returnType":"FormData","position":1,"isExternal":true,"lineNumber":48,"columnNumber":6},{"callName":"isFormData","resolvedMethod":"utils.isFormData","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":51,"columnNumber":23},{"callName":"formDataToJSON","resolvedMethod":"formDataToJSON","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":54,"columnNumber":49},{"callName":"isArrayBuffer","resolvedMethod":"utils.isArrayBuffer","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":57,"columnNumber":8},{"callName":"isBuffer","resolvedMethod":"utils.isBuffer","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":58,"columnNumber":6},{"callName":"isStream","resolvedMethod":"utils.isStream","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":59,"columnNumber":6},{"callName":"isFile","resolvedMethod":"utils.isFile","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":60,"columnNumber":6},{"callName":"isBlob","resolvedMethod":"utils.isBlob","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":61,"columnNumber":6},{"callName":"isReadableStream","resolvedMethod":"utils.isReadableStream","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":62,"columnNumber":6},{"callName":"isArrayBufferView","resolvedMethod":"utils.isArrayBufferView","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":66,"columnNumber":8},{"callName":"isURLSearchParams","resolvedMethod":"utils.isURLSearchParams","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":69,"columnNumber":8},{"callName":"toURLEncodedForm","resolvedMethod":"toURLEncodedForm","paramTypes":["__ecma.FormData","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":78,"columnNumber":15},{"callName":"isFileList","resolvedMethod":"utils.isFileList","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":81,"columnNumber":24},{"callName":"stringifySafely","resolvedMethod":"stringifySafely","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":94,"columnNumber":13}]},{"targetObj":{"name":"toString","typeFullName":"ANY","resolvedMethod":"__ecma.FormData:toString","isExternal":true,"lineNumber":71,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"toString","typeFullName":"ANY","resolvedMethod":"__ecma.FormData:toString","isExternal":true,"lineNumber":71,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"setContentType","typeFullName":"ANY","resolvedMethod":"headers.setContentType","isExternal":true,"lineNumber":93,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"setContentType","typeFullName":"ANY","resolvedMethod":"headers.setContentType","isExternal":true,"lineNumber":93,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isFileList","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isFileList","isExternal":true,"lineNumber":155,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"isFileList","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isFileList","isExternal":true,"lineNumber":155,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"headers","typeFullName":"ANY","position":2,"lineNumber":42,"columnNumber":53,"label":"PARAM"},"definedBy":{"name":"headers","typeFullName":"ANY","position":2,"lineNumber":42,"columnNumber":53,"label":"PARAM"},"invokedCalls":[{"callName":"getContentType","resolvedMethod":"headers.getContentType","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":43,"columnNumber":24},{"callName":"setContentType","resolvedMethod":"headers.setContentType","paramTypes":["__ecma.String","__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":70,"columnNumber":6},{"callName":"setContentType","resolvedMethod":"headers.setContentType","paramTypes":["__ecma.String","__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":93,"columnNumber":6}],"argToCalls":[]},{"targetObj":{"name":"contentType","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"headers.getContentType","typeFullName":"ANY","resolvedMethod":"<operator>.logicalOr","isExternal":null,"lineNumber":43,"columnNumber":24,"label":"CALL"},"invokedCalls":[{"callName":"indexOf","resolvedMethod":"contentType.indexOf","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":44,"columnNumber":31},{"callName":"indexOf","resolvedMethod":"contentType.indexOf","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":77,"columnNumber":10},{"callName":"indexOf","resolvedMethod":"contentType.indexOf","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":81,"columnNumber":51}],"argToCalls":[]},{"targetObj":{"name":"getContentType","typeFullName":"ANY","resolvedMethod":"headers.getContentType","isExternal":true,"lineNumber":43,"columnNumber":24,"label":"CALL"},"definedBy":{"name":"getContentType","typeFullName":"ANY","resolvedMethod":"headers.getContentType","isExternal":true,"lineNumber":43,"columnNumber":24,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"function transformRequest(data, headers)","typeFullName":"ANY","lineNumber":42,"columnNumber":21,"label":"UNKNOWN"},"definedBy":{"name":"function transformRequest(data, headers)","typeFullName":"ANY","lineNumber":42,"columnNumber":21,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isBuffer","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isBuffer","isExternal":true,"lineNumber":10,"columnNumber":29,"label":"CALL"},"definedBy":{"name":"isBuffer","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isBuffer","isExternal":true,"lineNumber":10,"columnNumber":29,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toString","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:toString","isExternal":true,"lineNumber":197,"columnNumber":60,"label":"CALL"},"definedBy":{"name":"toString","typeFullName":"ANY","resolvedMethod":"__ecma.Boolean:toString","isExternal":true,"lineNumber":197,"columnNumber":60,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/defaults/index.js::program:transformResponse","signature":"","fileName":"lib/defaults/index.js","lineNumber":100,"columnNumber":22,"usages":[{"targetObj":{"name":"function transformResponse(data)","typeFullName":"ANY","lineNumber":100,"columnNumber":22,"label":"UNKNOWN"},"definedBy":{"name":"function transformResponse(data)","typeFullName":"ANY","lineNumber":100,"columnNumber":22,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"data","typeFullName":"ANY","position":1,"lineNumber":100,"columnNumber":49,"label":"PARAM"},"definedBy":{"name":"data","typeFullName":"ANY","position":1,"lineNumber":100,"columnNumber":49,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isResponse","resolvedMethod":"utils.isResponse","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":105,"columnNumber":8},{"callName":"isReadableStream","resolvedMethod":"utils.isReadableStream","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":105,"columnNumber":34},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":109,"columnNumber":16},{"callName":"parse","resolvedMethod":"JSON.parse","paramTypes":["__ecma.FormData"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":114,"columnNumber":15}]},{"targetObj":{"name":"isResponse","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isResponse","isExternal":true,"lineNumber":105,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"isResponse","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isResponse","isExternal":true,"lineNumber":105,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/defaults/index.js::program:validateStatus","signature":"","fileName":"lib/defaults/index.js","lineNumber":145,"columnNumber":18,"usages":[{"targetObj":{"name":"function validateStatus(status)","typeFullName":"ANY","lineNumber":145,"columnNumber":18,"label":"UNKNOWN"},"definedBy":{"name":"function validateStatus(status)","typeFullName":"ANY","lineNumber":145,"columnNumber":18,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/defaults/transitional.js::program","signature":"","fileName":"lib/defaults/transitional.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/env/classes/FormData.js::program","signature":"","fileName":"lib/env/classes/FormData.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/env/classes/FormData.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/env/classes/FormData.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/env/data.js::program","signature":"","fileName":"lib/env/data.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosTransformStream.js::program","signature":"","fileName":"lib/helpers/AxiosTransformStream.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:<init>","signature":"","fileName":"lib/helpers/AxiosTransformStream.js","lineNumber":9,"columnNumber":2,"usages":[{"targetObj":{"name":"options","typeFullName":"ANY","position":1,"lineNumber":9,"columnNumber":14,"label":"PARAM"},"definedBy":{"name":"options","typeFullName":"ANY","position":1,"lineNumber":9,"columnNumber":14,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"toFlatObject","resolvedMethod":"utils.toFlatObject","paramTypes":["{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFlatObject:<returnValue>","ANY","__ecma.Null","LAMBDA"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":10,"columnNumber":14}]},{"targetObj":{"name":"now","typeFullName":"ANY","resolvedMethod":"DateConstructor:now","isExternal":true,"lineNumber":24,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"now","typeFullName":"ANY","resolvedMethod":"DateConstructor:now","isExternal":true,"lineNumber":24,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"constructor(options)","typeFullName":"ANY","lineNumber":9,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"constructor(options)","typeFullName":"ANY","lineNumber":9,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"super","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:super","isExternal":true,"lineNumber":21,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"super","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:super","isExternal":true,"lineNumber":21,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"on","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:on","isExternal":true,"lineNumber":38,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"on","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:on","isExternal":true,"lineNumber":38,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:<init>:anonymous","signature":"","fileName":"lib/helpers/AxiosTransformStream.js","lineNumber":17,"columnNumber":13,"usages":[{"targetObj":{"name":"(prop, source)","typeFullName":"ANY","lineNumber":17,"columnNumber":13,"label":"UNKNOWN"},"definedBy":{"name":"(prop, source)","typeFullName":"ANY","lineNumber":17,"columnNumber":13,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:<init>:anonymous1","signature":"","fileName":"lib/helpers/AxiosTransformStream.js","lineNumber":38,"columnNumber":27,"usages":[{"targetObj":{"name":"event => { if ","typeFullName":"ANY","lineNumber":38,"columnNumber":27,"label":"UNKNOWN"},"definedBy":{"name":"event => { if ","typeFullName":"ANY","lineNumber":38,"columnNumber":27,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:_read","signature":"","fileName":"lib/helpers/AxiosTransformStream.js","lineNumber":47,"columnNumber":2,"usages":[{"targetObj":{"name":"onReadCallback","typeFullName":"ANY","resolvedMethod":"{ timeWindow: ANY; chunkSize: ANY; maxRate: ANY; minChunkSize: ANY; bytesSeen: __ecma.Number; isCaptured: __ecma.Boolean; notifiedBytesLoaded: __ecma.Number; ts: __ecma.Number; bytes: __ecma.Number; onReadCallback: ANY; }:onReadCallback","isExternal":true,"lineNumber":51,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"onReadCallback","typeFullName":"ANY","resolvedMethod":"{ timeWindow: ANY; chunkSize: ANY; maxRate: ANY; minChunkSize: ANY; bytesSeen: __ecma.Number; isCaptured: __ecma.Boolean; notifiedBytesLoaded: __ecma.Number; ts: __ecma.Number; bytes: __ecma.Number; onReadCallback: ANY; }:onReadCallback","isExternal":true,"lineNumber":51,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_read","typeFullName":"ANY","resolvedMethod":"super._read","isExternal":true,"lineNumber":54,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"_read","typeFullName":"ANY","resolvedMethod":"super._read","isExternal":true,"lineNumber":54,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"size","typeFullName":"ANY","position":1,"lineNumber":47,"columnNumber":8,"label":"PARAM"},"definedBy":{"name":"size","typeFullName":"ANY","position":1,"lineNumber":47,"columnNumber":8,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"_read","resolvedMethod":"super._read","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":54,"columnNumber":11}]},{"targetObj":{"name":"onReadCallback","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:<indexAccess>:onReadCallback","isExternal":true,"lineNumber":51,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"onReadCallback","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:<indexAccess>:onReadCallback","isExternal":true,"lineNumber":51,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_read(size)","typeFullName":"ANY","lineNumber":47,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"_read(size)","typeFullName":"ANY","lineNumber":47,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"internals","typeFullName":"lib/helpers/AxiosTransformStream.js::program:<indexAccess>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"this[kInternals]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":48,"columnNumber":22,"label":"CALL"},"invokedCalls":[{"callName":"onReadCallback","resolvedMethod":"internals.onReadCallback","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":51,"columnNumber":6}],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:_transform","signature":"","fileName":"lib/helpers/AxiosTransformStream.js","lineNumber":57,"columnNumber":2,"usages":[{"targetObj":{"name":"_transform(chunk, encoding, callback)","typeFullName":"ANY","lineNumber":57,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"_transform(chunk, encoding, callback)","typeFullName":"ANY","lineNumber":57,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"chunk","typeFullName":"ANY","position":1,"lineNumber":57,"columnNumber":13,"label":"PARAM"},"definedBy":{"name":"chunk","typeFullName":"ANY","position":1,"lineNumber":57,"columnNumber":13,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"transformChunk","resolvedMethod":"transformChunk","paramTypes":["ANY","LAMBDA"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":129,"columnNumber":4}]},{"targetObj":{"name":"max","typeFullName":"ANY","resolvedMethod":"__ecma.Math:max","isExternal":true,"lineNumber":67,"columnNumber":60,"label":"CALL"},"definedBy":{"name":"max","typeFullName":"ANY","resolvedMethod":"__ecma.Math:max","isExternal":true,"lineNumber":67,"columnNumber":60,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:_transform:anonymous1:anonymous","signature":"","fileName":"lib/helpers/AxiosTransformStream.js","lineNumber":109,"columnNumber":28,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":109,"columnNumber":28,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":109,"columnNumber":28,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_callback","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:_callback","isExternal":true,"lineNumber":110,"columnNumber":12,"label":"CALL"},"definedBy":{"name":"_callback","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:_callback","isExternal":true,"lineNumber":110,"columnNumber":12,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:_transform:anonymous1:anonymous1","signature":"","fileName":"lib/helpers/AxiosTransformStream.js","lineNumber":124,"columnNumber":41,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":124,"columnNumber":41,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":124,"columnNumber":41,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:_transform:anonymous:anonymous","signature":"","fileName":"lib/helpers/AxiosTransformStream.js","lineNumber":79,"columnNumber":35,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":79,"columnNumber":35,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":79,"columnNumber":35,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"nextTick","typeFullName":"ANY","resolvedMethod":"process.nextTick","isExternal":true,"lineNumber":125,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"nextTick","typeFullName":"ANY","resolvedMethod":"process.nextTick","isExternal":true,"lineNumber":125,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:_transform:pushChunk","signature":"","fileName":"lib/helpers/AxiosTransformStream.js","lineNumber":69,"columnNumber":22,"usages":[{"targetObj":{"name":"_chunk","typeFullName":"ANY","position":1,"lineNumber":69,"columnNumber":23,"label":"PARAM"},"definedBy":{"name":"_chunk","typeFullName":"ANY","position":1,"lineNumber":69,"columnNumber":23,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"byteLength","resolvedMethod":"Buffer.byteLength","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":70,"columnNumber":20},{"callName":"push","resolvedMethod":"this.push","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":76,"columnNumber":10}]},{"targetObj":{"name":"byteLength","typeFullName":"ANY","resolvedMethod":"Buffer.byteLength","isExternal":true,"lineNumber":87,"columnNumber":24,"label":"CALL"},"definedBy":{"name":"byteLength","typeFullName":"ANY","resolvedMethod":"Buffer.byteLength","isExternal":true,"lineNumber":87,"columnNumber":24,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"push","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:push","isExternal":true,"lineNumber":76,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"push","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:push","isExternal":true,"lineNumber":76,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"pushChunk","typeFullName":"void","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:_transform:pushChunk","isExternal":false,"lineNumber":124,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"pushChunk","typeFullName":"void","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:_transform:pushChunk","isExternal":false,"lineNumber":124,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_callback","typeFullName":"ANY","position":2,"lineNumber":69,"columnNumber":31,"label":"PARAM"},"definedBy":{"name":"_callback","typeFullName":"ANY","position":2,"lineNumber":69,"columnNumber":31,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"nextTick","resolvedMethod":"process.nextTick","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":77,"columnNumber":8},{"callName":"nextTick","resolvedMethod":"process.nextTick","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":81,"columnNumber":10}]},{"targetObj":{"name":"emit","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:emit","isExternal":true,"lineNumber":74,"columnNumber":30,"label":"CALL"},"definedBy":{"name":"emit","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:emit","isExternal":true,"lineNumber":74,"columnNumber":30,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:_transform:transformChunk","signature":"","fileName":"lib/helpers/AxiosTransformStream.js","lineNumber":86,"columnNumber":27,"usages":[{"targetObj":{"name":"<operator>.lessEqualsThan","typeFullName":"ANY","resolvedMethod":"<operator>.lessEqualsThan","isExternal":true,"lineNumber":14,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"<operator>.lessEqualsThan","typeFullName":"ANY","resolvedMethod":"<operator>.lessEqualsThan","isExternal":true,"lineNumber":14,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_chunk","typeFullName":"ANY","position":1,"lineNumber":86,"columnNumber":28,"label":"PARAM"},"definedBy":{"name":"_chunk","typeFullName":"ANY","position":1,"lineNumber":86,"columnNumber":28,"label":"PARAM"},"invokedCalls":[{"callName":"subarray","resolvedMethod":"_chunk.subarray","paramTypes":["__ecma.Number"],"returnType":"ANY","isExternal":true,"lineNumber":120,"columnNumber":25},{"callName":"subarray","resolvedMethod":"_chunk.subarray","paramTypes":["__ecma.Number","__ecma.Number"],"returnType":"ANY","isExternal":true,"lineNumber":121,"columnNumber":17}],"argToCalls":[{"callName":"byteLength","resolvedMethod":"Buffer.byteLength","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":87,"columnNumber":24},{"callName":"_callback","resolvedMethod":"_callback","paramTypes":["__ecma.Null","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":110,"columnNumber":12},{"callName":"pushChunk","resolvedMethod":"pushChunk","paramTypes":["ANY","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":124,"columnNumber":6}]},{"targetObj":{"name":"setTimeout","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:setTimeout","isExternal":true,"lineNumber":109,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"setTimeout","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:setTimeout","isExternal":true,"lineNumber":109,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"chunkRemainder","typeFullName":"__ecma.Null","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_chunk.subarray","typeFullName":"ANY","resolvedMethod":"_chunk.subarray","isExternal":null,"lineNumber":120,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"nextTick","resolvedMethod":"process.nextTick","paramTypes":["ANY","__ecma.Null","__ecma.Null"],"returnType":"ANY","position":3,"isExternal":true,"lineNumber":125,"columnNumber":8}]},{"targetObj":{"name":"transformChunk","typeFullName":"__ecma.Number","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:_transform:transformChunk","isExternal":false,"lineNumber":129,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"transformChunk","typeFullName":"__ecma.Number","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:_transform:transformChunk","isExternal":false,"lineNumber":129,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_callback","typeFullName":"ANY","position":2,"lineNumber":86,"columnNumber":36,"label":"PARAM"},"definedBy":{"name":"_callback","typeFullName":"ANY","position":2,"lineNumber":86,"columnNumber":36,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"nextTick","resolvedMethod":"process.nextTick","paramTypes":["ANY","__ecma.Null","__ecma.Null"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":125,"columnNumber":8}]},{"targetObj":{"name":"subarray","typeFullName":"ANY","resolvedMethod":"_chunk.subarray","isExternal":true,"lineNumber":121,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"subarray","typeFullName":"ANY","resolvedMethod":"_chunk.subarray","isExternal":true,"lineNumber":121,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:_transform:transformNextChunk","signature":"","fileName":"lib/helpers/AxiosTransformStream.js","lineNumber":129,"columnNumber":26,"usages":[{"targetObj":{"name":"function transformNextChunk(err, _chunk)","typeFullName":"ANY","lineNumber":129,"columnNumber":26,"label":"UNKNOWN"},"definedBy":{"name":"function transformNextChunk(err, _chunk)","typeFullName":"ANY","lineNumber":129,"columnNumber":26,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"err","typeFullName":"ANY","position":1,"lineNumber":129,"columnNumber":54,"label":"PARAM"},"definedBy":{"name":"err","typeFullName":"ANY","position":1,"lineNumber":129,"columnNumber":54,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"callback","resolvedMethod":"callback","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":131,"columnNumber":15}]},{"targetObj":{"name":"_chunk","typeFullName":"ANY","position":2,"lineNumber":129,"columnNumber":59,"label":"PARAM"},"definedBy":{"name":"_chunk","typeFullName":"ANY","position":2,"lineNumber":129,"columnNumber":59,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"transformChunk","resolvedMethod":"transformChunk","paramTypes":["ANY","(err: ANY, _chunk: ANY) => ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":135,"columnNumber":8}]},{"targetObj":{"name":"callback","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:callback","isExternal":true,"lineNumber":137,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"callback","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:callback","isExternal":true,"lineNumber":137,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosURLSearchParams.js::program","signature":"","fileName":"lib/helpers/AxiosURLSearchParams.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosURLSearchParams.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosURLSearchParams.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosURLSearchParams.js::program:AxiosURLSearchParams","signature":"","fileName":"lib/helpers/AxiosURLSearchParams.js","lineNumber":36,"columnNumber":0,"usages":[{"targetObj":{"name":"<operator>.new","typeFullName":"void","resolvedMethod":"lib/helpers/AxiosURLSearchParams.js::program:AxiosURLSearchParams","isExternal":false,"lineNumber":56,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"<operator>.new","typeFullName":"void","resolvedMethod":"lib/helpers/AxiosURLSearchParams.js::program:AxiosURLSearchParams","isExternal":false,"lineNumber":56,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"params","typeFullName":"{ [x: __ecma.String]: ANY; }","position":1,"lineNumber":36,"columnNumber":30,"label":"PARAM"},"definedBy":{"name":"params","typeFullName":"{ [x: __ecma.String]: ANY; }","position":1,"lineNumber":36,"columnNumber":30,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"toFormData","resolvedMethod":"toFormData","paramTypes":["{ [x: __ecma.String]: ANY; }","lib/helpers/AxiosURLSearchParams.js::program","{ [x: __ecma.String]: ANY; }"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":39,"columnNumber":12}]},{"targetObj":{"name":"options","typeFullName":"{ [x: __ecma.String]: ANY; }","position":2,"lineNumber":36,"columnNumber":38,"label":"PARAM"},"definedBy":{"name":"options","typeFullName":"{ [x: __ecma.String]: ANY; }","position":2,"lineNumber":36,"columnNumber":38,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"toFormData","resolvedMethod":"toFormData","paramTypes":["{ [x: __ecma.String]: ANY; }","lib/helpers/AxiosURLSearchParams.js::program","{ [x: __ecma.String]: ANY; }"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":39,"columnNumber":12}]}]},{"code":"","fullName":"lib/helpers/AxiosURLSearchParams.js::program:append","signature":"","fileName":"lib/helpers/AxiosURLSearchParams.js","lineNumber":44,"columnNumber":19,"usages":[{"targetObj":{"name":"function append(name, value)","typeFullName":"ANY","lineNumber":44,"columnNumber":19,"label":"UNKNOWN"},"definedBy":{"name":"function append(name, value)","typeFullName":"ANY","lineNumber":44,"columnNumber":19,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"name","typeFullName":"ANY","position":1,"lineNumber":44,"columnNumber":35,"label":"PARAM"},"definedBy":{"name":"name","typeFullName":"ANY","position":1,"lineNumber":44,"columnNumber":35,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"","resolvedMethod":"_tmp_3.push","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":45,"columnNumber":20}]},{"targetObj":{"name":"value","typeFullName":"ANY","position":2,"lineNumber":44,"columnNumber":41,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":2,"lineNumber":44,"columnNumber":41,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"","resolvedMethod":"_tmp_3.push","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":45,"columnNumber":26}]}]},{"code":"","fullName":"lib/helpers/AxiosURLSearchParams.js::program:encode","signature":"","fileName":"lib/helpers/AxiosURLSearchParams.js","lineNumber":13,"columnNumber":0,"usages":[{"targetObj":{"name":"function encode(str)","typeFullName":"ANY","lineNumber":13,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":"function encode(str)","typeFullName":"ANY","lineNumber":13,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"str","typeFullName":"__ecma.String","position":1,"lineNumber":13,"columnNumber":16,"label":"PARAM"},"definedBy":{"name":"str","typeFullName":"__ecma.String","position":1,"lineNumber":13,"columnNumber":16,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"encodeURIComponent","resolvedMethod":"encodeURIComponent","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":23,"columnNumber":9}]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"encodeURIComponent:<returnValue>:replace","isExternal":true,"lineNumber":15,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"encodeURIComponent:<returnValue>:replace","isExternal":true,"lineNumber":15,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosURLSearchParams.js::program:encode:replacer","signature":"","fileName":"lib/helpers/AxiosURLSearchParams.js","lineNumber":23,"columnNumber":61,"usages":[{"targetObj":{"name":"function replacer(match)","typeFullName":"ANY","lineNumber":23,"columnNumber":61,"label":"UNKNOWN"},"definedBy":{"name":"function replacer(match)","typeFullName":"ANY","lineNumber":23,"columnNumber":61,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosURLSearchParams.js::program:toString","signature":"","fileName":"lib/helpers/AxiosURLSearchParams.js","lineNumber":48,"columnNumber":21,"usages":[{"targetObj":{"name":"function toString(encoder)","typeFullName":"ANY","lineNumber":48,"columnNumber":21,"label":"UNKNOWN"},"definedBy":{"name":"function toString(encoder)","typeFullName":"ANY","lineNumber":48,"columnNumber":21,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"encoder","typeFullName":"ANY","position":1,"lineNumber":48,"columnNumber":39,"label":"PARAM"},"definedBy":{"name":"encoder","typeFullName":"ANY","position":1,"lineNumber":48,"columnNumber":39,"label":"PARAM"},"invokedCalls":[{"callName":"call","resolvedMethod":"encoder.call","paramTypes":["lib/helpers/AxiosURLSearchParams.js::program","ANY","lib/helpers/AxiosURLSearchParams.js::program:encode","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":50,"columnNumber":11}],"argToCalls":[]},{"targetObj":{"name":"join","typeFullName":"ANY","resolvedMethod":"__ecma.Array.factory:map:<returnValue>:join","isExternal":true,"lineNumber":53,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"join","typeFullName":"ANY","resolvedMethod":"__ecma.Array.factory:map:<returnValue>:join","isExternal":true,"lineNumber":53,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"__ecma.Array.factory:map","isExternal":true,"lineNumber":53,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"__ecma.Array.factory:map","isExternal":true,"lineNumber":53,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosURLSearchParams.js::program:toString:anonymous","signature":"","fileName":"lib/helpers/AxiosURLSearchParams.js","lineNumber":49,"columnNumber":28,"usages":[{"targetObj":{"name":"function(value)","typeFullName":"ANY","lineNumber":49,"columnNumber":28,"label":"UNKNOWN"},"definedBy":{"name":"function(value)","typeFullName":"ANY","lineNumber":49,"columnNumber":28,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":49,"columnNumber":37,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":49,"columnNumber":37,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"encoder.call","paramTypes":["lib/helpers/AxiosURLSearchParams.js::program","ANY","lib/helpers/AxiosURLSearchParams.js::program:encode","LAMBDA"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":50,"columnNumber":11}]},{"targetObj":{"name":"call","typeFullName":"ANY","resolvedMethod":"(value: ANY) => ANY:call","isExternal":true,"lineNumber":50,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"call","typeFullName":"ANY","resolvedMethod":"(value: ANY) => ANY:call","isExternal":true,"lineNumber":50,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/AxiosURLSearchParams.js::program:toString:each","signature":"","fileName":"lib/helpers/AxiosURLSearchParams.js","lineNumber":53,"columnNumber":25,"usages":[{"targetObj":{"name":"function each(pair)","typeFullName":"ANY","lineNumber":53,"columnNumber":25,"label":"UNKNOWN"},"definedBy":{"name":"function each(pair)","typeFullName":"ANY","lineNumber":53,"columnNumber":25,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_encode","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosURLSearchParams.js::program:_encode","isExternal":true,"lineNumber":54,"columnNumber":36,"label":"CALL"},"definedBy":{"name":"_encode","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosURLSearchParams.js::program:_encode","isExternal":true,"lineNumber":54,"columnNumber":36,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/HttpStatusCode.js::program","signature":"","fileName":"lib/helpers/HttpStatusCode.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"Object.entries:<returnValue>:forEach","isExternal":true,"lineNumber":67,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"Object.entries:<returnValue>:forEach","isExternal":true,"lineNumber":67,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/HttpStatusCode.js::program:anonymous","signature":"","fileName":"lib/helpers/HttpStatusCode.js","lineNumber":67,"columnNumber":39,"usages":[{"targetObj":{"name":"([key, value])","typeFullName":"ANY","lineNumber":67,"columnNumber":39,"label":"UNKNOWN"},"definedBy":{"name":"([key, value])","typeFullName":"ANY","lineNumber":67,"columnNumber":39,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/ZlibHeaderTransformStream.js::program","signature":"","fileName":"lib/helpers/ZlibHeaderTransformStream.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/ZlibHeaderTransformStream.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/ZlibHeaderTransformStream.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:<init>","signature":"","fileName":"lib/helpers/ZlibHeaderTransformStream.js","lineNumber":null,"columnNumber":null,"usages":[{"targetObj":{"name":"constructor()","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"UNKNOWN"},"definedBy":{"name":"constructor()","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:__transform","signature":"","fileName":"lib/helpers/ZlibHeaderTransformStream.js","lineNumber":6,"columnNumber":2,"usages":[{"targetObj":{"name":"__transform","typeFullName":"(chunk: ANY, encoding: ANY, callback: ANY) => void","resolvedMethod":"lib/helpers/ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:__transform","isExternal":false,"lineNumber":24,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"__transform","typeFullName":"(chunk: ANY, encoding: ANY, callback: ANY) => void","resolvedMethod":"lib/helpers/ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:__transform","isExternal":false,"lineNumber":24,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"chunk","typeFullName":"ANY","position":1,"lineNumber":6,"columnNumber":14,"label":"PARAM"},"definedBy":{"name":"chunk","typeFullName":"ANY","position":1,"lineNumber":6,"columnNumber":14,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"push","resolvedMethod":"this.push","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":7,"columnNumber":4}]},{"targetObj":{"name":"push","typeFullName":"ANY","resolvedMethod":"lib/helpers/ZlibHeaderTransformStream.js::program:push","isExternal":true,"lineNumber":20,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"push","typeFullName":"ANY","resolvedMethod":"lib/helpers/ZlibHeaderTransformStream.js::program:push","isExternal":true,"lineNumber":20,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"callback","typeFullName":"ANY","resolvedMethod":"lib/helpers/ZlibHeaderTransformStream.js::program:callback","isExternal":true,"lineNumber":8,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"callback","typeFullName":"ANY","resolvedMethod":"lib/helpers/ZlibHeaderTransformStream.js::program:callback","isExternal":true,"lineNumber":8,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:_transform","signature":"","fileName":"lib/helpers/ZlibHeaderTransformStream.js","lineNumber":11,"columnNumber":2,"usages":[{"targetObj":{"name":"chunk","typeFullName":"ANY","position":1,"lineNumber":11,"columnNumber":13,"label":"PARAM"},"definedBy":{"name":"chunk","typeFullName":"ANY","position":1,"lineNumber":11,"columnNumber":13,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"__transform","resolvedMethod":"this.__transform","paramTypes":["__ecma.Boolean","ANY","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":24,"columnNumber":4}]},{"targetObj":{"name":"encoding","typeFullName":"ANY","position":2,"lineNumber":11,"columnNumber":20,"label":"PARAM"},"definedBy":{"name":"encoding","typeFullName":"ANY","position":2,"lineNumber":11,"columnNumber":20,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"push","resolvedMethod":"this.push","paramTypes":["__ecma.Number","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":20,"columnNumber":8},{"callName":"__transform","resolvedMethod":"this.__transform","paramTypes":["__ecma.Boolean","ANY","ANY"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":24,"columnNumber":4}]},{"targetObj":{"name":"_transform(chunk, encoding, callback)","typeFullName":"ANY","lineNumber":11,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"_transform(chunk, encoding, callback)","typeFullName":"ANY","lineNumber":11,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"alloc","typeFullName":"ANY","resolvedMethod":"Buffer.alloc","isExternal":true,"lineNumber":17,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"alloc","typeFullName":"ANY","resolvedMethod":"Buffer.alloc","isExternal":true,"lineNumber":17,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"callback","typeFullName":"ANY","position":3,"lineNumber":11,"columnNumber":30,"label":"PARAM"},"definedBy":{"name":"callback","typeFullName":"ANY","position":3,"lineNumber":11,"columnNumber":30,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"__transform","resolvedMethod":"this.__transform","paramTypes":["__ecma.Boolean","ANY","ANY"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":24,"columnNumber":4}]},{"targetObj":{"name":"header","typeFullName":"__ecma.Number","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"Buffer.alloc","typeFullName":"ANY","resolvedMethod":"Buffer.alloc","isExternal":null,"lineNumber":17,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"push","resolvedMethod":"this.push","paramTypes":["__ecma.Number","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":20,"columnNumber":8}]}]},{"code":"","fullName":"lib/helpers/bind.js::program","signature":"","fileName":"lib/helpers/bind.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/bind.js::program:bind","signature":"","fileName":"lib/helpers/bind.js","lineNumber":3,"columnNumber":15,"usages":[{"targetObj":{"name":"bind","typeFullName":"ANY","resolvedMethod":"lib/helpers/bind.js::program:bind","isExternal":false,"lineNumber":347,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"bind","typeFullName":"ANY","resolvedMethod":"lib/helpers/bind.js::program:bind","isExternal":false,"lineNumber":347,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"fn","typeFullName":"ANY","position":1,"lineNumber":3,"columnNumber":29,"label":"PARAM"},"definedBy":{"name":"fn","typeFullName":"ANY","position":1,"lineNumber":3,"columnNumber":29,"label":"PARAM"},"invokedCalls":[{"callName":"apply","resolvedMethod":"fn.apply","paramTypes":["ANY","IArguments"],"returnType":"ANY","isExternal":null,"lineNumber":5,"columnNumber":11}],"argToCalls":[]},{"targetObj":{"name":"thisArg","typeFullName":"ANY","position":2,"lineNumber":3,"columnNumber":33,"label":"PARAM"},"definedBy":{"name":"thisArg","typeFullName":"ANY","position":2,"lineNumber":3,"columnNumber":33,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"apply","resolvedMethod":"fn.apply","paramTypes":["ANY","IArguments"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":5,"columnNumber":11}]}]},{"code":"","fullName":"lib/helpers/bind.js::program:bind:wrap","signature":"","fileName":"lib/helpers/bind.js","lineNumber":4,"columnNumber":9,"usages":[{"targetObj":{"name":"function wrap()","typeFullName":"ANY","lineNumber":4,"columnNumber":9,"label":"UNKNOWN"},"definedBy":{"name":"function wrap()","typeFullName":"ANY","lineNumber":4,"columnNumber":9,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/buildURL.js::program","signature":"","fileName":"lib/helpers/buildURL.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/buildURL.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"isFunction","resolvedMethod":"utils.isFunction","paramTypes":["{ serialize: ANY; }"],"returnType":"ANY","isExternal":true,"lineNumber":41,"columnNumber":6},{"callName":"isURLSearchParams","resolvedMethod":"utils.isURLSearchParams","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":54,"columnNumber":23}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/buildURL.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/buildURL.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/buildURL.js::program:buildURL","signature":"","fileName":"lib/helpers/buildURL.js","lineNumber":33,"columnNumber":15,"usages":[{"targetObj":{"name":"buildURL","typeFullName":"__ecma.String","resolvedMethod":"lib/helpers/buildURL.js::program:buildURL","isExternal":false,"lineNumber":196,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"buildURL","typeFullName":"__ecma.String","resolvedMethod":"lib/helpers/buildURL.js::program:buildURL","isExternal":false,"lineNumber":196,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toString","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosURLSearchParams.js::program:AxiosURLSearchParams:toString","isExternal":true,"lineNumber":56,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"toString","typeFullName":"ANY","resolvedMethod":"lib/helpers/AxiosURLSearchParams.js::program:AxiosURLSearchParams:toString","isExternal":true,"lineNumber":56,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"hashmarkIndex","typeFullName":"__ecma.String:indexOf:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"url.indexOf","typeFullName":"ANY","resolvedMethod":"__ecma.String:indexOf","isExternal":null,"lineNumber":60,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"slice","resolvedMethod":"url.slice","paramTypes":["__ecma.Number","__ecma.String:indexOf:<returnValue>"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":63,"columnNumber":12}]},{"targetObj":{"name":"serializedParams","typeFullName":"lib/helpers/buildURL.js::program:serializeFn:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"utils.isURLSearchParams","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":null,"lineNumber":54,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"AxiosURLSearchParams","resolvedMethod":"utils.isURLSearchParams","paramTypes":["ANY","{ serialize: ANY; }","LAMBDA"],"returnType":"lib/helpers/AxiosURLSearchParams.js::program:AxiosURLSearchParams","position":1,"isExternal":true,"lineNumber":54,"columnNumber":4}]},{"targetObj":{"name":"toString","typeFullName":"ANY","resolvedMethod":"params.toString","isExternal":true,"lineNumber":55,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"toString","typeFullName":"ANY","resolvedMethod":"params.toString","isExternal":true,"lineNumber":55,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"options","typeFullName":"ANY","position":3,"lineNumber":33,"columnNumber":46,"label":"PARAM"},"definedBy":{"name":"options","typeFullName":"ANY","position":3,"lineNumber":33,"columnNumber":46,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isFunction","resolvedMethod":"utils.isFunction","paramTypes":["{ serialize: ANY; }"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":41,"columnNumber":6},{"callName":"serializeFn","resolvedMethod":"serializeFn","paramTypes":["ANY","{ serialize: ANY; }"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":52,"columnNumber":23}]},{"targetObj":{"name":"serializeFn","typeFullName":"ANY","resolvedMethod":"lib/helpers/buildURL.js::program:serializeFn","isExternal":true,"lineNumber":52,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"serializeFn","typeFullName":"ANY","resolvedMethod":"lib/helpers/buildURL.js::program:serializeFn","isExternal":true,"lineNumber":52,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"params","typeFullName":"ANY","position":2,"lineNumber":33,"columnNumber":38,"label":"PARAM"},"definedBy":{"name":"params","typeFullName":"ANY","position":2,"lineNumber":33,"columnNumber":38,"label":"PARAM"},"invokedCalls":[{"callName":"toString","resolvedMethod":"params.toString","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":55,"columnNumber":6}],"argToCalls":[{"callName":"serializeFn","resolvedMethod":"serializeFn","paramTypes":["ANY","{ serialize: ANY; }"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":52,"columnNumber":23},{"callName":"isURLSearchParams","resolvedMethod":"utils.isURLSearchParams","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":54,"columnNumber":23}]},{"targetObj":{"name":"_encode","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"options && options.encode || encode","typeFullName":"ANY","resolvedMethod":"<operator>.logicalOr","isExternal":null,"lineNumber":39,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"AxiosURLSearchParams","resolvedMethod":"AxiosURLSearchParams","paramTypes":["ANY","{ serialize: ANY; }","LAMBDA"],"returnType":"lib/helpers/AxiosURLSearchParams.js::program:AxiosURLSearchParams","position":1,"isExternal":true,"lineNumber":56,"columnNumber":6}]},{"targetObj":{"name":"url","typeFullName":"__ecma.String","position":1,"lineNumber":33,"columnNumber":33,"label":"PARAM"},"definedBy":{"name":"url","typeFullName":"__ecma.String","position":1,"lineNumber":33,"columnNumber":33,"label":"PARAM"},"invokedCalls":[{"callName":"indexOf","resolvedMethod":"url.indexOf","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":60,"columnNumber":26},{"callName":"slice","resolvedMethod":"url.slice","paramTypes":["__ecma.Number","__ecma.String:indexOf:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":63,"columnNumber":12},{"callName":"indexOf","resolvedMethod":"url.indexOf","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":65,"columnNumber":12}],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/buildURL.js::program:encode","signature":"","fileName":"lib/helpers/buildURL.js","lineNumber":14,"columnNumber":0,"usages":[{"targetObj":{"name":"function encode(val)","typeFullName":"ANY","lineNumber":14,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":"function encode(val)","typeFullName":"ANY","lineNumber":14,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"val","typeFullName":"__ecma.String","position":1,"lineNumber":14,"columnNumber":16,"label":"PARAM"},"definedBy":{"name":"val","typeFullName":"__ecma.String","position":1,"lineNumber":14,"columnNumber":16,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"encodeURIComponent","resolvedMethod":"encodeURIComponent","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":15,"columnNumber":9}]}]},{"code":"","fullName":"lib/helpers/callbackify.js::program","signature":"","fileName":"lib/helpers/callbackify.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/callbackify.js::program:require","isExternal":null,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"isAsyncFn","resolvedMethod":"utils.isAsyncFn","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":4,"columnNumber":9}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/callbackify.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/callbackify.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/callbackify.js::program:anonymous:anonymous","signature":"","fileName":"lib/helpers/callbackify.js","lineNumber":4,"columnNumber":31,"usages":[{"targetObj":{"name":"function (...args)","typeFullName":"ANY","lineNumber":4,"columnNumber":31,"label":"UNKNOWN"},"definedBy":{"name":"function (...args)","typeFullName":"ANY","lineNumber":4,"columnNumber":31,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"cb","typeFullName":"Array<any>:pop:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"args.pop","typeFullName":"ANY","resolvedMethod":"Array<any>:pop","isExternal":null,"lineNumber":5,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"then","resolvedMethod":"fn.apply","paramTypes":["LAMBDA","Array<any>:pop:<returnValue>"],"returnType":"ANY","position":2,"isExternal":null,"lineNumber":6,"columnNumber":4}]},{"targetObj":{"name":"pop","typeFullName":"ANY","resolvedMethod":"Array<any>:pop","isExternal":true,"lineNumber":207,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"pop","typeFullName":"ANY","resolvedMethod":"Array<any>:pop","isExternal":true,"lineNumber":207,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/callbackify.js::program:anonymous:anonymous:anonymous","signature":"","fileName":"lib/helpers/callbackify.js","lineNumber":6,"columnNumber":30,"usages":[{"targetObj":{"name":"(value)","typeFullName":"ANY","lineNumber":6,"columnNumber":30,"label":"UNKNOWN"},"definedBy":{"name":"(value)","typeFullName":"ANY","lineNumber":6,"columnNumber":30,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":6,"columnNumber":31,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":6,"columnNumber":31,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"reducer","resolvedMethod":"reducer","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":8,"columnNumber":30},{"callName":"cb","resolvedMethod":"cb","paramTypes":["__ecma.Null","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":8,"columnNumber":48}]},{"targetObj":{"name":"cb","typeFullName":"ANY","resolvedMethod":"lib/helpers/callbackify.js::program:cb","isExternal":true,"lineNumber":10,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"cb","typeFullName":"ANY","resolvedMethod":"lib/helpers/callbackify.js::program:cb","isExternal":true,"lineNumber":10,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"reducer","typeFullName":"ANY","resolvedMethod":"lib/helpers/callbackify.js::program:reducer","isExternal":true,"lineNumber":8,"columnNumber":30,"label":"CALL"},"definedBy":{"name":"reducer","typeFullName":"ANY","resolvedMethod":"lib/helpers/callbackify.js::program:reducer","isExternal":true,"lineNumber":8,"columnNumber":30,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/callbackify.js::program:callbackify","signature":"","fileName":"lib/helpers/callbackify.js","lineNumber":3,"columnNumber":20,"usages":[{"targetObj":{"name":"callbackify","typeFullName":"ANY","resolvedMethod":"lib/helpers/callbackify.js::program:callbackify","isExternal":false,"lineNumber":179,"columnNumber":22,"label":"CALL"},"definedBy":{"name":"callbackify","typeFullName":"ANY","resolvedMethod":"lib/helpers/callbackify.js::program:callbackify","isExternal":false,"lineNumber":179,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"fn","typeFullName":"ANY","position":1,"lineNumber":3,"columnNumber":21,"label":"PARAM"},"definedBy":{"name":"fn","typeFullName":"ANY","position":1,"lineNumber":3,"columnNumber":21,"label":"PARAM"},"invokedCalls":[{"callName":"apply","resolvedMethod":"fn.apply","paramTypes":["lib/helpers/callbackify.js::program","Array<any>"],"returnType":"ANY","isExternal":null,"lineNumber":6,"columnNumber":4}],"argToCalls":[{"callName":"isAsyncFn","resolvedMethod":"utils.isAsyncFn","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":4,"columnNumber":9}]},{"targetObj":{"name":"isAsyncFn","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isAsyncFn","isExternal":true,"lineNumber":4,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"isAsyncFn","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isAsyncFn","isExternal":true,"lineNumber":4,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/combineURLs.js::program","signature":"","fileName":"lib/helpers/combineURLs.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/combineURLs.js::program:combineURLs","signature":"","fileName":"lib/helpers/combineURLs.js","lineNumber":11,"columnNumber":15,"usages":[{"targetObj":{"name":"combineURLs","typeFullName":"__ecma.String:<operator>.conditional:<returnValue>","resolvedMethod":"lib/helpers/combineURLs.js::program:combineURLs","isExternal":false,"lineNumber":18,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"combineURLs","typeFullName":"__ecma.String:<operator>.conditional:<returnValue>","resolvedMethod":"lib/helpers/combineURLs.js::program:combineURLs","isExternal":false,"lineNumber":18,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"baseURL","typeFullName":"__ecma.String","position":1,"lineNumber":11,"columnNumber":36,"label":"PARAM"},"definedBy":{"name":"baseURL","typeFullName":"__ecma.String","position":1,"lineNumber":11,"columnNumber":36,"label":"PARAM"},"invokedCalls":[{"callName":"replace","resolvedMethod":"baseURL.replace","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":13,"columnNumber":6}],"argToCalls":[]},{"targetObj":{"name":"relativeURL","typeFullName":"__ecma.String","position":2,"lineNumber":11,"columnNumber":45,"label":"PARAM"},"definedBy":{"name":"relativeURL","typeFullName":"__ecma.String","position":2,"lineNumber":11,"columnNumber":45,"label":"PARAM"},"invokedCalls":[{"callName":"replace","resolvedMethod":"relativeURL.replace","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":13,"columnNumber":44}],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/composeSignals.js::program","signature":"","fileName":"lib/helpers/composeSignals.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/composeSignals.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"asap","resolvedMethod":"utils.asap","paramTypes":["() => void"],"returnType":"ANY","isExternal":true,"lineNumber":42,"columnNumber":31}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/composeSignals.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/composeSignals.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/composeSignals.js::program:anonymous:anonymous1","signature":"","fileName":"lib/helpers/composeSignals.js","lineNumber":22,"columnNumber":38,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":22,"columnNumber":38,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":22,"columnNumber":38,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/composeSignals.js::program:anonymous:anonymous2:anonymous","signature":"","fileName":"lib/helpers/composeSignals.js","lineNumber":31,"columnNumber":24,"usages":[{"targetObj":{"name":"signal => { signal.unsubscribe ? signal.unsubscribe","typeFullName":"ANY","lineNumber":31,"columnNumber":24,"label":"UNKNOWN"},"definedBy":{"name":"signal => { signal.unsubscribe ? signal.unsubscribe","typeFullName":"ANY","lineNumber":31,"columnNumber":24,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"signal","typeFullName":"void","position":1,"lineNumber":31,"columnNumber":24,"label":"PARAM"},"definedBy":{"name":"signal","typeFullName":"void","position":1,"lineNumber":31,"columnNumber":24,"label":"PARAM"},"invokedCalls":[{"callName":"unsubscribe","resolvedMethod":"signal.unsubscribe","paramTypes":["(reason: ANY) => void"],"returnType":"ANY","isExternal":true,"lineNumber":32,"columnNumber":31},{"callName":"removeEventListener","resolvedMethod":"signal.removeEventListener","paramTypes":["__ecma.String","(reason: ANY) => void"],"returnType":"ANY","isExternal":true,"lineNumber":32,"columnNumber":61}],"argToCalls":[]},{"targetObj":{"name":"removeEventListener","typeFullName":"ANY","resolvedMethod":"void:removeEventListener","isExternal":true,"lineNumber":32,"columnNumber":61,"label":"CALL"},"definedBy":{"name":"removeEventListener","typeFullName":"ANY","resolvedMethod":"void:removeEventListener","isExternal":true,"lineNumber":32,"columnNumber":61,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/composeSignals.js::program:anonymous:anonymous3","signature":"","fileName":"lib/helpers/composeSignals.js","lineNumber":38,"columnNumber":20,"usages":[{"targetObj":{"name":"(signal)","typeFullName":"ANY","lineNumber":38,"columnNumber":20,"label":"UNKNOWN"},"definedBy":{"name":"(signal)","typeFullName":"ANY","lineNumber":38,"columnNumber":20,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"signal","typeFullName":"ANY","position":1,"lineNumber":38,"columnNumber":21,"label":"PARAM"},"definedBy":{"name":"signal","typeFullName":"ANY","position":1,"lineNumber":38,"columnNumber":21,"label":"PARAM"},"invokedCalls":[{"callName":"addEventListener","resolvedMethod":"signal.addEventListener","paramTypes":["__ecma.String","(reason: ANY) => void"],"returnType":"ANY","isExternal":true,"lineNumber":38,"columnNumber":32}],"argToCalls":[]},{"targetObj":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"void:addEventListener","isExternal":true,"lineNumber":38,"columnNumber":32,"label":"CALL"},"definedBy":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"void:addEventListener","isExternal":true,"lineNumber":38,"columnNumber":32,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/composeSignals.js::program:anonymous:anonymous4","signature":"","fileName":"lib/helpers/composeSignals.js","lineNumber":42,"columnNumber":25,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":42,"columnNumber":25,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":42,"columnNumber":25,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"asap","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:asap","isExternal":true,"lineNumber":44,"columnNumber":51,"label":"CALL"},"definedBy":{"name":"asap","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:asap","isExternal":true,"lineNumber":44,"columnNumber":51,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/composeSignals.js::program:anonymous:onabort","signature":"","fileName":"lib/helpers/composeSignals.js","lineNumber":13,"columnNumber":20,"usages":[{"targetObj":{"name":"onabort","typeFullName":"void","resolvedMethod":"lib/helpers/composeSignals.js::program:anonymous:onabort","isExternal":false,"lineNumber":24,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"onabort","typeFullName":"void","resolvedMethod":"lib/helpers/composeSignals.js::program:anonymous:onabort","isExternal":false,"lineNumber":24,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/composeSignals.js::program:anonymous:unsubscribe","signature":"","fileName":"lib/helpers/composeSignals.js","lineNumber":27,"columnNumber":24,"usages":[{"targetObj":{"name":"unsubscribe","typeFullName":"void","resolvedMethod":"lib/helpers/composeSignals.js::program:anonymous:unsubscribe","isExternal":false,"lineNumber":16,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"unsubscribe","typeFullName":"void","resolvedMethod":"lib/helpers/composeSignals.js::program:anonymous:unsubscribe","isExternal":false,"lineNumber":16,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"clearTimeout","typeFullName":"ANY","resolvedMethod":"lib/helpers/composeSignals.js::program:clearTimeout","isExternal":true,"lineNumber":29,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"clearTimeout","typeFullName":"ANY","resolvedMethod":"lib/helpers/composeSignals.js::program:clearTimeout","isExternal":true,"lineNumber":29,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"__ecma.Null:forEach","isExternal":true,"lineNumber":38,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"__ecma.Null:forEach","isExternal":true,"lineNumber":38,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/composeSignals.js::program:composeSignals","signature":"","fileName":"lib/helpers/composeSignals.js","lineNumber":5,"columnNumber":23,"usages":[{"targetObj":{"name":"controller","typeFullName":"__ecma.AbortController","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new AbortController","typeFullName":"AbortController","resolvedMethod":"AbortController","isExternal":null,"lineNumber":9,"columnNumber":21,"label":"CALL"},"invokedCalls":[{"callName":"CanceledError","resolvedMethod":"controller.abort","paramTypes":["ANY","LAMBDA"],"returnType":"lib/cancel/CanceledError.js::program:CanceledError","isExternal":true,"lineNumber":18,"columnNumber":8}],"argToCalls":[{"callName":"AbortController","resolvedMethod":"AbortController","paramTypes":[],"returnType":"AbortController","position":1,"isExternal":true,"lineNumber":9,"columnNumber":8}]},{"targetObj":{"name":"timeout","typeFullName":"ANY","position":2,"lineNumber":5,"columnNumber":33,"label":"PARAM"},"definedBy":{"name":"timeout","typeFullName":"ANY","position":2,"lineNumber":5,"columnNumber":33,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"setTimeout","resolvedMethod":"setTimeout","paramTypes":["LAMBDA","__ecma.Number"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":22,"columnNumber":27}]},{"targetObj":{"name":"filter","typeFullName":"ANY","resolvedMethod":"__ecma.Null:filter","isExternal":true,"lineNumber":6,"columnNumber":40,"label":"CALL"},"definedBy":{"name":"filter","typeFullName":"ANY","resolvedMethod":"__ecma.Null:filter","isExternal":true,"lineNumber":6,"columnNumber":40,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"signals","typeFullName":"ANY","position":1,"lineNumber":5,"columnNumber":24,"label":"PARAM"},"definedBy":{"name":"signals","typeFullName":"ANY","position":1,"lineNumber":5,"columnNumber":24,"label":"PARAM"},"invokedCalls":[{"callName":"filter","resolvedMethod":"signals.filter","paramTypes":["BooleanConstructor"],"returnType":"ANY","isExternal":true,"lineNumber":6,"columnNumber":40},{"callName":"forEach","resolvedMethod":"signals.forEach","paramTypes":["LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":31,"columnNumber":8},{"callName":"forEach","resolvedMethod":"signals.forEach","paramTypes":["LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":38,"columnNumber":4}],"argToCalls":[]},{"targetObj":{"name":"setTimeout","typeFullName":"ANY","resolvedMethod":"lib/helpers/composeSignals.js::program:setTimeout","isExternal":true,"lineNumber":22,"columnNumber":27,"label":"CALL"},"definedBy":{"name":"setTimeout","typeFullName":"ANY","resolvedMethod":"lib/helpers/composeSignals.js::program:setTimeout","isExternal":true,"lineNumber":22,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"composeSignals","typeFullName":"void","resolvedMethod":"lib/helpers/composeSignals.js::program:composeSignals","isExternal":false,"lineNumber":116,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"composeSignals","typeFullName":"void","resolvedMethod":"lib/helpers/composeSignals.js::program:composeSignals","isExternal":false,"lineNumber":116,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"timer","typeFullName":"__ecma.Null","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"timeout && setTimeout","typeFullName":"ANY","resolvedMethod":"<operator>.logicalAnd","isExternal":null,"lineNumber":22,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"clearTimeout","resolvedMethod":"clearTimeout","paramTypes":["__ecma.Null"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":29,"columnNumber":17}]}]},{"code":"","fullName":"lib/helpers/cookies.js::program","signature":"","fileName":"lib/helpers/cookies.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/cookies.js::program:require","isExternal":null,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"isNumber","resolvedMethod":"utils.isNumber","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":11,"columnNumber":6},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":13,"columnNumber":6},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":15,"columnNumber":6}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/cookies.js::program:require","isExternal":true,"lineNumber":2,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/cookies.js::program:require","isExternal":true,"lineNumber":2,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/cookies.js::program:read","signature":"","fileName":"lib/helpers/cookies.js","lineNumber":22,"columnNumber":4,"usages":[{"targetObj":{"name":"decodeURIComponent","typeFullName":"ANY","resolvedMethod":"decodeURIComponent","isExternal":true,"lineNumber":39,"columnNumber":31,"label":"CALL"},"definedBy":{"name":"decodeURIComponent","typeFullName":"ANY","resolvedMethod":"decodeURIComponent","isExternal":true,"lineNumber":39,"columnNumber":31,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"match","typeFullName":"ANY","resolvedMethod":"Array<string>:match","isExternal":true,"lineNumber":23,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"match","typeFullName":"ANY","resolvedMethod":"Array<string>:match","isExternal":true,"lineNumber":23,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"match","typeFullName":"ANY","resolvedMethod":"__ecma.Array:match","isExternal":true,"lineNumber":23,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"match","typeFullName":"ANY","resolvedMethod":"__ecma.Array:match","isExternal":true,"lineNumber":23,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"match","typeFullName":"RegExpMatchArray","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"document.cookie.match","typeFullName":"Array<string>:match","resolvedMethod":"document.cookie.match","isExternal":null,"lineNumber":23,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"RegExp","resolvedMethod":"document.cookie.match","paramTypes":["ANY"],"returnType":"RegExp","position":1,"isExternal":true,"lineNumber":23,"columnNumber":12}]},{"targetObj":{"name":"read(name)","typeFullName":"ANY","lineNumber":22,"columnNumber":4,"label":"UNKNOWN"},"definedBy":{"name":"read(name)","typeFullName":"ANY","lineNumber":22,"columnNumber":4,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/cookies.js::program:read1","signature":"","fileName":"lib/helpers/cookies.js","lineNumber":37,"columnNumber":4,"usages":[{"targetObj":{"name":"read()","typeFullName":"ANY","lineNumber":37,"columnNumber":4,"label":"UNKNOWN"},"definedBy":{"name":"read()","typeFullName":"ANY","lineNumber":37,"columnNumber":4,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/cookies.js::program:remove","signature":"","fileName":"lib/helpers/cookies.js","lineNumber":27,"columnNumber":4,"usages":[{"targetObj":{"name":"remove(name)","typeFullName":"ANY","lineNumber":27,"columnNumber":4,"label":"UNKNOWN"},"definedBy":{"name":"remove(name)","typeFullName":"ANY","lineNumber":27,"columnNumber":4,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"name","typeFullName":"ANY","position":1,"lineNumber":27,"columnNumber":11,"label":"PARAM"},"definedBy":{"name":"name","typeFullName":"ANY","position":1,"lineNumber":27,"columnNumber":11,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"write","resolvedMethod":"this.write","paramTypes":["__ecma.String","__ecma.String","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":28,"columnNumber":6}]}]},{"code":"","fullName":"lib/helpers/cookies.js::program:remove1","signature":"","fileName":"lib/helpers/cookies.js","lineNumber":40,"columnNumber":4,"usages":[{"targetObj":{"name":"remove()","typeFullName":"ANY","lineNumber":40,"columnNumber":4,"label":"UNKNOWN"},"definedBy":{"name":"remove()","typeFullName":"ANY","lineNumber":40,"columnNumber":4,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/cookies.js::program:write","signature":"","fileName":"lib/helpers/cookies.js","lineNumber":8,"columnNumber":4,"usages":[{"targetObj":{"name":"value","typeFullName":"ANY","position":2,"lineNumber":8,"columnNumber":16,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":2,"lineNumber":8,"columnNumber":16,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"encodeURIComponent","resolvedMethod":"encodeURIComponent","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":9,"columnNumber":35}]},{"targetObj":{"name":"write","typeFullName":"(name: ANY, value: ANY, expires: ANY, path: ANY, domain: ANY, secure: ANY) => void","resolvedMethod":"lib/helpers/cookies.js::program:write","isExternal":false,"lineNumber":28,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"write","typeFullName":"(name: ANY, value: ANY, expires: ANY, path: ANY, domain: ANY, secure: ANY) => void","resolvedMethod":"lib/helpers/cookies.js::program:write","isExternal":false,"lineNumber":28,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"domain","typeFullName":"ANY","position":5,"lineNumber":8,"columnNumber":38,"label":"PARAM"},"definedBy":{"name":"domain","typeFullName":"ANY","position":5,"lineNumber":8,"columnNumber":38,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":15,"columnNumber":6}]},{"targetObj":{"name":"expires","typeFullName":"ANY","position":3,"lineNumber":8,"columnNumber":23,"label":"PARAM"},"definedBy":{"name":"expires","typeFullName":"ANY","position":3,"lineNumber":8,"columnNumber":23,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isNumber","resolvedMethod":"utils.isNumber","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":11,"columnNumber":6}]},{"targetObj":{"name":"join","typeFullName":"ANY","resolvedMethod":"__ecma.Array:join","isExternal":true,"lineNumber":19,"columnNumber":24,"label":"CALL"},"definedBy":{"name":"join","typeFullName":"ANY","resolvedMethod":"__ecma.Array:join","isExternal":true,"lineNumber":19,"columnNumber":24,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"path","typeFullName":"ANY","position":4,"lineNumber":8,"columnNumber":32,"label":"PARAM"},"definedBy":{"name":"path","typeFullName":"ANY","position":4,"lineNumber":8,"columnNumber":32,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":13,"columnNumber":6}]},{"targetObj":{"name":"push","typeFullName":"ANY","resolvedMethod":"Array<string>:push","isExternal":true,"lineNumber":17,"columnNumber":25,"label":"CALL"},"definedBy":{"name":"push","typeFullName":"ANY","resolvedMethod":"Array<string>:push","isExternal":true,"lineNumber":17,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"join","typeFullName":"ANY","resolvedMethod":"Array<string>:join","isExternal":true,"lineNumber":19,"columnNumber":24,"label":"CALL"},"definedBy":{"name":"join","typeFullName":"ANY","resolvedMethod":"Array<string>:join","isExternal":true,"lineNumber":19,"columnNumber":24,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toGMTString","typeFullName":"ANY","resolvedMethod":"__ecma.Date:toGMTString","isExternal":true,"lineNumber":11,"columnNumber":58,"label":"CALL"},"definedBy":{"name":"toGMTString","typeFullName":"ANY","resolvedMethod":"__ecma.Date:toGMTString","isExternal":true,"lineNumber":11,"columnNumber":58,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isNumber","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isNumber","isExternal":true,"lineNumber":11,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"isNumber","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isNumber","isExternal":true,"lineNumber":11,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/cookies.js::program:write1","signature":"","fileName":"lib/helpers/cookies.js","lineNumber":36,"columnNumber":4,"usages":[{"targetObj":{"name":"write()","typeFullName":"ANY","lineNumber":36,"columnNumber":4,"label":"UNKNOWN"},"definedBy":{"name":"write()","typeFullName":"ANY","lineNumber":36,"columnNumber":4,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/deprecatedMethod.js::program","signature":"","fileName":"lib/helpers/deprecatedMethod.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/deprecatedMethod.js::program:deprecatedMethod","signature":"","fileName":"lib/helpers/deprecatedMethod.js","lineNumber":15,"columnNumber":15,"usages":[{"targetObj":{"name":"function deprecatedMethod(method, instead, docs)","typeFullName":"ANY","lineNumber":15,"columnNumber":15,"label":"UNKNOWN"},"definedBy":{"name":"function deprecatedMethod(method, instead, docs)","typeFullName":"ANY","lineNumber":15,"columnNumber":15,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/formDataToJSON.js::program","signature":"","fileName":"lib/helpers/formDataToJSON.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/formDataToJSON.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"matchAll","resolvedMethod":"utils.matchAll","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":17,"columnNumber":9},{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["object"],"returnType":"ANY","isExternal":true,"lineNumber":57,"columnNumber":20},{"callName":"hasOwnProp","resolvedMethod":"utils.hasOwnProp","paramTypes":["object","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":60,"columnNumber":10},{"callName":"isObject","resolvedMethod":"utils.isObject","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":69,"columnNumber":26},{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":75,"columnNumber":18},{"callName":"isFormData","resolvedMethod":"utils.isFormData","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":82,"columnNumber":6},{"callName":"isFunction","resolvedMethod":"utils.isFunction","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":82,"columnNumber":36},{"callName":"forEachEntry","resolvedMethod":"utils.forEachEntry","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":85,"columnNumber":4}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/formDataToJSON.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/formDataToJSON.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/formDataToJSON.js::program:arrayToObject","signature":"","fileName":"lib/helpers/formDataToJSON.js","lineNumber":29,"columnNumber":0,"usages":[{"targetObj":{"name":"arrayToObject","typeFullName":"object","resolvedMethod":"lib/helpers/formDataToJSON.js::program:arrayToObject","isExternal":false,"lineNumber":76,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"arrayToObject","typeFullName":"object","resolvedMethod":"lib/helpers/formDataToJSON.js::program:arrayToObject","isExternal":false,"lineNumber":76,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"arr","typeFullName":"Array<any>","position":1,"lineNumber":29,"columnNumber":23,"label":"PARAM"},"definedBy":{"name":"arr","typeFullName":"Array<any>","position":1,"lineNumber":29,"columnNumber":23,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"keys","resolvedMethod":"Object.keys","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":31,"columnNumber":15}]}]},{"code":"","fullName":"lib/helpers/formDataToJSON.js::program:formDataToJSON","signature":"","fileName":"lib/helpers/formDataToJSON.js","lineNumber":49,"columnNumber":0,"usages":[{"targetObj":{"name":"formDataToJSON","typeFullName":"object","resolvedMethod":"lib/helpers/formDataToJSON.js::program:formDataToJSON","isExternal":false,"lineNumber":54,"columnNumber":49,"label":"CALL"},"definedBy":{"name":"formDataToJSON","typeFullName":"object","resolvedMethod":"lib/helpers/formDataToJSON.js::program:formDataToJSON","isExternal":false,"lineNumber":54,"columnNumber":49,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"formData","typeFullName":"__ecma.String","position":1,"lineNumber":49,"columnNumber":24,"label":"PARAM"},"definedBy":{"name":"formData","typeFullName":"__ecma.String","position":1,"lineNumber":49,"columnNumber":24,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isFormData","resolvedMethod":"utils.isFormData","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":82,"columnNumber":6},{"callName":"forEachEntry","resolvedMethod":"utils.forEachEntry","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":85,"columnNumber":4}]},{"targetObj":{"name":"forEachEntry","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:forEachEntry","isExternal":true,"lineNumber":85,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"forEachEntry","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:forEachEntry","isExternal":true,"lineNumber":85,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/formDataToJSON.js::program:formDataToJSON:anonymous","signature":"","fileName":"lib/helpers/formDataToJSON.js","lineNumber":85,"columnNumber":33,"usages":[{"targetObj":{"name":"(name, value)","typeFullName":"ANY","lineNumber":85,"columnNumber":33,"label":"UNKNOWN"},"definedBy":{"name":"(name, value)","typeFullName":"ANY","lineNumber":85,"columnNumber":33,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"name","typeFullName":"ANY","position":1,"lineNumber":85,"columnNumber":34,"label":"PARAM"},"definedBy":{"name":"name","typeFullName":"ANY","position":1,"lineNumber":85,"columnNumber":34,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"parsePropPath","resolvedMethod":"parsePropPath","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":86,"columnNumber":16}]},{"targetObj":{"name":"value","typeFullName":"ANY","position":2,"lineNumber":85,"columnNumber":40,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":2,"lineNumber":85,"columnNumber":40,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"buildPath","resolvedMethod":"buildPath","paramTypes":["{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:matchAll:<returnValue>:map:<returnValue>","ANY","object","__ecma.Number"],"returnType":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:matchAll:<returnValue>:map:<returnValue>","position":2,"isExternal":false,"lineNumber":86,"columnNumber":6}]}]},{"code":"","fullName":"lib/helpers/formDataToJSON.js::program:formDataToJSON:buildPath","signature":"","fileName":"lib/helpers/formDataToJSON.js","lineNumber":50,"columnNumber":2,"usages":[{"targetObj":{"name":"value","typeFullName":"ANY","position":2,"lineNumber":50,"columnNumber":27,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":2,"lineNumber":50,"columnNumber":27,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"","resolvedMethod":"_tmp_2.push","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":61,"columnNumber":38},{"callName":"buildPath","resolvedMethod":"buildPath","paramTypes":["ANY","ANY","ANY","__ecma.Boolean"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":73,"columnNumber":19}]},{"targetObj":{"name":"buildPath","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/helpers/formDataToJSON.js::program:formDataToJSON:buildPath","isExternal":false,"lineNumber":86,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"buildPath","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/helpers/formDataToJSON.js::program:formDataToJSON:buildPath","isExternal":false,"lineNumber":86,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"path","typeFullName":"ANY","position":1,"lineNumber":50,"columnNumber":21,"label":"PARAM"},"definedBy":{"name":"path","typeFullName":"ANY","position":1,"lineNumber":50,"columnNumber":21,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"buildPath","resolvedMethod":"buildPath","paramTypes":["ANY","ANY","ANY","__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":73,"columnNumber":19}]},{"targetObj":{"name":"index","typeFullName":"ANY","position":4,"lineNumber":50,"columnNumber":42,"label":"PARAM"},"definedBy":{"name":"index","typeFullName":"ANY","position":4,"lineNumber":50,"columnNumber":42,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"buildPath","resolvedMethod":"buildPath","paramTypes":["ANY","ANY","ANY","__ecma.Boolean"],"returnType":"ANY","position":4,"isExternal":false,"lineNumber":73,"columnNumber":19}]},{"targetObj":{"name":"target","typeFullName":"ANY","position":3,"lineNumber":50,"columnNumber":34,"label":"PARAM"},"definedBy":{"name":"target","typeFullName":"ANY","position":3,"lineNumber":50,"columnNumber":34,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["object"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":57,"columnNumber":20},{"callName":"hasOwnProp","resolvedMethod":"utils.hasOwnProp","paramTypes":["object","__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":60,"columnNumber":10}]},{"targetObj":{"name":"name","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"!name && utils.isArray","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":null,"lineNumber":57,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"hasOwnProp","resolvedMethod":"utils.hasOwnProp","paramTypes":["object","__ecma.String"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":60,"columnNumber":10}]},{"targetObj":{"name":"hasOwnProp","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:hasOwnProp","isExternal":true,"lineNumber":60,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"hasOwnProp","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:hasOwnProp","isExternal":true,"lineNumber":60,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/formDataToJSON.js::program:parsePropPath","signature":"","fileName":"lib/helpers/formDataToJSON.js","lineNumber":12,"columnNumber":0,"usages":[{"targetObj":{"name":"parsePropPath","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:matchAll:<returnValue>:map:<returnValue>","resolvedMethod":"lib/helpers/formDataToJSON.js::program:parsePropPath","isExternal":false,"lineNumber":86,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"parsePropPath","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:matchAll:<returnValue>:map:<returnValue>","resolvedMethod":"lib/helpers/formDataToJSON.js::program:parsePropPath","isExternal":false,"lineNumber":86,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"name","typeFullName":"__ecma.String","position":1,"lineNumber":12,"columnNumber":23,"label":"PARAM"},"definedBy":{"name":"name","typeFullName":"__ecma.String","position":1,"lineNumber":12,"columnNumber":23,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"matchAll","resolvedMethod":"utils.matchAll","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":17,"columnNumber":9}]},{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:matchAll:<returnValue>:map","isExternal":true,"lineNumber":17,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:matchAll:<returnValue>:map","isExternal":true,"lineNumber":17,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"matchAll","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:matchAll","isExternal":true,"lineNumber":17,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"matchAll","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:matchAll","isExternal":true,"lineNumber":17,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/formDataToJSON.js::program:parsePropPath:anonymous","signature":"","fileName":"lib/helpers/formDataToJSON.js","lineNumber":17,"columnNumber":51,"usages":[{"targetObj":{"name":"match => { return match[0] === '[]' ? '' : match[1] || match[0]; }","typeFullName":"ANY","lineNumber":17,"columnNumber":51,"label":"UNKNOWN"},"definedBy":{"name":"match => { return match[0] === '[]' ? '' : match[1] || match[0]; }","typeFullName":"ANY","lineNumber":17,"columnNumber":51,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/formDataToStream.js::program","signature":"","fileName":"lib/helpers/formDataToStream.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/formDataToStream.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"generateString","resolvedMethod":"utils.generateString","paramTypes":["ANY","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":66,"columnNumber":27},{"callName":"isFormData","resolvedMethod":"utils.isFormData","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":69,"columnNumber":6},{"callName":"toFiniteNumber","resolvedMethod":"utils.toFiniteNumber","paramTypes":["{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFiniteNumber:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":89,"columnNumber":18}],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"BOUNDARY_ALPHABET","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"utils.ALPHABET.ALPHA_DIGIT + '-_'","typeFullName":"ANY","resolvedMethod":"<operator>.addition","isExternal":null,"lineNumber":6,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"generateString","resolvedMethod":"utils.generateString","paramTypes":["ANY","__ecma.String"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":66,"columnNumber":27}]},{"targetObj":{"name":"textEncoder","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"typeof TextEncoder === 'function' ? new TextEncoder","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":null,"lineNumber":8,"columnNumber":20,"label":"CALL"},"invokedCalls":[{"callName":"encode","resolvedMethod":"textEncoder.encode","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":11,"columnNumber":19},{"callName":"encode","resolvedMethod":"textEncoder.encode","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":77,"columnNumber":24},{"callName":"encode","resolvedMethod":"textEncoder.encode","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":78,"columnNumber":22}],"argToCalls":[{"callName":"TextEncoder","resolvedMethod":"TextEncoder","paramTypes":[],"returnType":"TextEncoder","position":1,"isExternal":true,"lineNumber":8,"columnNumber":6}]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/formDataToStream.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/formDataToStream.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"Readable","typeFullName":"stream:Readable","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"require(\"stream\").Readable","isExternal":null,"lineNumber":2,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"from","resolvedMethod":"Readable.from","paramTypes":["ANY"],"returnType":"AsyncGenerator<any, void, ANY>","isExternal":true,"lineNumber":101,"columnNumber":9}],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/formDataToStream.js::program:FormDataPart:<init>","signature":"","fileName":"lib/helpers/formDataToStream.js","lineNumber":15,"columnNumber":2,"usages":[{"targetObj":{"name":"<operator>.new","typeFullName":"lib/helpers/formDataToStream.js::program:FormDataPart:<init>","resolvedMethod":"lib/helpers/formDataToStream.js::program:FormDataPart:<init>","isExternal":false,"lineNumber":82,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"<operator>.new","typeFullName":"lib/helpers/formDataToStream.js::program:FormDataPart:<init>","resolvedMethod":"lib/helpers/formDataToStream.js::program:FormDataPart:<init>","isExternal":false,"lineNumber":82,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"String:<returnValue>:replace","isExternal":true,"lineNumber":222,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"String:<returnValue>:replace","isExternal":true,"lineNumber":222,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":2,"lineNumber":15,"columnNumber":20,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":2,"lineNumber":15,"columnNumber":20,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["lib/helpers/formDataToStream.js::program:<member>(value)"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":17,"columnNumber":26},{"callName":"String","resolvedMethod":"String","paramTypes":["lib/helpers/formDataToStream.js::program:<member>(value)"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":24,"columnNumber":33}]},{"targetObj":{"name":"encode","typeFullName":"ANY","resolvedMethod":"textEncoder.encode","isExternal":true,"lineNumber":11,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"encode","typeFullName":"ANY","resolvedMethod":"textEncoder.encode","isExternal":true,"lineNumber":11,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"name","typeFullName":"ANY","position":1,"lineNumber":15,"columnNumber":14,"label":"PARAM"},"definedBy":{"name":"name","typeFullName":"ANY","position":1,"lineNumber":15,"columnNumber":14,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"escapeName","resolvedMethod":"escapeName","paramTypes":["param1_0:name:<returnValue>:<member>(name)"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":19,"columnNumber":59}]}]},{"code":"","fullName":"lib/helpers/formDataToStream.js::program:FormDataPart:encode","signature":"","fileName":"lib/helpers/formDataToStream.js","lineNumber":39,"columnNumber":2,"usages":[{"targetObj":{"name":"encode","typeFullName":"AsyncGenerator<any, void, ANY>","resolvedMethod":"lib/helpers/formDataToStream.js::program:FormDataPart:encode","isExternal":false,"lineNumber":104,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"encode","typeFullName":"AsyncGenerator<any, void, ANY>","resolvedMethod":"lib/helpers/formDataToStream.js::program:FormDataPart:encode","isExternal":false,"lineNumber":104,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"lib/helpers/formDataToStream.js::program:<member>(value)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_4.value","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":42,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"isTypedArray","resolvedMethod":"utils.isTypedArray","paramTypes":["lib/helpers/formDataToStream.js::program:<member>(value)"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":44,"columnNumber":7},{"callName":"readBlob","resolvedMethod":"readBlob","paramTypes":["lib/helpers/formDataToStream.js::program:<member>(value)"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":47,"columnNumber":13}]},{"targetObj":{"name":"isTypedArray","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isTypedArray","isExternal":true,"lineNumber":127,"columnNumber":38,"label":"CALL"},"definedBy":{"name":"isTypedArray","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isTypedArray","isExternal":true,"lineNumber":127,"columnNumber":38,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/formDataToStream.js::program:FormDataPart:escapeName","signature":"","fileName":"lib/helpers/formDataToStream.js","lineNumber":53,"columnNumber":2,"usages":[{"targetObj":{"name":"escapeName","typeFullName":"__ecma.String","resolvedMethod":"lib/helpers/formDataToStream.js::program:FormDataPart:escapeName","isExternal":false,"lineNumber":20,"columnNumber":52,"label":"CALL"},"definedBy":{"name":"escapeName","typeFullName":"__ecma.String","resolvedMethod":"lib/helpers/formDataToStream.js::program:FormDataPart:escapeName","isExternal":false,"lineNumber":20,"columnNumber":52,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"name","typeFullName":"ANY","position":1,"lineNumber":53,"columnNumber":20,"label":"PARAM"},"definedBy":{"name":"name","typeFullName":"ANY","position":1,"lineNumber":53,"columnNumber":20,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"String","resolvedMethod":"String","paramTypes":["param1_0:name:<returnValue>:<member>(name)"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":54,"columnNumber":13}]}]},{"code":"","fullName":"lib/helpers/formDataToStream.js::program:FormDataPart:escapeName:anonymous","signature":"","fileName":"lib/helpers/formDataToStream.js","lineNumber":54,"columnNumber":46,"usages":[{"targetObj":{"name":"(match)","typeFullName":"ANY","lineNumber":54,"columnNumber":46,"label":"UNKNOWN"},"definedBy":{"name":"(match)","typeFullName":"ANY","lineNumber":54,"columnNumber":46,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/formDataToStream.js::program:anonymous:anonymous","signature":"","fileName":"lib/helpers/formDataToStream.js","lineNumber":81,"columnNumber":47,"usages":[{"targetObj":{"name":"([name, value])","typeFullName":"ANY","lineNumber":81,"columnNumber":47,"label":"UNKNOWN"},"definedBy":{"name":"([name, value])","typeFullName":"ANY","lineNumber":81,"columnNumber":47,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"part","typeFullName":"lib/helpers/formDataToStream.js::program:<member>(value)","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new FormDataPart","typeFullName":"lib/helpers/formDataToStream.js::program:FormDataPart","resolvedMethod":"lib/helpers/formDataToStream.js::program:FormDataPart","isExternal":null,"lineNumber":82,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"FormDataPart","resolvedMethod":"FormDataPart","paramTypes":["param1_0:name:<returnValue>:<member>(name)","lib/helpers/formDataToStream.js::program:<member>(value)"],"returnType":"lib/helpers/formDataToStream.js::program:FormDataPart","position":1,"isExternal":true,"lineNumber":82,"columnNumber":10}]}]},{"code":"","fullName":"lib/helpers/formDataToStream.js::program:anonymous:anonymous1","signature":"","fileName":"lib/helpers/formDataToStream.js","lineNumber":101,"columnNumber":24,"usages":[{"targetObj":{"name":"anonymous1","typeFullName":"ANY","resolvedMethod":"lib/helpers/formDataToStream.js::program:anonymous:anonymous1","isExternal":false,"lineNumber":101,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"anonymous1","typeFullName":"ANY","resolvedMethod":"lib/helpers/formDataToStream.js::program:anonymous:anonymous1","isExternal":false,"lineNumber":101,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/formDataToStream.js::program:formDataToStream","signature":"","fileName":"lib/helpers/formDataToStream.js","lineNumber":62,"columnNumber":25,"usages":[{"targetObj":{"name":"from","typeFullName":"ANY","resolvedMethod":"ArrayConstructor:from","isExternal":true,"lineNumber":81,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"from","typeFullName":"ANY","resolvedMethod":"ArrayConstructor:from","isExternal":true,"lineNumber":81,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"entries","typeFullName":"ANY","resolvedMethod":"form.entries","isExternal":true,"lineNumber":81,"columnNumber":27,"label":"CALL"},"definedBy":{"name":"entries","typeFullName":"ANY","resolvedMethod":"form.entries","isExternal":true,"lineNumber":81,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"headersHandler","typeFullName":"ANY","resolvedMethod":"lib/helpers/formDataToStream.js::program:headersHandler","isExternal":true,"lineNumber":99,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"headersHandler","typeFullName":"ANY","resolvedMethod":"lib/helpers/formDataToStream.js::program:headersHandler","isExternal":true,"lineNumber":99,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"from","typeFullName":"ANY","resolvedMethod":"stream:Readable:from","isExternal":true,"lineNumber":101,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"from","typeFullName":"ANY","resolvedMethod":"stream:Readable:from","isExternal":true,"lineNumber":101,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"size","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_8.size === void 0 ? 25 : _tmp_8.size","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":null,"lineNumber":65,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"generateString","resolvedMethod":"utils.generateString","paramTypes":["ANY","__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":66,"columnNumber":27}]},{"targetObj":{"name":"formDataToStream","typeFullName":"stream:Readable:from:<returnValue>","resolvedMethod":"lib/helpers/formDataToStream.js::program:formDataToStream","isExternal":false,"lineNumber":299,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"formDataToStream","typeFullName":"stream:Readable:from:<returnValue>","resolvedMethod":"lib/helpers/formDataToStream.js::program:formDataToStream","isExternal":false,"lineNumber":299,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"form","typeFullName":"ANY","position":1,"lineNumber":62,"columnNumber":26,"label":"PARAM"},"definedBy":{"name":"form","typeFullName":"ANY","position":1,"lineNumber":62,"columnNumber":26,"label":"PARAM"},"invokedCalls":[{"callName":"entries","resolvedMethod":"form.entries","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":81,"columnNumber":27}],"argToCalls":[{"callName":"isFormData","resolvedMethod":"utils.isFormData","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":69,"columnNumber":6}]},{"targetObj":{"name":"generateString","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:generateString","isExternal":true,"lineNumber":66,"columnNumber":27,"label":"CALL"},"definedBy":{"name":"generateString","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:generateString","isExternal":true,"lineNumber":66,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"ArrayConstructor:from:<returnValue>:map","isExternal":true,"lineNumber":81,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"ArrayConstructor:from:<returnValue>:map","isExternal":true,"lineNumber":81,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"contentLength","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFiniteNumber:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"utils.toFiniteNumber","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFiniteNumber","isExternal":null,"lineNumber":89,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"toFiniteNumber","resolvedMethod":"utils.toFiniteNumber","paramTypes":["{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFiniteNumber:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":89,"columnNumber":18},{"callName":"isFinite","resolvedMethod":"Number.isFinite","paramTypes":["{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFiniteNumber:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":95,"columnNumber":6}]}]},{"code":"","fullName":"lib/helpers/fromDataURI.js::program","signature":"","fileName":"lib/helpers/fromDataURI.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/fromDataURI.js::program:require","isExternal":true,"lineNumber":5,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/fromDataURI.js::program:require","isExternal":true,"lineNumber":5,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/fromDataURI.js::program:fromDataURI","signature":"","fileName":"lib/helpers/fromDataURI.js","lineNumber":19,"columnNumber":15,"usages":[{"targetObj":{"name":"fromDataURI","typeFullName":"ANY","resolvedMethod":"lib/helpers/fromDataURI.js::program:fromDataURI","isExternal":false,"lineNumber":248,"columnNumber":24,"label":"CALL"},"definedBy":{"name":"fromDataURI","typeFullName":"ANY","resolvedMethod":"lib/helpers/fromDataURI.js::program:fromDataURI","isExternal":false,"lineNumber":248,"columnNumber":24,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"uri","typeFullName":"__ecma.String","position":1,"lineNumber":19,"columnNumber":36,"label":"PARAM"},"definedBy":{"name":"uri","typeFullName":"__ecma.String","position":1,"lineNumber":19,"columnNumber":36,"label":"PARAM"},"invokedCalls":[{"callName":"slice","resolvedMethod":"uri.slice","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":28,"columnNumber":28}],"argToCalls":[{"callName":"parseProtocol","resolvedMethod":"parseProtocol","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":21,"columnNumber":19},{"callName":"exec","resolvedMethod":"DATA_URL_PATTERN.exec","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":30,"columnNumber":18}]},{"targetObj":{"name":"body","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"match[3]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":38,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"decodeURIComponent","resolvedMethod":"decodeURIComponent","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":39,"columnNumber":31}]},{"targetObj":{"name":"buffer","typeFullName":"Buffer.from:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"Buffer.from","typeFullName":"Buffer.from","resolvedMethod":"Buffer.from","isExternal":null,"lineNumber":39,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"","resolvedMethod":"_tmp_3.push","paramTypes":["Buffer.from:<returnValue>"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":46,"columnNumber":24}]}]},{"code":"","fullName":"lib/helpers/isAbsoluteURL.js::program","signature":"","fileName":"lib/helpers/isAbsoluteURL.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/isAbsoluteURL.js::program:isAbsoluteURL","signature":"","fileName":"lib/helpers/isAbsoluteURL.js","lineNumber":10,"columnNumber":15,"usages":[{"targetObj":{"name":"isAbsoluteURL","typeFullName":"__ecma.String:test:<returnValue>","resolvedMethod":"lib/helpers/isAbsoluteURL.js::program:isAbsoluteURL","isExternal":false,"lineNumber":17,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"isAbsoluteURL","typeFullName":"__ecma.String:test:<returnValue>","resolvedMethod":"lib/helpers/isAbsoluteURL.js::program:isAbsoluteURL","isExternal":false,"lineNumber":17,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"url","typeFullName":"__ecma.String","position":1,"lineNumber":10,"columnNumber":38,"label":"PARAM"},"definedBy":{"name":"url","typeFullName":"__ecma.String","position":1,"lineNumber":10,"columnNumber":38,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"test","resolvedMethod":"/^","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":14,"columnNumber":9}]}]},{"code":"","fullName":"lib/helpers/isAxiosError.js::program","signature":"","fileName":"lib/helpers/isAxiosError.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/isAxiosError.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"isObject","resolvedMethod":"utils.isObject","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":13,"columnNumber":9}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/isAxiosError.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/isAxiosError.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/isAxiosError.js::program:isAxiosError","signature":"","fileName":"lib/helpers/isAxiosError.js","lineNumber":12,"columnNumber":15,"usages":[{"targetObj":{"name":"function isAxiosError(payload)","typeFullName":"ANY","lineNumber":12,"columnNumber":15,"label":"UNKNOWN"},"definedBy":{"name":"function isAxiosError(payload)","typeFullName":"ANY","lineNumber":12,"columnNumber":15,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"payload","typeFullName":"ANY","position":1,"lineNumber":12,"columnNumber":37,"label":"PARAM"},"definedBy":{"name":"payload","typeFullName":"ANY","position":1,"lineNumber":12,"columnNumber":37,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isObject","resolvedMethod":"utils.isObject","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":13,"columnNumber":9}]}]},{"code":"","fullName":"lib/helpers/isURLSameOrigin.js::program","signature":"","fileName":"lib/helpers/isURLSameOrigin.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/isURLSameOrigin.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":56,"columnNumber":22}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/isURLSameOrigin.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/isURLSameOrigin.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/isURLSameOrigin.js::program:nonStandardBrowserEnv","signature":"","fileName":"lib/helpers/isURLSameOrigin.js","lineNumber":63,"columnNumber":3,"usages":[{"targetObj":{"name":"nonStandardBrowserEnv","typeFullName":"ANY","resolvedMethod":"lib/helpers/isURLSameOrigin.js::program:nonStandardBrowserEnv","isExternal":false,"lineNumber":63,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"nonStandardBrowserEnv","typeFullName":"ANY","resolvedMethod":"lib/helpers/isURLSameOrigin.js::program:nonStandardBrowserEnv","isExternal":false,"lineNumber":63,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/isURLSameOrigin.js::program:nonStandardBrowserEnv:isURLSameOrigin","signature":"","fileName":"lib/helpers/isURLSameOrigin.js","lineNumber":64,"columnNumber":11,"usages":[{"targetObj":{"name":"function isURLSameOrigin()","typeFullName":"ANY","lineNumber":64,"columnNumber":11,"label":"UNKNOWN"},"definedBy":{"name":"function isURLSameOrigin()","typeFullName":"ANY","lineNumber":64,"columnNumber":11,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/isURLSameOrigin.js::program:standardBrowserEnv","signature":"","fileName":"lib/helpers/isURLSameOrigin.js","lineNumber":10,"columnNumber":3,"usages":[{"targetObj":{"name":"standardBrowserEnv","typeFullName":"ANY","resolvedMethod":"lib/helpers/isURLSameOrigin.js::program:standardBrowserEnv","isExternal":false,"lineNumber":10,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"standardBrowserEnv","typeFullName":"ANY","resolvedMethod":"lib/helpers/isURLSameOrigin.js::program:standardBrowserEnv","isExternal":false,"lineNumber":10,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"urlParsingNode","typeFullName":"Document:createElement:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"document.createElement","typeFullName":"ANY","resolvedMethod":"Document:createElement","isExternal":null,"lineNumber":12,"columnNumber":27,"label":"CALL"},"invokedCalls":[{"callName":"setAttribute","resolvedMethod":"urlParsingNode.setAttribute","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":26,"columnNumber":8},{"callName":"setAttribute","resolvedMethod":"urlParsingNode.setAttribute","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":30,"columnNumber":6}],"argToCalls":[]},{"targetObj":{"name":"createElement","typeFullName":"ANY","resolvedMethod":"Document:createElement","isExternal":true,"lineNumber":12,"columnNumber":27,"label":"CALL"},"definedBy":{"name":"createElement","typeFullName":"ANY","resolvedMethod":"Document:createElement","isExternal":true,"lineNumber":12,"columnNumber":27,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/isURLSameOrigin.js::program:standardBrowserEnv:isURLSameOrigin","signature":"","fileName":"lib/helpers/isURLSameOrigin.js","lineNumber":55,"columnNumber":11,"usages":[{"targetObj":{"name":"function isURLSameOrigin(requestURL)","typeFullName":"ANY","lineNumber":55,"columnNumber":11,"label":"UNKNOWN"},"definedBy":{"name":"function isURLSameOrigin(requestURL)","typeFullName":"ANY","lineNumber":55,"columnNumber":11,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"requestURL","typeFullName":"__ecma.String","position":1,"lineNumber":55,"columnNumber":36,"label":"PARAM"},"definedBy":{"name":"requestURL","typeFullName":"__ecma.String","position":1,"lineNumber":55,"columnNumber":36,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":56,"columnNumber":22},{"callName":"resolveURL","resolvedMethod":"resolveURL","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":56,"columnNumber":52}]}]},{"code":"","fullName":"lib/helpers/isURLSameOrigin.js::program:standardBrowserEnv:resolveURL","signature":"","fileName":"lib/helpers/isURLSameOrigin.js","lineNumber":21,"columnNumber":4,"usages":[{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"HTMLAnchorElement:<member>(protocol):replace","isExternal":true,"lineNumber":35,"columnNumber":44,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"HTMLAnchorElement:<member>(protocol):replace","isExternal":true,"lineNumber":35,"columnNumber":44,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"resolveURL","typeFullName":"ANY","resolvedMethod":"lib/helpers/isURLSameOrigin.js::program:standardBrowserEnv:resolveURL","isExternal":false,"lineNumber":47,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"resolveURL","typeFullName":"ANY","resolvedMethod":"lib/helpers/isURLSameOrigin.js::program:standardBrowserEnv:resolveURL","isExternal":false,"lineNumber":47,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"setAttribute","typeFullName":"ANY","resolvedMethod":"HTMLAnchorElement:setAttribute","isExternal":true,"lineNumber":30,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"setAttribute","typeFullName":"ANY","resolvedMethod":"HTMLAnchorElement:setAttribute","isExternal":true,"lineNumber":30,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"HTMLAnchorElement:<member>(hash):replace","isExternal":true,"lineNumber":38,"columnNumber":36,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"HTMLAnchorElement:<member>(hash):replace","isExternal":true,"lineNumber":38,"columnNumber":36,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"setAttribute","typeFullName":"ANY","resolvedMethod":"Document:createElement:<returnValue>:setAttribute","isExternal":true,"lineNumber":30,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"setAttribute","typeFullName":"ANY","resolvedMethod":"Document:createElement:<returnValue>:setAttribute","isExternal":true,"lineNumber":30,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"HTMLAnchorElement:<member>(search):replace","isExternal":true,"lineNumber":37,"columnNumber":40,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"HTMLAnchorElement:<member>(search):replace","isExternal":true,"lineNumber":37,"columnNumber":40,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"charAt","typeFullName":"ANY","resolvedMethod":"HTMLAnchorElement:<member>(pathname):charAt","isExternal":true,"lineNumber":41,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"charAt","typeFullName":"ANY","resolvedMethod":"HTMLAnchorElement:<member>(pathname):charAt","isExternal":true,"lineNumber":41,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/null.js::program","signature":"","fileName":"lib/helpers/null.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/parseHeaders.js::program","signature":"","fileName":"lib/helpers/parseHeaders.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/parseHeaders.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"toObjectSet","resolvedMethod":"utils.toObjectSet","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":7,"columnNumber":26}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/parseHeaders.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/parseHeaders.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toObjectSet","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toObjectSet","isExternal":true,"lineNumber":7,"columnNumber":26,"label":"CALL"},"definedBy":{"name":"toObjectSet","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toObjectSet","isExternal":true,"lineNumber":7,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/parseHeaders.js::program:anonymous","signature":"","fileName":"lib/helpers/parseHeaders.js","lineNumber":28,"columnNumber":15,"usages":[{"targetObj":{"name":"rawHeaders => { const parsed = {}; let key; let val; let i; rawHeaders && rawHeaders.split","typeFullName":"ANY","lineNumber":28,"columnNumber":15,"label":"UNKNOWN"},"definedBy":{"name":"rawHeaders => { const parsed = {}; let key; let val; let i; rawHeaders && rawHeaders.split","typeFullName":"ANY","lineNumber":28,"columnNumber":15,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"rawHeaders","typeFullName":"__ecma.String","position":1,"lineNumber":28,"columnNumber":15,"label":"PARAM"},"definedBy":{"name":"rawHeaders","typeFullName":"__ecma.String","position":1,"lineNumber":28,"columnNumber":15,"label":"PARAM"},"invokedCalls":[{"callName":"split","resolvedMethod":"rawHeaders.split","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":34,"columnNumber":16}],"argToCalls":[]},{"targetObj":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"__ecma.String:split:<returnValue>:forEach","isExternal":true,"lineNumber":34,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"__ecma.String:split:<returnValue>:forEach","isExternal":true,"lineNumber":34,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"split","typeFullName":"ANY","resolvedMethod":"__ecma.String:split","isExternal":true,"lineNumber":34,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"split","typeFullName":"ANY","resolvedMethod":"__ecma.String:split","isExternal":true,"lineNumber":34,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/parseHeaders.js::program:anonymous:parser","signature":"","fileName":"lib/helpers/parseHeaders.js","lineNumber":34,"columnNumber":47,"usages":[{"targetObj":{"name":"val","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"line.substring","typeFullName":"ANY","resolvedMethod":"__ecma.String:substring:<returnValue>:trim","isExternal":null,"lineNumber":37,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"push","resolvedMethod":"parsed[key].push","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":45,"columnNumber":8},{"callName":"","resolvedMethod":"_tmp_7.push","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":47,"columnNumber":23}]},{"targetObj":{"name":"trim","typeFullName":"ANY","resolvedMethod":"__ecma.String:substring:<returnValue>:trim","isExternal":true,"lineNumber":37,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"trim","typeFullName":"ANY","resolvedMethod":"__ecma.String:substring:<returnValue>:trim","isExternal":true,"lineNumber":37,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"line","typeFullName":"__ecma.String","position":1,"lineNumber":34,"columnNumber":63,"label":"PARAM"},"definedBy":{"name":"line","typeFullName":"__ecma.String","position":1,"lineNumber":34,"columnNumber":63,"label":"PARAM"},"invokedCalls":[{"callName":"indexOf","resolvedMethod":"line.indexOf","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":35,"columnNumber":8},{"callName":"substring","resolvedMethod":"line.substring","paramTypes":["__ecma.Number","__ecma.String:indexOf:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":36,"columnNumber":10},{"callName":"substring","resolvedMethod":"line.substring","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":37,"columnNumber":10}],"argToCalls":[]},{"targetObj":{"name":"function parser(line)","typeFullName":"ANY","lineNumber":34,"columnNumber":47,"label":"UNKNOWN"},"definedBy":{"name":"function parser(line)","typeFullName":"ANY","lineNumber":34,"columnNumber":47,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"line.substring","isExternal":true,"lineNumber":36,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"line.substring","isExternal":true,"lineNumber":36,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"i","typeFullName":"__ecma.String:indexOf:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"line.indexOf","typeFullName":"ANY","resolvedMethod":"__ecma.String:indexOf","isExternal":null,"lineNumber":35,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"substring","resolvedMethod":"line.substring","paramTypes":["__ecma.Number","__ecma.String:indexOf:<returnValue>"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":36,"columnNumber":10}]},{"targetObj":{"name":"substring","typeFullName":"ANY","resolvedMethod":"__ecma.String:substring","isExternal":true,"lineNumber":37,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"substring","typeFullName":"ANY","resolvedMethod":"__ecma.String:substring","isExternal":true,"lineNumber":37,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/parseProtocol.js::program","signature":"","fileName":"lib/helpers/parseProtocol.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/parseProtocol.js::program:parseProtocol","signature":"","fileName":"lib/helpers/parseProtocol.js","lineNumber":3,"columnNumber":15,"usages":[{"targetObj":{"name":"parseProtocol","typeFullName":"ANY","resolvedMethod":"lib/helpers/parseProtocol.js::program:parseProtocol","isExternal":false,"lineNumber":21,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"parseProtocol","typeFullName":"ANY","resolvedMethod":"lib/helpers/parseProtocol.js::program:parseProtocol","isExternal":false,"lineNumber":21,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"url","typeFullName":"ANY","position":1,"lineNumber":3,"columnNumber":38,"label":"PARAM"},"definedBy":{"name":"url","typeFullName":"ANY","position":1,"lineNumber":3,"columnNumber":38,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"exec","resolvedMethod":"/^","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":4,"columnNumber":16}]}]},{"code":"","fullName":"lib/helpers/progressEventReducer.js::program","signature":"","fileName":"lib/helpers/progressEventReducer.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/progressEventReducer.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"asap","resolvedMethod":"utils.asap","paramTypes":["LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":44,"columnNumber":51}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/progressEventReducer.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/progressEventReducer.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/progressEventReducer.js::program:anonymous1:anonymous","signature":"","fileName":"lib/helpers/progressEventReducer.js","lineNumber":37,"columnNumber":10,"usages":[{"targetObj":{"name":"(loaded)","typeFullName":"ANY","lineNumber":37,"columnNumber":10,"label":"UNKNOWN"},"definedBy":{"name":"(loaded)","typeFullName":"ANY","lineNumber":37,"columnNumber":10,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"0","typeFullName":"ANY","resolvedMethod":"throttled[0]","isExternal":true,"lineNumber":37,"columnNumber":22,"label":"CALL"},"definedBy":{"name":"0","typeFullName":"ANY","resolvedMethod":"throttled[0]","isExternal":true,"lineNumber":37,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/progressEventReducer.js::program:anonymous2:anonymous","signature":"","fileName":"lib/helpers/progressEventReducer.js","lineNumber":44,"columnNumber":38,"usages":[{"targetObj":{"name":"(...args)","typeFullName":"ANY","lineNumber":44,"columnNumber":38,"label":"UNKNOWN"},"definedBy":{"name":"(...args)","typeFullName":"ANY","lineNumber":44,"columnNumber":38,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/progressEventReducer.js::program:anonymous2:anonymous:anonymous","signature":"","fileName":"lib/helpers/progressEventReducer.js","lineNumber":44,"columnNumber":62,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":44,"columnNumber":62,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":44,"columnNumber":62,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"fn","typeFullName":"ANY","resolvedMethod":"lib/helpers/progressEventReducer.js::program:fn","isExternal":true,"lineNumber":44,"columnNumber":68,"label":"CALL"},"definedBy":{"name":"fn","typeFullName":"ANY","resolvedMethod":"lib/helpers/progressEventReducer.js::program:fn","isExternal":true,"lineNumber":44,"columnNumber":68,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/progressEventReducer.js::program:anonymous:anonymous","signature":"","fileName":"lib/helpers/progressEventReducer.js","lineNumber":9,"columnNumber":18,"usages":[{"targetObj":{"name":"e => { const loaded = e.loaded; const total = e.lengthComputable ? e.total : undefined; const progressBytes = loaded - bytesNotified; const rate = _speedometer","typeFullName":"ANY","lineNumber":9,"columnNumber":18,"label":"UNKNOWN"},"definedBy":{"name":"e => { const loaded = e.loaded; const total = e.lengthComputable ? e.total : undefined; const progressBytes = loaded - bytesNotified; const rate = _speedometer","typeFullName":"ANY","lineNumber":9,"columnNumber":18,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"progressBytes","typeFullName":"__ecma.Number","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"loaded - bytesNotified","typeFullName":"ANY","resolvedMethod":"<operator>.subtraction","isExternal":null,"lineNumber":12,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"_speedometer","resolvedMethod":"_speedometer","paramTypes":["__ecma.Number"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":13,"columnNumber":17}]},{"targetObj":{"name":"_speedometer","typeFullName":"ANY","resolvedMethod":"lib/helpers/progressEventReducer.js::program:_speedometer","isExternal":true,"lineNumber":13,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"_speedometer","typeFullName":"ANY","resolvedMethod":"lib/helpers/progressEventReducer.js::program:_speedometer","isExternal":true,"lineNumber":13,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"listener","typeFullName":"ANY","resolvedMethod":"lib/helpers/progressEventReducer.js::program:listener","isExternal":true,"lineNumber":30,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"listener","typeFullName":"ANY","resolvedMethod":"lib/helpers/progressEventReducer.js::program:listener","isExternal":true,"lineNumber":30,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/progressEventReducer.js::program:asyncDecorator","signature":"","fileName":"lib/helpers/progressEventReducer.js","lineNumber":44,"columnNumber":30,"usages":[{"targetObj":{"name":"asyncDecorator","typeFullName":"ANY","resolvedMethod":"lib/helpers/progressEventReducer.js::program:asyncDecorator","isExternal":false,"lineNumber":370,"columnNumber":31,"label":"CALL"},"definedBy":{"name":"asyncDecorator","typeFullName":"ANY","resolvedMethod":"lib/helpers/progressEventReducer.js::program:asyncDecorator","isExternal":false,"lineNumber":370,"columnNumber":31,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/progressEventReducer.js::program:progressEventDecorator","signature":"","fileName":"lib/helpers/progressEventReducer.js","lineNumber":34,"columnNumber":38,"usages":[{"targetObj":{"name":"progressEventDecorator","typeFullName":"ANY","resolvedMethod":"lib/helpers/progressEventReducer.js::program:progressEventDecorator","isExternal":false,"lineNumber":368,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"progressEventDecorator","typeFullName":"ANY","resolvedMethod":"lib/helpers/progressEventReducer.js::program:progressEventDecorator","isExternal":false,"lineNumber":368,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"throttled","typeFullName":"ANY","position":2,"lineNumber":34,"columnNumber":46,"label":"PARAM"},"definedBy":{"name":"throttled","typeFullName":"ANY","position":2,"lineNumber":34,"columnNumber":46,"label":"PARAM"},"invokedCalls":[{"callName":"0","resolvedMethod":"throttled[0]","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":37,"columnNumber":22}],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/progressEventReducer.js::program:progressEventReducer","signature":"","fileName":"lib/helpers/progressEventReducer.js","lineNumber":5,"columnNumber":36,"usages":[{"targetObj":{"name":"progressEventReducer","typeFullName":"Function","resolvedMethod":"lib/helpers/progressEventReducer.js::program:progressEventReducer","isExternal":false,"lineNumber":161,"columnNumber":40,"label":"CALL"},"definedBy":{"name":"progressEventReducer","typeFullName":"Function","resolvedMethod":"lib/helpers/progressEventReducer.js::program:progressEventReducer","isExternal":false,"lineNumber":161,"columnNumber":40,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"freq","typeFullName":"__ecma.Number","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"freq === void 0 ? 3 : freq","typeFullName":"ANY","resolvedMethod":"<operator>.conditional","isExternal":null,"lineNumber":5,"columnNumber":65,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"throttle","resolvedMethod":"throttle","paramTypes":["LAMBDA","__ecma.Number"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":9,"columnNumber":9}]}]},{"code":"","fullName":"lib/helpers/readBlob.js::program","signature":"","fileName":"lib/helpers/readBlob.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/readBlob.js::program:readBlob","signature":"","fileName":"lib/helpers/readBlob.js","lineNumber":3,"columnNumber":17,"usages":[{"targetObj":{"name":"readBlob","typeFullName":"AsyncGenerator<any, void, ANY>","resolvedMethod":"lib/helpers/readBlob.js::program:readBlob","isExternal":false,"lineNumber":47,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"readBlob","typeFullName":"AsyncGenerator<any, void, ANY>","resolvedMethod":"lib/helpers/readBlob.js::program:readBlob","isExternal":false,"lineNumber":47,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"stream","typeFullName":"ANY","resolvedMethod":"blob.stream","isExternal":true,"lineNumber":5,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"stream","typeFullName":"ANY","resolvedMethod":"blob.stream","isExternal":true,"lineNumber":5,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"asyncIterator","typeFullName":"ANY","resolvedMethod":"blob[asyncIterator]","isExternal":true,"lineNumber":9,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"asyncIterator","typeFullName":"ANY","resolvedMethod":"blob[asyncIterator]","isExternal":true,"lineNumber":9,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"arrayBuffer","typeFullName":"ANY","resolvedMethod":"blob.arrayBuffer","isExternal":true,"lineNumber":7,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"arrayBuffer","typeFullName":"ANY","resolvedMethod":"blob.arrayBuffer","isExternal":true,"lineNumber":7,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"blob","typeFullName":"ANY","position":1,"lineNumber":3,"columnNumber":34,"label":"PARAM"},"definedBy":{"name":"blob","typeFullName":"ANY","position":1,"lineNumber":3,"columnNumber":34,"label":"PARAM"},"invokedCalls":[{"callName":"stream","resolvedMethod":"blob.stream","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":5,"columnNumber":11},{"callName":"arrayBuffer","resolvedMethod":"blob.arrayBuffer","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":7,"columnNumber":16},{"callName":"asyncIterator","resolvedMethod":"blob[asyncIterator]","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":9,"columnNumber":11}],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/speedometer.js::program","signature":"","fileName":"lib/helpers/speedometer.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/speedometer.js::program:speedometer","signature":"","fileName":"lib/helpers/speedometer.js","lineNumber":9,"columnNumber":0,"usages":[{"targetObj":{"name":"speedometer","typeFullName":"Function","resolvedMethod":"lib/helpers/speedometer.js::program:speedometer","isExternal":false,"lineNumber":7,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"speedometer","typeFullName":"Function","resolvedMethod":"lib/helpers/speedometer.js::program:speedometer","isExternal":false,"lineNumber":7,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"bytes","typeFullName":"__ecma.Array","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new Array","typeFullName":"ANY","resolvedMethod":null,"isExternal":null,"lineNumber":11,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"Array","resolvedMethod":"Array","paramTypes":["__ecma.Number"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":11,"columnNumber":8}]},{"targetObj":{"name":"timestamps","typeFullName":"__ecma.Array","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new Array","typeFullName":"ANY","resolvedMethod":null,"isExternal":null,"lineNumber":12,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"Array","resolvedMethod":"Array","paramTypes":["__ecma.Number"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":12,"columnNumber":8}]}]},{"code":"","fullName":"lib/helpers/speedometer.js::program:speedometer:push","signature":"","fileName":"lib/helpers/speedometer.js","lineNumber":19,"columnNumber":9,"usages":[{"targetObj":{"name":"function push(chunkLength)","typeFullName":"ANY","lineNumber":19,"columnNumber":9,"label":"UNKNOWN"},"definedBy":{"name":"function push(chunkLength)","typeFullName":"ANY","lineNumber":19,"columnNumber":9,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"round","typeFullName":"ANY","resolvedMethod":"__ecma.Math:round","isExternal":true,"lineNumber":51,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"round","typeFullName":"ANY","resolvedMethod":"__ecma.Math:round","isExternal":true,"lineNumber":51,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/spread.js::program","signature":"","fileName":"lib/helpers/spread.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/spread.js::program:spread","signature":"","fileName":"lib/helpers/spread.js","lineNumber":24,"columnNumber":15,"usages":[{"targetObj":{"name":"function spread(callback)","typeFullName":"ANY","lineNumber":24,"columnNumber":15,"label":"UNKNOWN"},"definedBy":{"name":"function spread(callback)","typeFullName":"ANY","lineNumber":24,"columnNumber":15,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"callback","typeFullName":"Function","position":1,"lineNumber":24,"columnNumber":31,"label":"PARAM"},"definedBy":{"name":"callback","typeFullName":"Function","position":1,"lineNumber":24,"columnNumber":31,"label":"PARAM"},"invokedCalls":[{"callName":"apply","resolvedMethod":"callback.apply","paramTypes":["__ecma.Null","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":26,"columnNumber":11}],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/spread.js::program:spread:wrap","signature":"","fileName":"lib/helpers/spread.js","lineNumber":25,"columnNumber":9,"usages":[{"targetObj":{"name":"function wrap(arr)","typeFullName":"ANY","lineNumber":25,"columnNumber":9,"label":"UNKNOWN"},"definedBy":{"name":"function wrap(arr)","typeFullName":"ANY","lineNumber":25,"columnNumber":9,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"arr","typeFullName":"ANY","position":1,"lineNumber":25,"columnNumber":23,"label":"PARAM"},"definedBy":{"name":"arr","typeFullName":"ANY","position":1,"lineNumber":25,"columnNumber":23,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"apply","resolvedMethod":"callback.apply","paramTypes":["__ecma.Null","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":26,"columnNumber":11}]},{"targetObj":{"name":"apply","typeFullName":"ANY","resolvedMethod":"Function:apply","isExternal":true,"lineNumber":20,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"apply","typeFullName":"ANY","resolvedMethod":"Function:apply","isExternal":true,"lineNumber":20,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/throttle.js::program","signature":"","fileName":"lib/helpers/throttle.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/throttle.js::program:throttle","signature":"","fileName":"lib/helpers/throttle.js","lineNumber":7,"columnNumber":0,"usages":[{"targetObj":{"name":"throttle","typeFullName":"Function","resolvedMethod":"lib/helpers/throttle.js::program:throttle","isExternal":false,"lineNumber":9,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"throttle","typeFullName":"Function","resolvedMethod":"lib/helpers/throttle.js::program:throttle","isExternal":false,"lineNumber":9,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"fn","typeFullName":"Function","position":1,"lineNumber":7,"columnNumber":18,"label":"PARAM"},"definedBy":{"name":"fn","typeFullName":"Function","position":1,"lineNumber":7,"columnNumber":18,"label":"PARAM"},"invokedCalls":[{"callName":"apply","resolvedMethod":"fn.apply","paramTypes":["__ecma.Null","Array<any>"],"returnType":"ANY","isExternal":true,"lineNumber":20,"columnNumber":4}],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/throttle.js::program:throttle:anonymous1:anonymous","signature":"","fileName":"lib/helpers/throttle.js","lineNumber":31,"columnNumber":27,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":31,"columnNumber":27,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":31,"columnNumber":27,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/throttle.js::program:throttle:flush","signature":"","fileName":"lib/helpers/throttle.js","lineNumber":39,"columnNumber":16,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":39,"columnNumber":16,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":39,"columnNumber":16,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/throttle.js::program:throttle:invoke","signature":"","fileName":"lib/helpers/throttle.js","lineNumber":13,"columnNumber":17,"usages":[{"targetObj":{"name":"invoke","typeFullName":"void","resolvedMethod":"lib/helpers/throttle.js::program:throttle:invoke","isExternal":false,"lineNumber":39,"columnNumber":34,"label":"CALL"},"definedBy":{"name":"invoke","typeFullName":"void","resolvedMethod":"lib/helpers/throttle.js::program:throttle:invoke","isExternal":false,"lineNumber":39,"columnNumber":34,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"args","typeFullName":"ANY","position":1,"lineNumber":13,"columnNumber":18,"label":"PARAM"},"definedBy":{"name":"args","typeFullName":"ANY","position":1,"lineNumber":13,"columnNumber":18,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"apply","resolvedMethod":"fn.apply","paramTypes":["__ecma.Null","Array<any>"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":20,"columnNumber":4}]},{"targetObj":{"name":"clearTimeout","typeFullName":"ANY","resolvedMethod":"lib/helpers/throttle.js::program:clearTimeout","isExternal":true,"lineNumber":17,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"clearTimeout","typeFullName":"ANY","resolvedMethod":"lib/helpers/throttle.js::program:clearTimeout","isExternal":true,"lineNumber":17,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/throttle.js::program:throttle:throttled","signature":"","fileName":"lib/helpers/throttle.js","lineNumber":23,"columnNumber":20,"usages":[{"targetObj":{"name":"(...args)","typeFullName":"ANY","lineNumber":23,"columnNumber":20,"label":"UNKNOWN"},"definedBy":{"name":"(...args)","typeFullName":"ANY","lineNumber":23,"columnNumber":20,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"now","typeFullName":"DateConstructor:now:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"Date.now","typeFullName":"ANY","resolvedMethod":"DateConstructor:now","isExternal":null,"lineNumber":24,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"invoke","resolvedMethod":"invoke","paramTypes":["Array<any>","DateConstructor:now:<returnValue>"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":27,"columnNumber":6}]},{"targetObj":{"name":"setTimeout","typeFullName":"ANY","resolvedMethod":"lib/helpers/throttle.js::program:setTimeout","isExternal":true,"lineNumber":31,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"setTimeout","typeFullName":"ANY","resolvedMethod":"lib/helpers/throttle.js::program:setTimeout","isExternal":true,"lineNumber":31,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/toFormData.js::program","signature":"","fileName":"lib/helpers/toFormData.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/toFormData.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"isPlainObject","resolvedMethod":"utils.isPlainObject","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":16,"columnNumber":9},{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":16,"columnNumber":39},{"callName":"endsWith","resolvedMethod":"utils.endsWith","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":27,"columnNumber":9},{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toArray:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":56,"columnNumber":9},{"callName":"toFlatObject","resolvedMethod":"utils.toFlatObject","paramTypes":["{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","ANY","__ecma.Null","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":59,"columnNumber":19},{"callName":"isObject","resolvedMethod":"utils.isObject","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":87,"columnNumber":7},{"callName":"toFlatObject","resolvedMethod":"utils.toFlatObject","paramTypes":["{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFlatObject:<returnValue>","ANY","__ecma.Boolean","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":95,"columnNumber":12},{"callName":"isUndefined","resolvedMethod":"utils.isUndefined","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":101,"columnNumber":12},{"callName":"isSpecCompliantForm","resolvedMethod":"utils.isSpecCompliantForm","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":110,"columnNumber":27},{"callName":"isFunction","resolvedMethod":"utils.isFunction","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":112,"columnNumber":7},{"callName":"isDate","resolvedMethod":"utils.isDate","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":119,"columnNumber":8},{"callName":"isBlob","resolvedMethod":"utils.isBlob","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":123,"columnNumber":20},{"callName":"isArrayBuffer","resolvedMethod":"utils.isArrayBuffer","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":127,"columnNumber":8},{"callName":"isTypedArray","resolvedMethod":"utils.isTypedArray","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":127,"columnNumber":38},{"callName":"endsWith","resolvedMethod":"utils.endsWith","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":148,"columnNumber":10},{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":154,"columnNumber":9},{"callName":"isFileList","resolvedMethod":"utils.isFileList","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":155,"columnNumber":10},{"callName":"endsWith","resolvedMethod":"utils.endsWith","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":155,"columnNumber":37},{"callName":"toArray","resolvedMethod":"utils.toArray","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":155,"columnNumber":74},{"callName":"isUndefined","resolvedMethod":"utils.isUndefined","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":161,"columnNumber":12},{"callName":"isUndefined","resolvedMethod":"utils.isUndefined","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":189,"columnNumber":8},{"callName":"forEach","resolvedMethod":"utils.forEach","paramTypes":["JSON.stringify:<returnValue>","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":197,"columnNumber":4},{"callName":"isUndefined","resolvedMethod":"utils.isUndefined","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":198,"columnNumber":23},{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":199,"columnNumber":22},{"callName":"isObject","resolvedMethod":"utils.isObject","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":210,"columnNumber":7}],"argToCalls":[]},{"targetObj":{"name":"predicates","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFlatObject:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"utils.toFlatObject","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFlatObject","isExternal":null,"lineNumber":59,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"assign","resolvedMethod":"Object.assign","paramTypes":["{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFlatObject:<returnValue>","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":182,"columnNumber":25}]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/toFormData.js::program:require","isExternal":true,"lineNumber":6,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/toFormData.js::program:require","isExternal":true,"lineNumber":6,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/toFormData.js::program:filter","signature":"","fileName":"lib/helpers/toFormData.js","lineNumber":59,"columnNumber":55,"usages":[{"targetObj":{"name":"function filter(prop)","typeFullName":"ANY","lineNumber":59,"columnNumber":55,"label":"UNKNOWN"},"definedBy":{"name":"function filter(prop)","typeFullName":"ANY","lineNumber":59,"columnNumber":55,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"prop","typeFullName":"ANY","position":1,"lineNumber":59,"columnNumber":71,"label":"PARAM"},"definedBy":{"name":"prop","typeFullName":"ANY","position":1,"lineNumber":59,"columnNumber":71,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"test","resolvedMethod":"/^is[A-Z]/.test","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":60,"columnNumber":9}]}]},{"code":"","fullName":"lib/helpers/toFormData.js::program:isFlatArray","signature":"","fileName":"lib/helpers/toFormData.js","lineNumber":55,"columnNumber":0,"usages":[{"targetObj":{"name":"isFlatArray","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/helpers/toFormData.js::program:isFlatArray","isExternal":false,"lineNumber":154,"columnNumber":33,"label":"CALL"},"definedBy":{"name":"isFlatArray","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/helpers/toFormData.js::program:isFlatArray","isExternal":false,"lineNumber":154,"columnNumber":33,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"arr","typeFullName":"Array<any>","position":1,"lineNumber":55,"columnNumber":21,"label":"PARAM"},"definedBy":{"name":"arr","typeFullName":"Array<any>","position":1,"lineNumber":55,"columnNumber":21,"label":"PARAM"},"invokedCalls":[{"callName":"some","resolvedMethod":"arr.some","paramTypes":["lib/helpers/toFormData.js::program:isVisitable","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":56,"columnNumber":32}],"argToCalls":[{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toArray:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":56,"columnNumber":9}]},{"targetObj":{"name":"some","typeFullName":"ANY","resolvedMethod":"Array<any>:some","isExternal":true,"lineNumber":56,"columnNumber":32,"label":"CALL"},"definedBy":{"name":"some","typeFullName":"ANY","resolvedMethod":"Array<any>:some","isExternal":true,"lineNumber":56,"columnNumber":32,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"some","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toArray:<returnValue>:some","isExternal":true,"lineNumber":56,"columnNumber":32,"label":"CALL"},"definedBy":{"name":"some","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toArray:<returnValue>:some","isExternal":true,"lineNumber":56,"columnNumber":32,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/toFormData.js::program:isVisitable","signature":"","fileName":"lib/helpers/toFormData.js","lineNumber":15,"columnNumber":0,"usages":[{"targetObj":{"name":"isVisitable","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/helpers/toFormData.js::program:isVisitable","isExternal":false,"lineNumber":171,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"isVisitable","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/helpers/toFormData.js::program:isVisitable","isExternal":false,"lineNumber":171,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"thing","typeFullName":"__ecma.String","position":1,"lineNumber":15,"columnNumber":21,"label":"PARAM"},"definedBy":{"name":"thing","typeFullName":"__ecma.String","position":1,"lineNumber":15,"columnNumber":21,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isPlainObject","resolvedMethod":"utils.isPlainObject","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":16,"columnNumber":9},{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":16,"columnNumber":39}]}]},{"code":"","fullName":"lib/helpers/toFormData.js::program:removeBrackets","signature":"","fileName":"lib/helpers/toFormData.js","lineNumber":26,"columnNumber":0,"usages":[{"targetObj":{"name":"removeBrackets","typeFullName":"__ecma.String","resolvedMethod":"lib/helpers/toFormData.js::program:removeBrackets","isExternal":false,"lineNumber":158,"columnNumber":14,"label":"CALL"},"definedBy":{"name":"removeBrackets","typeFullName":"__ecma.String","resolvedMethod":"lib/helpers/toFormData.js::program:removeBrackets","isExternal":false,"lineNumber":158,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"key","typeFullName":"__ecma.String","position":1,"lineNumber":26,"columnNumber":24,"label":"PARAM"},"definedBy":{"name":"key","typeFullName":"__ecma.String","position":1,"lineNumber":26,"columnNumber":24,"label":"PARAM"},"invokedCalls":[{"callName":"slice","resolvedMethod":"key.slice","paramTypes":["__ecma.Number","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":27,"columnNumber":37}],"argToCalls":[{"callName":"endsWith","resolvedMethod":"utils.endsWith","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":27,"columnNumber":9}]},{"targetObj":{"name":"endsWith","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:endsWith","isExternal":true,"lineNumber":155,"columnNumber":37,"label":"CALL"},"definedBy":{"name":"endsWith","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:endsWith","isExternal":true,"lineNumber":155,"columnNumber":37,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"slice","typeFullName":"ANY","resolvedMethod":"string | __ecma.Number:slice","isExternal":true,"lineNumber":150,"columnNumber":33,"label":"CALL"},"definedBy":{"name":"slice","typeFullName":"ANY","resolvedMethod":"string | __ecma.Number:slice","isExternal":true,"lineNumber":150,"columnNumber":33,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/toFormData.js::program:renderKey","signature":"","fileName":"lib/helpers/toFormData.js","lineNumber":39,"columnNumber":0,"usages":[{"targetObj":{"name":"renderKey","typeFullName":"string | __ecma.Number","resolvedMethod":"lib/helpers/toFormData.js::program:renderKey","isExternal":false,"lineNumber":175,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"renderKey","typeFullName":"string | __ecma.Number","resolvedMethod":"lib/helpers/toFormData.js::program:renderKey","isExternal":false,"lineNumber":175,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"concat","typeFullName":"ANY","resolvedMethod":"Array<string | __ecma.Number>:concat","isExternal":true,"lineNumber":203,"columnNumber":25,"label":"CALL"},"definedBy":{"name":"concat","typeFullName":"ANY","resolvedMethod":"Array<string | __ecma.Number>:concat","isExternal":true,"lineNumber":203,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"path","typeFullName":"__ecma.String","position":1,"lineNumber":39,"columnNumber":19,"label":"PARAM"},"definedBy":{"name":"path","typeFullName":"__ecma.String","position":1,"lineNumber":39,"columnNumber":19,"label":"PARAM"},"invokedCalls":[{"callName":"concat","resolvedMethod":"path.concat","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":41,"columnNumber":9}],"argToCalls":[]},{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"Array<string | __ecma.Number>:concat:<returnValue>:map","isExternal":true,"lineNumber":41,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"Array<string | __ecma.Number>:concat:<returnValue>:map","isExternal":true,"lineNumber":41,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"join","typeFullName":"ANY","resolvedMethod":"path.concat","isExternal":true,"lineNumber":41,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"join","typeFullName":"ANY","resolvedMethod":"path.concat","isExternal":true,"lineNumber":41,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"key","typeFullName":"__ecma.String","position":2,"lineNumber":39,"columnNumber":25,"label":"PARAM"},"definedBy":{"name":"key","typeFullName":"__ecma.String","position":2,"lineNumber":39,"columnNumber":25,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"concat","resolvedMethod":"path.concat","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":41,"columnNumber":9}]}]},{"code":"","fullName":"lib/helpers/toFormData.js::program:renderKey:each","signature":"","fileName":"lib/helpers/toFormData.js","lineNumber":41,"columnNumber":30,"usages":[{"targetObj":{"name":"function each(token, i)","typeFullName":"ANY","lineNumber":41,"columnNumber":30,"label":"UNKNOWN"},"definedBy":{"name":"function each(token, i)","typeFullName":"ANY","lineNumber":41,"columnNumber":30,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"token","typeFullName":"ANY","position":1,"lineNumber":41,"columnNumber":44,"label":"PARAM"},"definedBy":{"name":"token","typeFullName":"ANY","position":1,"lineNumber":41,"columnNumber":44,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"removeBrackets","resolvedMethod":"removeBrackets","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":43,"columnNumber":12}]}]},{"code":"","fullName":"lib/helpers/toFormData.js::program:toFormData","signature":"","fileName":"lib/helpers/toFormData.js","lineNumber":86,"columnNumber":0,"usages":[{"targetObj":{"name":"visitor","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"options.visitor || defaultVisitor","typeFullName":"ANY","resolvedMethod":"<operator>.logicalOr","isExternal":null,"lineNumber":106,"columnNumber":18,"label":"CALL"},"invokedCalls":[{"callName":"call","resolvedMethod":"visitor.call","paramTypes":["__ecma.String","__ecma.Boolean","ANY","Array<string | __ecma.Number>","Object.assign:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":198,"columnNumber":64}],"argToCalls":[{"callName":"isFunction","resolvedMethod":"utils.isFunction","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":112,"columnNumber":7}]},{"targetObj":{"name":"stack","typeFullName":"__ecma.Array","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"__ecma.Array.factory","typeFullName":"__ecma.Array.factory","resolvedMethod":"__ecma.Array.factory","isExternal":null,"lineNumber":180,"columnNumber":16,"label":"CALL"},"invokedCalls":[{"callName":"indexOf","resolvedMethod":"stack.indexOf","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":191,"columnNumber":8},{"callName":"push","resolvedMethod":"stack.push","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":195,"columnNumber":4},{"callName":"pop","resolvedMethod":"stack.pop","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":207,"columnNumber":4}],"argToCalls":[]},{"targetObj":{"name":"toFormData","typeFullName":"__ecma.String","resolvedMethod":"lib/helpers/toFormData.js::program:toFormData","isExternal":false,"lineNumber":8,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"toFormData","typeFullName":"__ecma.String","resolvedMethod":"lib/helpers/toFormData.js::program:toFormData","isExternal":false,"lineNumber":8,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":86,"columnNumber":20,"label":"PARAM"},"definedBy":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":86,"columnNumber":20,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isObject","resolvedMethod":"utils.isObject","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":87,"columnNumber":7},{"callName":"isObject","resolvedMethod":"utils.isObject","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":210,"columnNumber":7},{"callName":"build","resolvedMethod":"build","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":214,"columnNumber":2}]},{"targetObj":{"name":"formData","typeFullName":"__ecma.String","position":2,"lineNumber":86,"columnNumber":25,"label":"PARAM"},"definedBy":{"name":"formData","typeFullName":"__ecma.String","position":2,"lineNumber":86,"columnNumber":25,"label":"PARAM"},"invokedCalls":[{"callName":"append","resolvedMethod":"formData.append","paramTypes":["ANY","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":161,"columnNumber":53},{"callName":"append","resolvedMethod":"formData.append","paramTypes":["string | __ecma.Number","ANY"],"returnType":"string | __ecma.Number","isExternal":true,"lineNumber":175,"columnNumber":4}],"argToCalls":[{"callName":"formData = formData || new ","resolvedMethod":"new","paramTypes":[],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":92,"columnNumber":2},{"callName":"isSpecCompliantForm","resolvedMethod":"utils.isSpecCompliantForm","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":110,"columnNumber":27},{"callName":"call","resolvedMethod":"visitor.call","paramTypes":["__ecma.String","__ecma.Boolean","ANY","Array<string | __ecma.Number>","Object.assign:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":198,"columnNumber":64}]},{"targetObj":{"name":"options","typeFullName":"{ [x: __ecma.String]: ANY; }","position":3,"lineNumber":86,"columnNumber":35,"label":"PARAM"},"definedBy":{"name":"options","typeFullName":"{ [x: __ecma.String]: ANY; }","position":3,"lineNumber":86,"columnNumber":35,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"toFlatObject","resolvedMethod":"utils.toFlatObject","paramTypes":["{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toFlatObject:<returnValue>","ANY","__ecma.Boolean","LAMBDA"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":95,"columnNumber":12}]},{"targetObj":{"name":"exposedHelpers","typeFullName":"Object.assign:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"Object.assign","typeFullName":"Object.assign","resolvedMethod":"Object.assign","isExternal":null,"lineNumber":182,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"visitor.call","paramTypes":["__ecma.String","__ecma.Boolean","ANY","Array<string | __ecma.Number>","Object.assign:<returnValue>"],"returnType":"ANY","position":5,"isExternal":true,"lineNumber":198,"columnNumber":64}]},{"targetObj":{"name":"dots","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"options.dots","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":107,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"renderKey","resolvedMethod":"renderKey","paramTypes":["ANY","ANY","__ecma.String"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":163,"columnNumber":31},{"callName":"renderKey","resolvedMethod":"renderKey","paramTypes":["Array<string | __ecma.Number>","__ecma.String","__ecma.String"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":175,"columnNumber":20}]}]},{"code":"","fullName":"lib/helpers/toFormData.js::program:toFormData:build","signature":"","fileName":"lib/helpers/toFormData.js","lineNumber":188,"columnNumber":2,"usages":[{"targetObj":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":188,"columnNumber":17,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":188,"columnNumber":17,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isUndefined","resolvedMethod":"utils.isUndefined","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":189,"columnNumber":8},{"callName":"indexOf","resolvedMethod":"stack.indexOf","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":191,"columnNumber":8},{"callName":"push","resolvedMethod":"stack.push","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":195,"columnNumber":4},{"callName":"forEach","resolvedMethod":"utils.forEach","paramTypes":["JSON.stringify:<returnValue>","LAMBDA"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":197,"columnNumber":4}]},{"targetObj":{"name":"join","typeFullName":"ANY","resolvedMethod":"Array<string | __ecma.Number>:join","isExternal":true,"lineNumber":192,"columnNumber":54,"label":"CALL"},"definedBy":{"name":"join","typeFullName":"ANY","resolvedMethod":"Array<string | __ecma.Number>:join","isExternal":true,"lineNumber":192,"columnNumber":54,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"build","typeFullName":"void","resolvedMethod":"lib/helpers/toFormData.js::program:toFormData:build","isExternal":false,"lineNumber":214,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"build","typeFullName":"void","resolvedMethod":"lib/helpers/toFormData.js::program:toFormData:build","isExternal":false,"lineNumber":214,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"pop","typeFullName":"ANY","resolvedMethod":"__ecma.Array:pop","isExternal":true,"lineNumber":207,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"pop","typeFullName":"ANY","resolvedMethod":"__ecma.Array:pop","isExternal":true,"lineNumber":207,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"path","typeFullName":"ANY","position":2,"lineNumber":188,"columnNumber":24,"label":"PARAM"},"definedBy":{"name":"path","typeFullName":"ANY","position":2,"lineNumber":188,"columnNumber":24,"label":"PARAM"},"invokedCalls":[{"callName":"join","resolvedMethod":"path.join","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":192,"columnNumber":54},{"callName":"concat","resolvedMethod":"path.concat","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":203,"columnNumber":25}],"argToCalls":[{"callName":"call","resolvedMethod":"visitor.call","paramTypes":["__ecma.String","__ecma.Boolean","ANY","Array<string | __ecma.Number>","Object.assign:<returnValue>"],"returnType":"ANY","position":4,"isExternal":true,"lineNumber":198,"columnNumber":64}]}]},{"code":"","fullName":"lib/helpers/toFormData.js::program:toFormData:build:each","signature":"","fileName":"lib/helpers/toFormData.js","lineNumber":197,"columnNumber":25,"usages":[{"targetObj":{"name":"function each(el, key)","typeFullName":"ANY","lineNumber":197,"columnNumber":25,"label":"UNKNOWN"},"definedBy":{"name":"function each(el, key)","typeFullName":"ANY","lineNumber":197,"columnNumber":25,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"trim","typeFullName":"ANY","resolvedMethod":"string | __ecma.Number:trim","isExternal":true,"lineNumber":199,"columnNumber":44,"label":"CALL"},"definedBy":{"name":"trim","typeFullName":"ANY","resolvedMethod":"string | __ecma.Number:trim","isExternal":true,"lineNumber":199,"columnNumber":44,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"el","typeFullName":"ANY","position":1,"lineNumber":197,"columnNumber":39,"label":"PARAM"},"definedBy":{"name":"el","typeFullName":"ANY","position":1,"lineNumber":197,"columnNumber":39,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isUndefined","resolvedMethod":"utils.isUndefined","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":198,"columnNumber":23},{"callName":"call","resolvedMethod":"visitor.call","paramTypes":["__ecma.String","__ecma.Boolean","ANY","Array<string | __ecma.Number>","Object.assign:<returnValue>"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":198,"columnNumber":64},{"callName":"build","resolvedMethod":"build","paramTypes":["__ecma.Boolean","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":203,"columnNumber":8}]},{"targetObj":{"name":"call","typeFullName":"ANY","resolvedMethod":"visitor.call","isExternal":true,"lineNumber":198,"columnNumber":64,"label":"CALL"},"definedBy":{"name":"call","typeFullName":"ANY","resolvedMethod":"visitor.call","isExternal":true,"lineNumber":198,"columnNumber":64,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"key","typeFullName":"ANY","position":2,"lineNumber":197,"columnNumber":43,"label":"PARAM"},"definedBy":{"name":"key","typeFullName":"ANY","position":2,"lineNumber":197,"columnNumber":43,"label":"PARAM"},"invokedCalls":[{"callName":"trim","resolvedMethod":"key.trim","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":199,"columnNumber":44}],"argToCalls":[{"callName":"isString","resolvedMethod":"utils.isString","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":199,"columnNumber":22},{"callName":"concat","resolvedMethod":"path.concat","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":203,"columnNumber":25},{"callName":"","resolvedMethod":"_tmp_6.push","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":203,"columnNumber":45}]}]},{"code":"","fullName":"lib/helpers/toFormData.js::program:toFormData:convertValue","signature":"","fileName":"lib/helpers/toFormData.js","lineNumber":116,"columnNumber":2,"usages":[{"targetObj":{"name":"toISOString","typeFullName":"ANY","resolvedMethod":"Array<any>:toISOString","isExternal":true,"lineNumber":120,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"toISOString","typeFullName":"ANY","resolvedMethod":"Array<any>:toISOString","isExternal":true,"lineNumber":120,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isDate","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isDate","isExternal":true,"lineNumber":119,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"isDate","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:isDate","isExternal":true,"lineNumber":119,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"convertValue","typeFullName":"ANY","resolvedMethod":"lib/helpers/toFormData.js::program:toFormData:convertValue","isExternal":false,"lineNumber":175,"columnNumber":48,"label":"CALL"},"definedBy":{"name":"convertValue","typeFullName":"ANY","resolvedMethod":"lib/helpers/toFormData.js::program:toFormData:convertValue","isExternal":false,"lineNumber":175,"columnNumber":48,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":116,"columnNumber":24,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":116,"columnNumber":24,"label":"PARAM"},"invokedCalls":[{"callName":"toISOString","resolvedMethod":"value.toISOString","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":120,"columnNumber":13}],"argToCalls":[{"callName":"isDate","resolvedMethod":"utils.isDate","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":119,"columnNumber":8},{"callName":"isBlob","resolvedMethod":"utils.isBlob","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":123,"columnNumber":20},{"callName":"isArrayBuffer","resolvedMethod":"utils.isArrayBuffer","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":127,"columnNumber":8},{"callName":"isTypedArray","resolvedMethod":"utils.isTypedArray","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":127,"columnNumber":38},{"callName":"","resolvedMethod":"_tmp_4.push","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":128,"columnNumber":63},{"callName":"from","resolvedMethod":"Buffer.from","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":128,"columnNumber":73}]},{"targetObj":{"name":"toISOString","typeFullName":"ANY","resolvedMethod":"JSON.stringify:<returnValue>:toISOString","isExternal":true,"lineNumber":120,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"toISOString","typeFullName":"ANY","resolvedMethod":"JSON.stringify:<returnValue>:toISOString","isExternal":true,"lineNumber":120,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/toFormData.js::program:toFormData:defaultVisitor","signature":"","fileName":"lib/helpers/toFormData.js","lineNumber":144,"columnNumber":2,"usages":[{"targetObj":{"name":"toArray","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toArray","isExternal":true,"lineNumber":155,"columnNumber":74,"label":"CALL"},"definedBy":{"name":"toArray","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toArray","isExternal":true,"lineNumber":155,"columnNumber":74,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":144,"columnNumber":26,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":144,"columnNumber":26,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"stringify","resolvedMethod":"JSON.stringify","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":152,"columnNumber":16},{"callName":"isArray","resolvedMethod":"utils.isArray","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":154,"columnNumber":9},{"callName":"isFlatArray","resolvedMethod":"isFlatArray","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":154,"columnNumber":33},{"callName":"isFileList","resolvedMethod":"utils.isFileList","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":155,"columnNumber":10},{"callName":"toArray","resolvedMethod":"utils.toArray","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":155,"columnNumber":74},{"callName":"isVisitable","resolvedMethod":"isVisitable","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":171,"columnNumber":8},{"callName":"convertValue","resolvedMethod":"convertValue","paramTypes":["JSON.stringify:<returnValue>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":175,"columnNumber":48}]},{"targetObj":{"name":"key","typeFullName":"string | __ecma.Number","position":2,"lineNumber":144,"columnNumber":33,"label":"PARAM"},"definedBy":{"name":"key","typeFullName":"string | __ecma.Number","position":2,"lineNumber":144,"columnNumber":33,"label":"PARAM"},"invokedCalls":[{"callName":"slice","resolvedMethod":"key.slice","paramTypes":["__ecma.Number","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":150,"columnNumber":33}],"argToCalls":[{"callName":"endsWith","resolvedMethod":"utils.endsWith","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":148,"columnNumber":10},{"callName":"endsWith","resolvedMethod":"utils.endsWith","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":155,"columnNumber":37},{"callName":"removeBrackets","resolvedMethod":"removeBrackets","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":158,"columnNumber":14},{"callName":"","resolvedMethod":"_tmp_5.push","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":163,"columnNumber":42},{"callName":"renderKey","resolvedMethod":"renderKey","paramTypes":["Array<string | __ecma.Number>","__ecma.String","__ecma.String"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":175,"columnNumber":20}]},{"targetObj":{"name":"path","typeFullName":"Array<string | __ecma.Number>","position":3,"lineNumber":144,"columnNumber":38,"label":"PARAM"},"definedBy":{"name":"path","typeFullName":"Array<string | __ecma.Number>","position":3,"lineNumber":144,"columnNumber":38,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"renderKey","resolvedMethod":"renderKey","paramTypes":["Array<string | __ecma.Number>","__ecma.String","__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":175,"columnNumber":20}]},{"targetObj":{"name":"arr","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toArray:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"utils.toArray","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toArray","isExternal":null,"lineNumber":155,"columnNumber":74,"label":"CALL"},"invokedCalls":[{"callName":"forEach","resolvedMethod":"arr.forEach","paramTypes":["LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":160,"columnNumber":8}],"argToCalls":[]},{"targetObj":{"name":"function defaultVisitor(value, key, path)","typeFullName":"ANY","lineNumber":144,"columnNumber":2,"label":"UNKNOWN"},"definedBy":{"name":"function defaultVisitor(value, key, path)","typeFullName":"ANY","lineNumber":144,"columnNumber":2,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toArray:<returnValue>:forEach","isExternal":true,"lineNumber":160,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }:toArray:<returnValue>:forEach","isExternal":true,"lineNumber":160,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/toFormData.js::program:toFormData:defaultVisitor:each","signature":"","fileName":"lib/helpers/toFormData.js","lineNumber":160,"columnNumber":20,"usages":[{"targetObj":{"name":"function each(el, index)","typeFullName":"ANY","lineNumber":160,"columnNumber":20,"label":"UNKNOWN"},"definedBy":{"name":"function each(el, index)","typeFullName":"ANY","lineNumber":160,"columnNumber":20,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"el","typeFullName":"ANY","position":1,"lineNumber":160,"columnNumber":34,"label":"PARAM"},"definedBy":{"name":"el","typeFullName":"ANY","position":1,"lineNumber":160,"columnNumber":34,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isUndefined","resolvedMethod":"utils.isUndefined","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":161,"columnNumber":12},{"callName":"convertValue","resolvedMethod":"convertValue","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":164,"columnNumber":12}]},{"targetObj":{"name":"index","typeFullName":"ANY","position":2,"lineNumber":160,"columnNumber":38,"label":"PARAM"},"definedBy":{"name":"index","typeFullName":"ANY","position":2,"lineNumber":160,"columnNumber":38,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"renderKey","resolvedMethod":"renderKey","paramTypes":["ANY","ANY","__ecma.String"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":163,"columnNumber":31}]},{"targetObj":{"name":"append","typeFullName":"ANY","resolvedMethod":"__ecma.String:append","isExternal":true,"lineNumber":175,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"append","typeFullName":"ANY","resolvedMethod":"__ecma.String:append","isExternal":true,"lineNumber":175,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/toFormData.js::program:toFormData:defined","signature":"","fileName":"lib/helpers/toFormData.js","lineNumber":99,"columnNumber":12,"usages":[{"targetObj":{"name":"function defined(option, source)","typeFullName":"ANY","lineNumber":99,"columnNumber":12,"label":"UNKNOWN"},"definedBy":{"name":"function defined(option, source)","typeFullName":"ANY","lineNumber":99,"columnNumber":12,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/toURLEncodedForm.js::program","signature":"","fileName":"lib/helpers/toURLEncodedForm.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"utils","typeFullName":"{ isArray: (arg: ANY) => arg is ANY[]; isArrayBuffer: (thing: ANY) => __ecma.Boolean; isBuffer: (val: ANY) => __ecma.Boolean; isFormData: (thing: ANY) => __ecma.Boolean; isArrayBufferView: (val: ANY) => __ecma.Boolean; isString: (thing: ANY) => __ecma.Boolean; isNumber: (thing: ANY) => __ecma.Boolean; isBoolean: (thing: ANY) => __ecma.Boolean; isObject: (thing: ANY) => __ecma.Boolean; isPlainObject: (val: ANY) => __ecma.Boolean; isReadableStream: (thing: ANY) => __ecma.Boolean; isRequest: (thing: ANY) => __ecma.Boolean; isResponse: (thing: ANY) => __ecma.Boolean; isHeaders: (thing: ANY) => __ecma.Boolean; isUndefined: (thing: ANY) => __ecma.Boolean; isDate: (thing: ANY) => __ecma.Boolean; isFile: (thing: ANY) => __ecma.Boolean; isBlob: (thing: ANY) => __ecma.Boolean; isRegExp: (thing: ANY) => __ecma.Boolean; isFunction: (thing: ANY) => __ecma.Boolean; isStream: (val: ANY) => __ecma.Boolean; isURLSearchParams: (thing: ANY) => __ecma.Boolean; isTypedArray: (thing: ANY) => __ecma.Boolean; isFileList: (thing: ANY) => __ecma.Boolean; forEach: (obj: ANY | Array<any>, fn: Function, { allOwnKeys }?: __ecma.Boolean) => ANY; merge: (...args: Array<any>) => ANY; extend: (a: ANY, b: ANY, thisArg: ANY, { allOwnKeys }?: __ecma.Boolean) => ANY; trim: (str: __ecma.String) => __ecma.String; stripBOM: (content: __ecma.String) => __ecma.String; inherits: (constructor: Function, superConstructor: Function, props?: object, descriptors?: object) => void; toFlatObject: (sourceObj: ANY, destObj?: ANY, filter?: Function | __ecma.Boolean, propFilter?: Function) => ANY; kindOf: (thing: ANY) => ANY; kindOfTest: (type: ANY) => (thing: ANY) => __ecma.Boolean; endsWith: (str: __ecma.String, searchString: __ecma.String, position?: __ecma.Number) => __ecma.Boolean; toArray: (thing?: ANY) => Array<any> | __ecma.Null; forEachEntry: (obj: ANY, fn: Function) => void; matchAll: (regExp: __ecma.String, str: __ecma.String) => Array<boolean>; isHTMLForm: (thing: ANY) => __ecma.Boolean; hasOwnProperty: (obj: ANY, prop: ANY) => ANY; hasOwnProp: (obj: ANY, prop: ANY) => ANY; reduceDescriptors: (obj: ANY, reducer: ANY) => void; freezeMethods: (obj: ANY) => void; toObjectSet: (arrayOrString: ANY, delimiter: ANY) => object; toCamelCase: (str: ANY) => ANY; noop: () => void; toFiniteNumber: (value: ANY, defaultValue: ANY) => ANY; findKey: (obj: ANY, key: ANY) => __ecma.String; global: ANY; isContextDefined: (context: ANY) => __ecma.Boolean; ALPHABET: { DIGIT: __ecma.String; ALPHA: __ecma.String; ALPHA_DIGIT: __ecma.String; }; generateString: (size?: __ecma.Number, alphabet?: __ecma.String) => __ecma.String; isSpecCompliantForm: (thing: unknown) => __ecma.Boolean; toJSONObject: (obj: ANY) => ANY; isAsyncFn: (thing: ANY) => __ecma.Boolean; isThenable: (thing: ANY) => __ecma.Boolean; setImmediate: ANY; asap: ANY; }","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/toURLEncodedForm.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"isBuffer","resolvedMethod":"utils.isBuffer","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":10,"columnNumber":29}],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/toURLEncodedForm.js::program:require","isExternal":true,"lineNumber":5,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/toURLEncodedForm.js::program:require","isExternal":true,"lineNumber":5,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/toURLEncodedForm.js::program:toURLEncodedForm","signature":"","fileName":"lib/helpers/toURLEncodedForm.js","lineNumber":7,"columnNumber":15,"usages":[{"targetObj":{"name":"toURLEncodedForm","typeFullName":"__ecma.String","resolvedMethod":"lib/helpers/toURLEncodedForm.js::program:toURLEncodedForm","isExternal":false,"lineNumber":78,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"toURLEncodedForm","typeFullName":"__ecma.String","resolvedMethod":"lib/helpers/toURLEncodedForm.js::program:toURLEncodedForm","isExternal":false,"lineNumber":78,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"data","typeFullName":"ANY","position":1,"lineNumber":7,"columnNumber":41,"label":"PARAM"},"definedBy":{"name":"data","typeFullName":"ANY","position":1,"lineNumber":7,"columnNumber":41,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"toFormData","resolvedMethod":"toFormData","paramTypes":[],"returnType":"lib/helpers/toFormData.js::program:toFormData","position":1,"isExternal":false,"lineNumber":8,"columnNumber":9}]},{"targetObj":{"name":"options","typeFullName":"ANY","position":2,"lineNumber":7,"columnNumber":47,"label":"PARAM"},"definedBy":{"name":"options","typeFullName":"ANY","position":2,"lineNumber":7,"columnNumber":47,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"assign","resolvedMethod":"Object.assign","paramTypes":["ANY","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":8,"columnNumber":66}]}]},{"code":"","fullName":"lib/helpers/toURLEncodedForm.js::program:toURLEncodedForm:anonymous","signature":"","fileName":"lib/helpers/toURLEncodedForm.js","lineNumber":9,"columnNumber":13,"usages":[{"targetObj":{"name":"toString","typeFullName":"ANY","resolvedMethod":"value.toString","isExternal":true,"lineNumber":11,"columnNumber":25,"label":"CALL"},"definedBy":{"name":"toString","typeFullName":"ANY","resolvedMethod":"value.toString","isExternal":true,"lineNumber":11,"columnNumber":25,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"apply","typeFullName":"ANY","resolvedMethod":"helpers:defaultVisitor:<returnValue>:<member>(defaultVisitor):apply","isExternal":true,"lineNumber":15,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"apply","typeFullName":"ANY","resolvedMethod":"helpers:defaultVisitor:<returnValue>:<member>(defaultVisitor):apply","isExternal":true,"lineNumber":15,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":9,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":9,"columnNumber":22,"label":"PARAM"},"invokedCalls":[{"callName":"toString","resolvedMethod":"value.toString","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":11,"columnNumber":25}],"argToCalls":[{"callName":"isBuffer","resolvedMethod":"utils.isBuffer","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":10,"columnNumber":29}]},{"targetObj":{"name":"key","typeFullName":"ANY","position":2,"lineNumber":9,"columnNumber":29,"label":"PARAM"},"definedBy":{"name":"key","typeFullName":"ANY","position":2,"lineNumber":9,"columnNumber":29,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"append","resolvedMethod":"this.append","paramTypes":["ANY","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":11,"columnNumber":8}]},{"targetObj":{"name":"function(value, key, path, helpers)","typeFullName":"ANY","lineNumber":9,"columnNumber":13,"label":"UNKNOWN"},"definedBy":{"name":"function(value, key, path, helpers)","typeFullName":"ANY","lineNumber":9,"columnNumber":13,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"append","typeFullName":"ANY","resolvedMethod":"lib/helpers/toURLEncodedForm.js::program:append","isExternal":true,"lineNumber":11,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"append","typeFullName":"ANY","resolvedMethod":"lib/helpers/toURLEncodedForm.js::program:append","isExternal":true,"lineNumber":11,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/trackStream.js::program","signature":"","fileName":"lib/helpers/trackStream.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/trackStream.js::program:anonymous3:_onFinish","signature":"","fileName":"lib/helpers/trackStream.js","lineNumber":51,"columnNumber":18,"usages":[{"targetObj":{"name":"_onFinish","typeFullName":"void","resolvedMethod":"lib/helpers/trackStream.js::program:anonymous3:_onFinish","isExternal":false,"lineNumber":81,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"_onFinish","typeFullName":"void","resolvedMethod":"lib/helpers/trackStream.js::program:anonymous3:_onFinish","isExternal":false,"lineNumber":81,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"e","typeFullName":"ANY","position":1,"lineNumber":51,"columnNumber":19,"label":"PARAM"},"definedBy":{"name":"e","typeFullName":"ANY","position":1,"lineNumber":51,"columnNumber":19,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"onFinish","resolvedMethod":"onFinish","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":54,"columnNumber":18}]},{"targetObj":{"name":"onFinish","typeFullName":"ANY","resolvedMethod":"lib/helpers/trackStream.js::program:onFinish","isExternal":true,"lineNumber":54,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"onFinish","typeFullName":"ANY","resolvedMethod":"lib/helpers/trackStream.js::program:onFinish","isExternal":true,"lineNumber":54,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/trackStream.js::program:anonymous3:cancel","signature":"","fileName":"lib/helpers/trackStream.js","lineNumber":80,"columnNumber":4,"usages":[{"targetObj":{"name":"cancel(reason)","typeFullName":"ANY","lineNumber":80,"columnNumber":4,"label":"UNKNOWN"},"definedBy":{"name":"cancel(reason)","typeFullName":"ANY","lineNumber":80,"columnNumber":4,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"reason","typeFullName":"ANY","position":1,"lineNumber":80,"columnNumber":11,"label":"PARAM"},"definedBy":{"name":"reason","typeFullName":"ANY","position":1,"lineNumber":80,"columnNumber":11,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"_onFinish","resolvedMethod":"_onFinish","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":81,"columnNumber":6}]},{"targetObj":{"name":"return","typeFullName":"ANY","resolvedMethod":"AsyncGenerator<any, void, unknown>:return","isExternal":true,"lineNumber":82,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"return","typeFullName":"ANY","resolvedMethod":"AsyncGenerator<any, void, unknown>:return","isExternal":true,"lineNumber":82,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"return","typeFullName":"ANY","resolvedMethod":"Generator<any, void, unknown>:return","isExternal":true,"lineNumber":82,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"return","typeFullName":"ANY","resolvedMethod":"Generator<any, void, unknown>:return","isExternal":true,"lineNumber":82,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/trackStream.js::program:anonymous3:pull","signature":"","fileName":"lib/helpers/trackStream.js","lineNumber":59,"columnNumber":4,"usages":[{"targetObj":{"name":"next","typeFullName":"ANY","resolvedMethod":"Generator<any, void, unknown>:next","isExternal":true,"lineNumber":61,"columnNumber":36,"label":"CALL"},"definedBy":{"name":"next","typeFullName":"ANY","resolvedMethod":"Generator<any, void, unknown>:next","isExternal":true,"lineNumber":61,"columnNumber":36,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"async pull(controller)","typeFullName":"ANY","lineNumber":59,"columnNumber":4,"label":"UNKNOWN"},"definedBy":{"name":"async pull(controller)","typeFullName":"ANY","lineNumber":59,"columnNumber":4,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"loadedBytes","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"bytes += len","typeFullName":"ANY","resolvedMethod":"<operator>.assignmentPlus","isExternal":null,"lineNumber":71,"columnNumber":28,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"onProgress","resolvedMethod":"onProgress","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":72,"columnNumber":10}]},{"targetObj":{"name":"close","typeFullName":"ANY","resolvedMethod":"ReadableStreamDefaultController<any>:close","isExternal":true,"lineNumber":65,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"close","typeFullName":"ANY","resolvedMethod":"ReadableStreamDefaultController<any>:close","isExternal":true,"lineNumber":65,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"controller","typeFullName":"ReadableStreamDefaultController<any>","position":1,"lineNumber":59,"columnNumber":15,"label":"PARAM"},"definedBy":{"name":"controller","typeFullName":"ReadableStreamDefaultController<any>","position":1,"lineNumber":59,"columnNumber":15,"label":"PARAM"},"invokedCalls":[{"callName":"close","resolvedMethod":"controller.close","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":65,"columnNumber":10},{"callName":"Uint8Array","resolvedMethod":"controller.enqueue","paramTypes":["_tmp_0:value:<returnValue>:<member>(value)"],"returnType":"Uint8Array","isExternal":true,"lineNumber":74,"columnNumber":8}],"argToCalls":[]},{"targetObj":{"name":"next","typeFullName":"ANY","resolvedMethod":"AsyncGenerator<any, void, unknown>:next","isExternal":true,"lineNumber":61,"columnNumber":36,"label":"CALL"},"definedBy":{"name":"next","typeFullName":"ANY","resolvedMethod":"AsyncGenerator<any, void, unknown>:next","isExternal":true,"lineNumber":61,"columnNumber":36,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"enqueue","typeFullName":"ANY","resolvedMethod":"ReadableStreamDefaultController<any>:enqueue","isExternal":true,"lineNumber":74,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"enqueue","typeFullName":"ANY","resolvedMethod":"ReadableStreamDefaultController<any>:enqueue","isExternal":true,"lineNumber":74,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"onProgress","typeFullName":"ANY","resolvedMethod":"lib/helpers/trackStream.js::program:onProgress","isExternal":true,"lineNumber":72,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"onProgress","typeFullName":"ANY","resolvedMethod":"lib/helpers/trackStream.js::program:onProgress","isExternal":true,"lineNumber":72,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/trackStream.js::program:readBytes","signature":"","fileName":"lib/helpers/trackStream.js","lineNumber":20,"columnNumber":25,"usages":[{"targetObj":{"name":"readBytes","typeFullName":"Generator<any, void, unknown>","resolvedMethod":"lib/helpers/trackStream.js::program:readBytes","isExternal":false,"lineNumber":47,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"readBytes","typeFullName":"Generator<any, void, unknown>","resolvedMethod":"lib/helpers/trackStream.js::program:readBytes","isExternal":false,"lineNumber":47,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"iterable","typeFullName":"ANY","position":1,"lineNumber":20,"columnNumber":42,"label":"PARAM"},"definedBy":{"name":"iterable","typeFullName":"ANY","position":1,"lineNumber":20,"columnNumber":42,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"readStream","resolvedMethod":"readStream","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":21,"columnNumber":28}]},{"targetObj":{"name":"chunkSize","typeFullName":"ANY","position":2,"lineNumber":20,"columnNumber":52,"label":"PARAM"},"definedBy":{"name":"chunkSize","typeFullName":"ANY","position":2,"lineNumber":20,"columnNumber":52,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"streamChunk","resolvedMethod":"streamChunk","paramTypes":["_result_0:value:<returnValue>:<member>(value)","ANY"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":22,"columnNumber":11}]}]},{"code":"","fullName":"lib/helpers/trackStream.js::program:readStream","signature":"","fileName":"lib/helpers/trackStream.js","lineNumber":26,"columnNumber":19,"usages":[{"targetObj":{"name":"getReader","typeFullName":"ANY","resolvedMethod":"stream.getReader","isExternal":true,"lineNumber":32,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"getReader","typeFullName":"ANY","resolvedMethod":"stream.getReader","isExternal":true,"lineNumber":32,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"read","typeFullName":"ANY","resolvedMethod":"reader.read","isExternal":true,"lineNumber":35,"columnNumber":34,"label":"CALL"},"definedBy":{"name":"read","typeFullName":"ANY","resolvedMethod":"reader.read","isExternal":true,"lineNumber":35,"columnNumber":34,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"reader","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"stream.getReader","typeFullName":"ANY","resolvedMethod":"stream.getReader","isExternal":null,"lineNumber":32,"columnNumber":17,"label":"CALL"},"invokedCalls":[{"callName":"read","resolvedMethod":"reader.read","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":35,"columnNumber":34},{"callName":"cancel","resolvedMethod":"reader.cancel","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":42,"columnNumber":10}],"argToCalls":[]},{"targetObj":{"name":"readStream","typeFullName":"AsyncGenerator<any, void, ANY>","resolvedMethod":"lib/helpers/trackStream.js::program:readStream","isExternal":false,"lineNumber":21,"columnNumber":28,"label":"CALL"},"definedBy":{"name":"readStream","typeFullName":"AsyncGenerator<any, void, ANY>","resolvedMethod":"lib/helpers/trackStream.js::program:readStream","isExternal":false,"lineNumber":21,"columnNumber":28,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"cancel","typeFullName":"ANY","resolvedMethod":"reader.cancel","isExternal":true,"lineNumber":42,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"cancel","typeFullName":"ANY","resolvedMethod":"reader.cancel","isExternal":true,"lineNumber":42,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"stream","typeFullName":"ANY","position":1,"lineNumber":26,"columnNumber":36,"label":"PARAM"},"definedBy":{"name":"stream","typeFullName":"ANY","position":1,"lineNumber":26,"columnNumber":36,"label":"PARAM"},"invokedCalls":[{"callName":"getReader","resolvedMethod":"stream.getReader","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":32,"columnNumber":17}],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/trackStream.js::program:streamChunk","signature":"","fileName":"lib/helpers/trackStream.js","lineNumber":2,"columnNumber":27,"usages":[{"targetObj":{"name":"streamChunk","typeFullName":"Generator<any, void, unknown>","resolvedMethod":"lib/helpers/trackStream.js::program:streamChunk","isExternal":false,"lineNumber":22,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"streamChunk","typeFullName":"Generator<any, void, unknown>","resolvedMethod":"lib/helpers/trackStream.js::program:streamChunk","isExternal":false,"lineNumber":22,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"chunk","typeFullName":"ANY","position":1,"lineNumber":2,"columnNumber":38,"label":"PARAM"},"definedBy":{"name":"chunk","typeFullName":"ANY","position":1,"lineNumber":2,"columnNumber":38,"label":"PARAM"},"invokedCalls":[{"callName":"slice","resolvedMethod":"chunk.slice","paramTypes":["__ecma.Number","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":15,"columnNumber":10}],"argToCalls":[]},{"targetObj":{"name":"end","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"pos + chunkSize","typeFullName":"ANY","resolvedMethod":"<operator>.addition","isExternal":null,"lineNumber":14,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"slice","resolvedMethod":"chunk.slice","paramTypes":["__ecma.Number","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":15,"columnNumber":10}]},{"targetObj":{"name":"slice","typeFullName":"ANY","resolvedMethod":"_result_0:value:<returnValue>:<member>(value):slice","isExternal":true,"lineNumber":15,"columnNumber":10,"label":"CALL"},"definedBy":{"name":"slice","typeFullName":"ANY","resolvedMethod":"_result_0:value:<returnValue>:<member>(value):slice","isExternal":true,"lineNumber":15,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/trackStream.js::program:trackStream","signature":"","fileName":"lib/helpers/trackStream.js","lineNumber":46,"columnNumber":27,"usages":[{"targetObj":{"name":"trackStream","typeFullName":"ReadableStream<Uint8Array>","resolvedMethod":"lib/helpers/trackStream.js::program:trackStream","isExternal":false,"lineNumber":189,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"trackStream","typeFullName":"ReadableStream<Uint8Array>","resolvedMethod":"lib/helpers/trackStream.js::program:trackStream","isExternal":false,"lineNumber":189,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"stream","typeFullName":"ANY","position":1,"lineNumber":46,"columnNumber":28,"label":"PARAM"},"definedBy":{"name":"stream","typeFullName":"ANY","position":1,"lineNumber":46,"columnNumber":28,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"readBytes","resolvedMethod":"readBytes","paramTypes":["ANY","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":47,"columnNumber":19}]},{"targetObj":{"name":"chunkSize","typeFullName":"ANY","position":2,"lineNumber":46,"columnNumber":36,"label":"PARAM"},"definedBy":{"name":"chunkSize","typeFullName":"ANY","position":2,"lineNumber":46,"columnNumber":36,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"readBytes","resolvedMethod":"readBytes","paramTypes":["ANY","ANY"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":47,"columnNumber":19}]},{"targetObj":{"name":"iterator","typeFullName":"Generator<any, void, unknown>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"readBytes","typeFullName":"Generator<any, void, unknown>","resolvedMethod":"lib/helpers/trackStream.js::program:readBytes","isExternal":null,"lineNumber":47,"columnNumber":19,"label":"CALL"},"invokedCalls":[{"callName":"next","resolvedMethod":"iterator.next","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":61,"columnNumber":36},{"callName":"return","resolvedMethod":"iterator.return","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":82,"columnNumber":13}],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/validator.js::program","signature":"","fileName":"lib/helpers/validator.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/validator.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/helpers/validator.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/validator.js::program:anonymous","signature":"","fileName":"lib/helpers/validator.js","lineNumber":9,"columnNumber":72,"usages":[{"targetObj":{"name":"(type, i)","typeFullName":"ANY","lineNumber":9,"columnNumber":72,"label":"UNKNOWN"},"definedBy":{"name":"(type, i)","typeFullName":"ANY","lineNumber":9,"columnNumber":72,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/validator.js::program:anonymous:validator","signature":"","fileName":"lib/helpers/validator.js","lineNumber":10,"columnNumber":21,"usages":[{"targetObj":{"name":"validator","typeFullName":"string | true","resolvedMethod":"lib/helpers/validator.js::program:anonymous:validator","isExternal":false,"lineNumber":51,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"validator","typeFullName":"string | true","resolvedMethod":"lib/helpers/validator.js::program:anonymous:validator","isExternal":false,"lineNumber":51,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/validator.js::program:assertOptions","signature":"","fileName":"lib/helpers/validator.js","lineNumber":73,"columnNumber":0,"usages":[{"targetObj":{"name":"function assertOptions(options, schema, allowUnknown)","typeFullName":"ANY","lineNumber":73,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":"function assertOptions(options, schema, allowUnknown)","typeFullName":"ANY","lineNumber":73,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"options","typeFullName":"ANY","position":1,"lineNumber":73,"columnNumber":23,"label":"PARAM"},"definedBy":{"name":"options","typeFullName":"ANY","position":1,"lineNumber":73,"columnNumber":23,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"keys","resolvedMethod":"Object.keys","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":77,"columnNumber":15},{"callName":"validator","resolvedMethod":"validator","paramTypes":["__ecma.Boolean","__ecma.String","ANY"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":84,"columnNumber":44}]},{"targetObj":{"name":"opt","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"keys[i]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":80,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"validator","resolvedMethod":"validator","paramTypes":["__ecma.Boolean","__ecma.String","ANY"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":84,"columnNumber":44}]},{"targetObj":{"name":"value","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"options[opt]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":83,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"validator","resolvedMethod":"validator","paramTypes":["__ecma.Boolean","__ecma.String","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":84,"columnNumber":44}]}]},{"code":"","fullName":"lib/helpers/validator.js::program:spelling","signature":"","fileName":"lib/helpers/validator.js","lineNumber":55,"columnNumber":22,"usages":[{"targetObj":{"name":"function spelling(correctSpelling)","typeFullName":"ANY","lineNumber":55,"columnNumber":22,"label":"UNKNOWN"},"definedBy":{"name":"function spelling(correctSpelling)","typeFullName":"ANY","lineNumber":55,"columnNumber":22,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/validator.js::program:spelling:anonymous","signature":"","fileName":"lib/helpers/validator.js","lineNumber":56,"columnNumber":9,"usages":[{"targetObj":{"name":"(value, opt)","typeFullName":"ANY","lineNumber":56,"columnNumber":9,"label":"UNKNOWN"},"definedBy":{"name":"(value, opt)","typeFullName":"ANY","lineNumber":56,"columnNumber":9,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/validator.js::program:transitional","signature":"","fileName":"lib/helpers/validator.js","lineNumber":26,"columnNumber":26,"usages":[{"targetObj":{"name":"function transitional(validator, version, message)","typeFullName":"ANY","lineNumber":26,"columnNumber":26,"label":"UNKNOWN"},"definedBy":{"name":"function transitional(validator, version, message)","typeFullName":"ANY","lineNumber":26,"columnNumber":26,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/helpers/validator.js::program:transitional:anonymous","signature":"","fileName":"lib/helpers/validator.js","lineNumber":32,"columnNumber":9,"usages":[{"targetObj":{"name":"(value, opt, opts)","typeFullName":"ANY","lineNumber":32,"columnNumber":9,"label":"UNKNOWN"},"definedBy":{"name":"(value, opt, opts)","typeFullName":"ANY","lineNumber":32,"columnNumber":9,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":32,"columnNumber":10,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":32,"columnNumber":10,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"validator","resolvedMethod":"validator","paramTypes":["__ecma.Boolean","__ecma.String","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":51,"columnNumber":23}]},{"targetObj":{"name":"opt","typeFullName":"ANY","position":2,"lineNumber":32,"columnNumber":17,"label":"PARAM"},"definedBy":{"name":"opt","typeFullName":"ANY","position":2,"lineNumber":32,"columnNumber":17,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"formatMessage","resolvedMethod":"formatMessage","paramTypes":["__ecma.String","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":35,"columnNumber":8},{"callName":"formatMessage","resolvedMethod":"formatMessage","paramTypes":["__ecma.String","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":44,"columnNumber":8},{"callName":"validator","resolvedMethod":"validator","paramTypes":["__ecma.Boolean","__ecma.String","ANY"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":51,"columnNumber":23}]},{"targetObj":{"name":"opts","typeFullName":"ANY","position":3,"lineNumber":32,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"opts","typeFullName":"ANY","position":3,"lineNumber":32,"columnNumber":22,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"validator","resolvedMethod":"validator","paramTypes":["__ecma.Boolean","__ecma.String","ANY"],"returnType":"ANY","position":3,"isExternal":false,"lineNumber":51,"columnNumber":23}]}]},{"code":"","fullName":"lib/helpers/validator.js::program:transitional:formatMessage","signature":"","fileName":"lib/helpers/validator.js","lineNumber":27,"columnNumber":2,"usages":[{"targetObj":{"name":"formatMessage","typeFullName":"__ecma.String","resolvedMethod":"lib/helpers/validator.js::program:transitional:formatMessage","isExternal":false,"lineNumber":44,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"formatMessage","typeFullName":"__ecma.String","resolvedMethod":"lib/helpers/validator.js::program:transitional:formatMessage","isExternal":false,"lineNumber":44,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/platform/browser/classes/Blob.js::program","signature":"","fileName":"lib/platform/browser/classes/Blob.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/platform/browser/classes/FormData.js::program","signature":"","fileName":"lib/platform/browser/classes/FormData.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/platform/browser/classes/URLSearchParams.js::program","signature":"","fileName":"lib/platform/browser/classes/URLSearchParams.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/platform/browser/classes/URLSearchParams.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/platform/browser/classes/URLSearchParams.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/platform/browser/index.js::program","signature":"","fileName":"lib/platform/browser/index.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/platform/browser/index.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/platform/browser/index.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/platform/common/utils.js::program","signature":"","fileName":"lib/platform/common/utils.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/platform/common/utils.js::program:anonymous","signature":"","fileName":"lib/platform/common/utils.js","lineNumber":34,"columnNumber":40,"usages":[{"targetObj":{"name":"anonymous","typeFullName":"ANY","resolvedMethod":"lib/platform/common/utils.js::program:anonymous","isExternal":false,"lineNumber":34,"columnNumber":39,"label":"CALL"},"definedBy":{"name":"anonymous","typeFullName":"ANY","resolvedMethod":"lib/platform/common/utils.js::program:anonymous","isExternal":false,"lineNumber":34,"columnNumber":39,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/platform/index.js::program","signature":"","fileName":"lib/platform/index.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/platform/index.js::program:require","isExternal":true,"lineNumber":2,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/platform/index.js::program:require","isExternal":true,"lineNumber":2,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/platform/node/classes/FormData.js::program","signature":"","fileName":"lib/platform/node/classes/FormData.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/platform/node/classes/FormData.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/platform/node/classes/FormData.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/platform/node/classes/URLSearchParams.js::program","signature":"","fileName":"lib/platform/node/classes/URLSearchParams.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/platform/node/classes/URLSearchParams.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/platform/node/classes/URLSearchParams.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/platform/node/index.js::program","signature":"","fileName":"lib/platform/node/index.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/platform/node/index.js::program:require","isExternal":true,"lineNumber":2,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/platform/node/index.js::program:require","isExternal":true,"lineNumber":2,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program","signature":"","fileName":"lib/utils.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"_global","typeFullName":"globalThis","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"","typeFullName":"lib/utils.js::program:anonymous9","resolvedMethod":"lib/utils.js::program:anonymous9","isExternal":null,"lineNumber":286,"columnNumber":16,"label":"CALL"},"invokedCalls":[{"callName":"addEventListener","resolvedMethod":"_global.addEventListener","paramTypes":["__ecma.String","LAMBDA","__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":681,"columnNumber":4},{"callName":"postMessage","resolvedMethod":"_global.postMessage","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":689,"columnNumber":6}],"argToCalls":[{"callName":"bind","resolvedMethod":"queueMicrotask.bind","paramTypes":["globalThis"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":698,"columnNumber":2}]},{"targetObj":{"name":"toString","typeFullName":"() => __ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"_tmp_8.toString","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":7,"columnNumber":7,"label":"CALL"},"invokedCalls":[{"callName":"call","resolvedMethod":"toString.call","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":11,"columnNumber":16}],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"__ecma.String:toUpperCase","isExternal":true,"lineNumber":612,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"__ecma.String:toUpperCase","isExternal":true,"lineNumber":612,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"map","typeFullName":"ANY","resolvedMethod":"__ecma.Array:map","isExternal":true,"lineNumber":212,"columnNumber":61,"label":"CALL"},"definedBy":{"name":"map","typeFullName":"ANY","resolvedMethod":"__ecma.Array:map","isExternal":true,"lineNumber":212,"columnNumber":61,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"bind","typeFullName":"ANY","resolvedMethod":"(callback: VoidFunction) => void:bind","isExternal":true,"lineNumber":698,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"bind","typeFullName":"ANY","resolvedMethod":"(callback: VoidFunction) => void:bind","isExternal":true,"lineNumber":698,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:require","isExternal":true,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous","signature":"","fileName":"lib/utils.js","lineNumber":10,"columnNumber":16,"usages":[{"targetObj":{"name":"anonymous","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:anonymous","isExternal":false,"lineNumber":10,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"anonymous","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:anonymous","isExternal":false,"lineNumber":10,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous11:anonymous","signature":"","fileName":"lib/utils.js","lineNumber":345,"columnNumber":13,"usages":[{"targetObj":{"name":"(val, key)","typeFullName":"ANY","lineNumber":345,"columnNumber":13,"label":"UNKNOWN"},"definedBy":{"name":"(val, key)","typeFullName":"ANY","lineNumber":345,"columnNumber":13,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"val","typeFullName":"ANY","position":1,"lineNumber":345,"columnNumber":14,"label":"PARAM"},"definedBy":{"name":"val","typeFullName":"ANY","position":1,"lineNumber":345,"columnNumber":14,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isFunction","resolvedMethod":"isFunction","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":346,"columnNumber":19},{"callName":"bind","resolvedMethod":"bind","paramTypes":["Array<any>","__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":347,"columnNumber":15}]}]},{"code":"","fullName":"lib/utils.js::program:anonymous17","signature":"","fileName":"lib/utils.js","lineNumber":470,"columnNumber":22,"usages":[{"targetObj":{"name":"anonymous17","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:anonymous17","isExternal":false,"lineNumber":470,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"anonymous17","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:anonymous17","isExternal":false,"lineNumber":470,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous17:anonymous","signature":"","fileName":"lib/utils.js","lineNumber":472,"columnNumber":9,"usages":[{"targetObj":{"name":"thing => { return TypedArray && thing instanceof TypedArray; }","typeFullName":"ANY","lineNumber":472,"columnNumber":9,"label":"UNKNOWN"},"definedBy":{"name":"thing => { return TypedArray && thing instanceof TypedArray; }","typeFullName":"ANY","lineNumber":472,"columnNumber":9,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous1:anonymous","signature":"","fileName":"lib/utils.js","lineNumber":17,"columnNumber":9,"usages":[{"targetObj":{"name":"(thing)","typeFullName":"ANY","lineNumber":17,"columnNumber":9,"label":"UNKNOWN"},"definedBy":{"name":"(thing)","typeFullName":"ANY","lineNumber":17,"columnNumber":9,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"thing","typeFullName":"ANY","position":1,"lineNumber":17,"columnNumber":10,"label":"PARAM"},"definedBy":{"name":"thing","typeFullName":"ANY","position":1,"lineNumber":17,"columnNumber":10,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"kindOf","resolvedMethod":"kindOf","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":17,"columnNumber":20}]},{"targetObj":{"name":"kindOf","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:kindOf","isExternal":true,"lineNumber":195,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"kindOf","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:kindOf","isExternal":true,"lineNumber":195,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous20:replacer","signature":"","fileName":"lib/utils.js","lineNumber":522,"columnNumber":4,"usages":[{"targetObj":{"name":"function replacer(m, p1, p2)","typeFullName":"ANY","lineNumber":522,"columnNumber":4,"label":"UNKNOWN"},"definedBy":{"name":"function replacer(m, p1, p2)","typeFullName":"ANY","lineNumber":522,"columnNumber":4,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"p1","typeFullName":"ANY","position":2,"lineNumber":522,"columnNumber":25,"label":"PARAM"},"definedBy":{"name":"p1","typeFullName":"ANY","position":2,"lineNumber":522,"columnNumber":25,"label":"PARAM"},"invokedCalls":[{"callName":"toUpperCase","resolvedMethod":"p1.toUpperCase","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":523,"columnNumber":13}],"argToCalls":[]},{"targetObj":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"p1.toUpperCase","isExternal":true,"lineNumber":523,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"toUpperCase","typeFullName":"ANY","resolvedMethod":"p1.toUpperCase","isExternal":true,"lineNumber":523,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous21","signature":"","fileName":"lib/utils.js","lineNumber":529,"columnNumber":24,"usages":[{"targetObj":{"name":"anonymous21","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:anonymous21","isExternal":false,"lineNumber":529,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"anonymous21","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:anonymous21","isExternal":false,"lineNumber":529,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"hasOwnProperty","typeFullName":"lib/utils.js::program:anonymous21:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"param1_0.hasOwnProperty","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":529,"columnNumber":26,"label":"CALL"},"invokedCalls":[{"callName":"call","resolvedMethod":"hasOwnProperty.call","paramTypes":["__ecma.Array","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":529,"columnNumber":61}],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous21:anonymous","signature":"","fileName":"lib/utils.js","lineNumber":529,"columnNumber":46,"usages":[{"targetObj":{"name":"prop","typeFullName":"ANY","position":2,"lineNumber":529,"columnNumber":52,"label":"PARAM"},"definedBy":{"name":"prop","typeFullName":"ANY","position":2,"lineNumber":529,"columnNumber":52,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"hasOwnProperty.call","paramTypes":["__ecma.Array","__ecma.String"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":529,"columnNumber":61}]},{"targetObj":{"name":"(obj, prop)","typeFullName":"ANY","lineNumber":529,"columnNumber":46,"label":"UNKNOWN"},"definedBy":{"name":"(obj, prop)","typeFullName":"ANY","lineNumber":529,"columnNumber":46,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"call","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:anonymous21:<returnValue>:call","isExternal":true,"lineNumber":529,"columnNumber":61,"label":"CALL"},"definedBy":{"name":"call","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:anonymous21:<returnValue>:call","isExternal":true,"lineNumber":529,"columnNumber":61,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"call","typeFullName":"ANY","resolvedMethod":"(obj: ANY, prop: ANY) => ANY:call","isExternal":true,"lineNumber":529,"columnNumber":61,"label":"CALL"},"definedBy":{"name":"call","typeFullName":"ANY","resolvedMethod":"(obj: ANY, prop: ANY) => ANY:call","isExternal":true,"lineNumber":529,"columnNumber":61,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":529,"columnNumber":47,"label":"PARAM"},"definedBy":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":529,"columnNumber":47,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"hasOwnProperty.call","paramTypes":["__ecma.Array","__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":529,"columnNumber":61}]}]},{"code":"","fullName":"lib/utils.js::program:anonymous22:anonymous","signature":"","fileName":"lib/utils.js","lineNumber":544,"columnNumber":23,"usages":[{"targetObj":{"name":"(descriptor, name)","typeFullName":"ANY","lineNumber":544,"columnNumber":23,"label":"UNKNOWN"},"definedBy":{"name":"(descriptor, name)","typeFullName":"ANY","lineNumber":544,"columnNumber":23,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"descriptor","typeFullName":"ANY","position":1,"lineNumber":544,"columnNumber":24,"label":"PARAM"},"definedBy":{"name":"descriptor","typeFullName":"ANY","position":1,"lineNumber":544,"columnNumber":24,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"reducer","resolvedMethod":"reducer","paramTypes":["() => never","ANY","__ecma.Array"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":546,"columnNumber":15}]},{"targetObj":{"name":"name","typeFullName":"ANY","position":2,"lineNumber":544,"columnNumber":36,"label":"PARAM"},"definedBy":{"name":"name","typeFullName":"ANY","position":2,"lineNumber":544,"columnNumber":36,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"reducer","resolvedMethod":"reducer","paramTypes":["() => never","ANY","__ecma.Array"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":546,"columnNumber":15}]},{"targetObj":{"name":"reducer","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:reducer","isExternal":true,"lineNumber":546,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"reducer","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:reducer","isExternal":true,"lineNumber":546,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous23:anonymous","signature":"","fileName":"lib/utils.js","lineNumber":560,"columnNumber":25,"usages":[{"targetObj":{"name":"(descriptor, name)","typeFullName":"ANY","lineNumber":560,"columnNumber":25,"label":"UNKNOWN"},"definedBy":{"name":"(descriptor, name)","typeFullName":"ANY","lineNumber":560,"columnNumber":25,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"name","typeFullName":"ANY","position":2,"lineNumber":560,"columnNumber":38,"label":"PARAM"},"definedBy":{"name":"name","typeFullName":"ANY","position":2,"lineNumber":560,"columnNumber":38,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"indexOf","resolvedMethod":"'callee'].indexOf","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":562,"columnNumber":27}]},{"targetObj":{"name":"value","typeFullName":"void","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"obj[name]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":566,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"isFunction","resolvedMethod":"isFunction","paramTypes":["void"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":568,"columnNumber":9}]}]},{"code":"","fullName":"lib/utils.js::program:anonymous23:anonymous:anonymous","signature":"","fileName":"lib/utils.js","lineNumber":578,"columnNumber":23,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":578,"columnNumber":23,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":578,"columnNumber":23,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous24:anonymous:anonymous","signature":"","fileName":"lib/utils.js","lineNumber":589,"columnNumber":16,"usages":[{"targetObj":{"name":"value => { obj[value] = true; }","typeFullName":"ANY","lineNumber":589,"columnNumber":16,"label":"UNKNOWN"},"definedBy":{"name":"value => { obj[value] = true; }","typeFullName":"ANY","lineNumber":589,"columnNumber":16,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous24:define","signature":"","fileName":"lib/utils.js","lineNumber":588,"columnNumber":17,"usages":[{"targetObj":{"name":"define","typeFullName":"void","resolvedMethod":"lib/utils.js::program:anonymous24:define","isExternal":false,"lineNumber":594,"columnNumber":51,"label":"CALL"},"definedBy":{"name":"define","typeFullName":"void","resolvedMethod":"lib/utils.js::program:anonymous24:define","isExternal":false,"lineNumber":594,"columnNumber":51,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"arr","typeFullName":"ANY","position":1,"lineNumber":588,"columnNumber":18,"label":"PARAM"},"definedBy":{"name":"arr","typeFullName":"ANY","position":1,"lineNumber":588,"columnNumber":18,"label":"PARAM"},"invokedCalls":[{"callName":"forEach","resolvedMethod":"arr.forEach","paramTypes":["LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":589,"columnNumber":4}],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous28:anonymous:anonymous","signature":"","fileName":"lib/utils.js","lineNumber":650,"columnNumber":24,"usages":[{"targetObj":{"name":"(value, key)","typeFullName":"ANY","lineNumber":650,"columnNumber":24,"label":"UNKNOWN"},"definedBy":{"name":"(value, key)","typeFullName":"ANY","lineNumber":650,"columnNumber":24,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":650,"columnNumber":25,"label":"PARAM"},"definedBy":{"name":"value","typeFullName":"ANY","position":1,"lineNumber":650,"columnNumber":25,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"visit","resolvedMethod":"visit","paramTypes":["void","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":651,"columnNumber":31}]},{"targetObj":{"name":"reducedValue","typeFullName":"object","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"visit","typeFullName":"object","resolvedMethod":"lib/utils.js::program:anonymous28:visit","isExternal":null,"lineNumber":651,"columnNumber":31,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"isUndefined","resolvedMethod":"isUndefined","paramTypes":["object"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":652,"columnNumber":11}]}]},{"code":"","fullName":"lib/utils.js::program:anonymous28:visit","signature":"","fileName":"lib/utils.js","lineNumber":639,"columnNumber":16,"usages":[{"targetObj":{"name":"visit","typeFullName":"object","resolvedMethod":"lib/utils.js::program:anonymous28:visit","isExternal":false,"lineNumber":664,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"visit","typeFullName":"object","resolvedMethod":"lib/utils.js::program:anonymous28:visit","isExternal":false,"lineNumber":664,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"source","typeFullName":"ANY","position":1,"lineNumber":639,"columnNumber":17,"label":"PARAM"},"definedBy":{"name":"source","typeFullName":"ANY","position":1,"lineNumber":639,"columnNumber":17,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isObject","resolvedMethod":"isObject","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":641,"columnNumber":8},{"callName":"indexOf","resolvedMethod":"stack.indexOf","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":642,"columnNumber":10},{"callName":"isArray","resolvedMethod":"isArray","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":648,"columnNumber":23},{"callName":"forEach","resolvedMethod":"forEach","paramTypes":["__ecma.Boolean","LAMBDA"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":650,"columnNumber":8}]}]},{"code":"","fullName":"lib/utils.js::program:anonymous2:anonymous","signature":"","fileName":"lib/utils.js","lineNumber":20,"columnNumber":27,"usages":[{"targetObj":{"name":"thing => typeof thing === type","typeFullName":"ANY","lineNumber":20,"columnNumber":27,"label":"UNKNOWN"},"definedBy":{"name":"thing => typeof thing === type","typeFullName":"ANY","lineNumber":20,"columnNumber":27,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous30","signature":"","fileName":"lib/utils.js","lineNumber":675,"columnNumber":23,"usages":[{"targetObj":{"name":"anonymous30","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:anonymous30","isExternal":false,"lineNumber":675,"columnNumber":22,"label":"CALL"},"definedBy":{"name":"anonymous30","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:anonymous30","isExternal":false,"lineNumber":675,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous30:anonymous","signature":"","fileName":"lib/utils.js","lineNumber":680,"columnNumber":33,"usages":[{"targetObj":{"name":"anonymous","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:anonymous30:anonymous","isExternal":false,"lineNumber":680,"columnNumber":32,"label":"CALL"},"definedBy":{"name":"anonymous","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:anonymous30:anonymous","isExternal":false,"lineNumber":680,"columnNumber":32,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"token","typeFullName":"__ecma.String","position":1,"lineNumber":680,"columnNumber":34,"label":"PARAM"},"definedBy":{"name":"token","typeFullName":"__ecma.String","position":1,"lineNumber":680,"columnNumber":34,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"postMessage","resolvedMethod":"_global.postMessage","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":689,"columnNumber":6}]},{"targetObj":{"name":"callbacks","typeFullName":"Array<any>","position":2,"lineNumber":680,"columnNumber":41,"label":"PARAM"},"definedBy":{"name":"callbacks","typeFullName":"Array<any>","position":2,"lineNumber":680,"columnNumber":41,"label":"PARAM"},"invokedCalls":[{"callName":"shift","resolvedMethod":"callbacks.shift","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":683,"columnNumber":28},{"callName":"push","resolvedMethod":"callbacks.push","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":688,"columnNumber":6}],"argToCalls":[]},{"targetObj":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"globalThis:addEventListener","isExternal":true,"lineNumber":681,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"addEventListener","typeFullName":"ANY","resolvedMethod":"globalThis:addEventListener","isExternal":true,"lineNumber":681,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous30:anonymous1","signature":"","fileName":"lib/utils.js","lineNumber":691,"columnNumber":37,"usages":[{"targetObj":{"name":"(cb)","typeFullName":"ANY","lineNumber":691,"columnNumber":37,"label":"UNKNOWN"},"definedBy":{"name":"(cb)","typeFullName":"ANY","lineNumber":691,"columnNumber":37,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"cb","typeFullName":"ANY","position":1,"lineNumber":691,"columnNumber":38,"label":"PARAM"},"definedBy":{"name":"cb","typeFullName":"ANY","position":1,"lineNumber":691,"columnNumber":38,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"setTimeout","resolvedMethod":"setTimeout","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":691,"columnNumber":45}]},{"targetObj":{"name":"setTimeout","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:setTimeout","isExternal":true,"lineNumber":691,"columnNumber":45,"label":"CALL"},"definedBy":{"name":"setTimeout","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:setTimeout","isExternal":true,"lineNumber":691,"columnNumber":45,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous30:anonymous:anonymous","signature":"","fileName":"lib/utils.js","lineNumber":681,"columnNumber":40,"usages":[{"targetObj":{"name":"({source, data})","typeFullName":"ANY","lineNumber":681,"columnNumber":40,"label":"UNKNOWN"},"definedBy":{"name":"({source, data})","typeFullName":"ANY","lineNumber":681,"columnNumber":40,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"callbacks.shift()","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:callbacks.shift()","isExternal":true,"lineNumber":683,"columnNumber":28,"label":"CALL"},"definedBy":{"name":"callbacks.shift()","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:callbacks.shift()","isExternal":true,"lineNumber":683,"columnNumber":28,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"shift","typeFullName":"ANY","resolvedMethod":"Array<any>:shift","isExternal":true,"lineNumber":683,"columnNumber":28,"label":"CALL"},"definedBy":{"name":"shift","typeFullName":"ANY","resolvedMethod":"Array<any>:shift","isExternal":true,"lineNumber":683,"columnNumber":28,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous30:anonymous:anonymous1","signature":"","fileName":"lib/utils.js","lineNumber":687,"columnNumber":11,"usages":[{"targetObj":{"name":"(cb)","typeFullName":"ANY","lineNumber":687,"columnNumber":11,"label":"UNKNOWN"},"definedBy":{"name":"(cb)","typeFullName":"ANY","lineNumber":687,"columnNumber":11,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"cb","typeFullName":"ANY","position":1,"lineNumber":687,"columnNumber":12,"label":"PARAM"},"definedBy":{"name":"cb","typeFullName":"ANY","position":1,"lineNumber":687,"columnNumber":12,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"push","resolvedMethod":"callbacks.push","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":688,"columnNumber":6}]},{"targetObj":{"name":"postMessage","typeFullName":"ANY","resolvedMethod":"globalThis:postMessage","isExternal":true,"lineNumber":689,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"postMessage","typeFullName":"ANY","resolvedMethod":"globalThis:postMessage","isExternal":true,"lineNumber":689,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous9","signature":"","fileName":"lib/utils.js","lineNumber":286,"columnNumber":17,"usages":[{"targetObj":{"name":"anonymous9","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:anonymous9","isExternal":false,"lineNumber":286,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"anonymous9","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:anonymous9","isExternal":false,"lineNumber":286,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:anonymous:anonymous","signature":"","fileName":"lib/utils.js","lineNumber":10,"columnNumber":25,"usages":[{"targetObj":{"name":"call","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call","isExternal":true,"lineNumber":11,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"call","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call","isExternal":true,"lineNumber":11,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"str","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"toString.call","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call","isExternal":null,"lineNumber":11,"columnNumber":16,"label":"CALL"},"invokedCalls":[{"callName":"slice","resolvedMethod":"str.slice","paramTypes":["__ecma.Number","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":12,"columnNumber":39}],"argToCalls":[]},{"targetObj":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call:<returnValue>:slice:<returnValue>:toLowerCase","isExternal":true,"lineNumber":12,"columnNumber":39,"label":"CALL"},"definedBy":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call:<returnValue>:slice:<returnValue>:toLowerCase","isExternal":true,"lineNumber":12,"columnNumber":39,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"thing => { const str = toString.call","typeFullName":"ANY","lineNumber":10,"columnNumber":25,"label":"UNKNOWN"},"definedBy":{"name":"thing => { const str = toString.call","typeFullName":"ANY","lineNumber":10,"columnNumber":25,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"slice","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call:<returnValue>:slice","isExternal":true,"lineNumber":12,"columnNumber":39,"label":"CALL"},"definedBy":{"name":"slice","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call:<returnValue>:slice","isExternal":true,"lineNumber":12,"columnNumber":39,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"thing","typeFullName":"ANY","position":1,"lineNumber":10,"columnNumber":25,"label":"PARAM"},"definedBy":{"name":"thing","typeFullName":"ANY","position":1,"lineNumber":10,"columnNumber":25,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"toString.call","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":11,"columnNumber":16}]},{"targetObj":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"__ecma.String:slice:<returnValue>:toLowerCase","isExternal":true,"lineNumber":12,"columnNumber":39,"label":"CALL"},"definedBy":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"__ecma.String:slice:<returnValue>:toLowerCase","isExternal":true,"lineNumber":12,"columnNumber":39,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:endsWith","signature":"","fileName":"lib/utils.js","lineNumber":431,"columnNumber":17,"usages":[{"targetObj":{"name":"str","typeFullName":"__ecma.String","position":1,"lineNumber":431,"columnNumber":18,"label":"PARAM"},"definedBy":{"name":"str","typeFullName":"__ecma.String","position":1,"lineNumber":431,"columnNumber":18,"label":"PARAM"},"invokedCalls":[{"callName":"indexOf","resolvedMethod":"str.indexOf","paramTypes":["__ecma.String","__ecma.Number"],"returnType":"ANY","isExternal":true,"lineNumber":437,"columnNumber":20}],"argToCalls":[{"callName":"String","resolvedMethod":"String","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":432,"columnNumber":8}]},{"targetObj":{"name":"searchString","typeFullName":"__ecma.String","position":2,"lineNumber":431,"columnNumber":23,"label":"PARAM"},"definedBy":{"name":"searchString","typeFullName":"__ecma.String","position":2,"lineNumber":431,"columnNumber":23,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"indexOf","resolvedMethod":"str.indexOf","paramTypes":["__ecma.String","__ecma.Number"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":437,"columnNumber":20}]},{"targetObj":{"name":"position","typeFullName":"__ecma.Number","position":3,"lineNumber":431,"columnNumber":37,"label":"PARAM"},"definedBy":{"name":"position","typeFullName":"__ecma.Number","position":3,"lineNumber":431,"columnNumber":37,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"indexOf","resolvedMethod":"str.indexOf","paramTypes":["__ecma.String","__ecma.Number"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":437,"columnNumber":20}]},{"targetObj":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"String:<returnValue>:indexOf","isExternal":true,"lineNumber":437,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"String:<returnValue>:indexOf","isExternal":true,"lineNumber":437,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"(str, searchString, position)","typeFullName":"ANY","lineNumber":431,"columnNumber":17,"label":"UNKNOWN"},"definedBy":{"name":"(str, searchString, position)","typeFullName":"ANY","lineNumber":431,"columnNumber":17,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.assignmentMinus","typeFullName":"ANY","resolvedMethod":"<operator>.assignmentMinus","isExternal":true,"lineNumber":436,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"<operator>.assignmentMinus","typeFullName":"ANY","resolvedMethod":"<operator>.assignmentMinus","isExternal":true,"lineNumber":436,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call:<returnValue>:indexOf","isExternal":true,"lineNumber":437,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"indexOf","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call:<returnValue>:indexOf","isExternal":true,"lineNumber":437,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:extend","signature":"","fileName":"lib/utils.js","lineNumber":344,"columnNumber":15,"usages":[{"targetObj":{"name":"(a, b, thisArg, {allOwnKeys}= {})","typeFullName":"ANY","lineNumber":344,"columnNumber":15,"label":"UNKNOWN"},"definedBy":{"name":"(a, b, thisArg, {allOwnKeys}= {})","typeFullName":"ANY","lineNumber":344,"columnNumber":15,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"b","typeFullName":"ANY","position":2,"lineNumber":344,"columnNumber":19,"label":"PARAM"},"definedBy":{"name":"b","typeFullName":"ANY","position":2,"lineNumber":344,"columnNumber":19,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"forEach","resolvedMethod":"forEach","paramTypes":["ANY","LAMBDA","ANY"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":345,"columnNumber":2}]},{"targetObj":{"name":"thisArg","typeFullName":"ANY","position":3,"lineNumber":344,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"thisArg","typeFullName":"ANY","position":3,"lineNumber":344,"columnNumber":22,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"bind","resolvedMethod":"bind","paramTypes":["Array<any>","__ecma.Boolean"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":347,"columnNumber":15}]}]},{"code":"","fullName":"lib/utils.js::program:findKey","signature":"","fileName":"lib/utils.js","lineNumber":272,"columnNumber":0,"usages":[{"targetObj":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"Array<string>:<indexAccess>:toLowerCase","isExternal":true,"lineNumber":279,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"Array<string>:<indexAccess>:toLowerCase","isExternal":true,"lineNumber":279,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":272,"columnNumber":17,"label":"PARAM"},"definedBy":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":272,"columnNumber":17,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"keys","resolvedMethod":"Object.keys","paramTypes":["__ecma.Array"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":274,"columnNumber":15}]},{"targetObj":{"name":"key","typeFullName":"ANY","position":2,"lineNumber":272,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"key","typeFullName":"ANY","position":2,"lineNumber":272,"columnNumber":22,"label":"PARAM"},"invokedCalls":[{"callName":"toLowerCase","resolvedMethod":"key.toLowerCase","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":273,"columnNumber":8}],"argToCalls":[]},{"targetObj":{"name":"findKey","typeFullName":"__ecma.String","resolvedMethod":"lib/utils.js::program:findKey","isExternal":false,"lineNumber":316,"columnNumber":34,"label":"CALL"},"definedBy":{"name":"findKey","typeFullName":"__ecma.String","resolvedMethod":"lib/utils.js::program:findKey","isExternal":false,"lineNumber":316,"columnNumber":34,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"_key","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"keys[i]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":278,"columnNumber":11,"label":"CALL"},"invokedCalls":[{"callName":"toLowerCase","resolvedMethod":"_key.toLowerCase","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":279,"columnNumber":16}],"argToCalls":[]},{"targetObj":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"Object.keys:<returnValue>:<indexAccess>:toLowerCase","isExternal":true,"lineNumber":279,"columnNumber":16,"label":"CALL"},"definedBy":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"Object.keys:<returnValue>:<indexAccess>:toLowerCase","isExternal":true,"lineNumber":279,"columnNumber":16,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"__ecma.String:toLowerCase","isExternal":true,"lineNumber":521,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"__ecma.String:toLowerCase","isExternal":true,"lineNumber":521,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:forEach","signature":"","fileName":"lib/utils.js","lineNumber":239,"columnNumber":0,"usages":[{"targetObj":{"name":"key","typeFullName":"__ecma.Boolean","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"keys[i]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":266,"columnNumber":12,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"fn.call","paramTypes":["__ecma.Null","ANY","__ecma.Boolean","__ecma.Array"],"returnType":"ANY","position":3,"isExternal":true,"lineNumber":267,"columnNumber":6}]},{"targetObj":{"name":"call","typeFullName":"ANY","resolvedMethod":"Function:call","isExternal":true,"lineNumber":494,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"call","typeFullName":"ANY","resolvedMethod":"Function:call","isExternal":true,"lineNumber":494,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:forEach","isExternal":false,"lineNumber":650,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"forEach","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:forEach","isExternal":false,"lineNumber":650,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getOwnPropertyNames","typeFullName":"ANY","resolvedMethod":"Object.getOwnPropertyNames","isExternal":true,"lineNumber":407,"columnNumber":12,"label":"CALL"},"definedBy":{"name":"getOwnPropertyNames","typeFullName":"ANY","resolvedMethod":"Object.getOwnPropertyNames","isExternal":true,"lineNumber":407,"columnNumber":12,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isArray","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:isArray","isExternal":true,"lineNumber":648,"columnNumber":23,"label":"CALL"},"definedBy":{"name":"isArray","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:isArray","isExternal":true,"lineNumber":648,"columnNumber":23,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"fn","typeFullName":"Function","position":2,"lineNumber":239,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"fn","typeFullName":"Function","position":2,"lineNumber":239,"columnNumber":22,"label":"PARAM"},"invokedCalls":[{"callName":"call","resolvedMethod":"fn.call","paramTypes":["__ecma.Null","ANY","__ecma.Number","__ecma.Array"],"returnType":"ANY","isExternal":true,"lineNumber":257,"columnNumber":6},{"callName":"call","resolvedMethod":"fn.call","paramTypes":["__ecma.Null","ANY","__ecma.Boolean","__ecma.Array"],"returnType":"ANY","isExternal":true,"lineNumber":267,"columnNumber":6}],"argToCalls":[]},{"targetObj":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":239,"columnNumber":17,"label":"PARAM"},"definedBy":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":239,"columnNumber":17,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"","resolvedMethod":"_tmp_3.push","paramTypes":["__ecma.Array"],"returnType":"ANY","position":1,"isExternal":null,"lineNumber":251,"columnNumber":11},{"callName":"isArray","resolvedMethod":"isArray","paramTypes":["__ecma.Array"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":254,"columnNumber":6},{"callName":"call","resolvedMethod":"fn.call","paramTypes":["__ecma.Null","ANY","__ecma.Number","__ecma.Array"],"returnType":"ANY","position":4,"isExternal":true,"lineNumber":257,"columnNumber":6},{"callName":"getOwnPropertyNames","resolvedMethod":"Object.getOwnPropertyNames","paramTypes":["__ecma.Array"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":261,"columnNumber":30},{"callName":"keys","resolvedMethod":"Object.keys","paramTypes":["__ecma.Array"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":261,"columnNumber":64},{"callName":"call","resolvedMethod":"fn.call","paramTypes":["__ecma.Null","ANY","__ecma.Boolean","__ecma.Array"],"returnType":"ANY","position":4,"isExternal":true,"lineNumber":267,"columnNumber":6}]}]},{"code":"","fullName":"lib/utils.js::program:forEachEntry","signature":"","fileName":"lib/utils.js","lineNumber":485,"columnNumber":21,"usages":[{"targetObj":{"name":"fn","typeFullName":"Function","position":2,"lineNumber":485,"columnNumber":27,"label":"PARAM"},"definedBy":{"name":"fn","typeFullName":"Function","position":2,"lineNumber":485,"columnNumber":27,"label":"PARAM"},"invokedCalls":[{"callName":"call","resolvedMethod":"fn.call","paramTypes":["__ecma.Array","ANY","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":494,"columnNumber":4}],"argToCalls":[]},{"targetObj":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":485,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":485,"columnNumber":22,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"call","resolvedMethod":"generator.call","paramTypes":["__ecma.Array"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":488,"columnNumber":19},{"callName":"call","resolvedMethod":"fn.call","paramTypes":["__ecma.Array","ANY","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":494,"columnNumber":4}]},{"targetObj":{"name":"(obj, fn)","typeFullName":"ANY","lineNumber":485,"columnNumber":21,"label":"UNKNOWN"},"definedBy":{"name":"(obj, fn)","typeFullName":"ANY","lineNumber":485,"columnNumber":21,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"next","typeFullName":"ANY","resolvedMethod":"iterator.next","isExternal":true,"lineNumber":492,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"next","typeFullName":"ANY","resolvedMethod":"iterator.next","isExternal":true,"lineNumber":492,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"generator","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"obj && obj[Symbol.iterator]","typeFullName":"ANY","resolvedMethod":"<operator>.logicalAnd","isExternal":null,"lineNumber":486,"columnNumber":20,"label":"CALL"},"invokedCalls":[{"callName":"call","resolvedMethod":"generator.call","paramTypes":["__ecma.Array"],"returnType":"ANY","isExternal":true,"lineNumber":488,"columnNumber":19}],"argToCalls":[]},{"targetObj":{"name":"call","typeFullName":"ANY","resolvedMethod":"generator.call","isExternal":true,"lineNumber":488,"columnNumber":19,"label":"CALL"},"definedBy":{"name":"call","typeFullName":"ANY","resolvedMethod":"generator.call","isExternal":true,"lineNumber":488,"columnNumber":19,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"iterator","typeFullName":"ANY","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"generator.call","typeFullName":"ANY","resolvedMethod":"generator.call","isExternal":null,"lineNumber":488,"columnNumber":19,"label":"CALL"},"invokedCalls":[{"callName":"next","resolvedMethod":"iterator.next","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":492,"columnNumber":19}],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:freezeMethods","signature":"","fileName":"lib/utils.js","lineNumber":559,"columnNumber":22,"usages":[{"targetObj":{"name":"(obj)","typeFullName":"ANY","lineNumber":559,"columnNumber":22,"label":"UNKNOWN"},"definedBy":{"name":"(obj)","typeFullName":"ANY","lineNumber":559,"columnNumber":22,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":559,"columnNumber":23,"label":"PARAM"},"definedBy":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":559,"columnNumber":23,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"reduceDescriptors","resolvedMethod":"reduceDescriptors","paramTypes":["__ecma.Array","LAMBDA"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":560,"columnNumber":2},{"callName":"isFunction","resolvedMethod":"isFunction","paramTypes":["__ecma.Array"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":562,"columnNumber":8}]}]},{"code":"","fullName":"lib/utils.js::program:generateString","signature":"","fileName":"lib/utils.js","lineNumber":615,"columnNumber":23,"usages":[{"targetObj":{"name":"(size = 16, alphabet = ALPHABET.ALPHA_DIGIT)","typeFullName":"ANY","lineNumber":615,"columnNumber":23,"label":"UNKNOWN"},"definedBy":{"name":"(size = 16, alphabet = ALPHABET.ALPHA_DIGIT)","typeFullName":"ANY","lineNumber":615,"columnNumber":23,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"<operator>.or","typeFullName":"ANY","resolvedMethod":"<operator>.or","isExternal":true,"lineNumber":619,"columnNumber":20,"label":"CALL"},"definedBy":{"name":"<operator>.or","typeFullName":"ANY","resolvedMethod":"<operator>.or","isExternal":true,"lineNumber":619,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"random","typeFullName":"ANY","resolvedMethod":"__ecma.Math:random","isExternal":true,"lineNumber":691,"columnNumber":14,"label":"CALL"},"definedBy":{"name":"random","typeFullName":"ANY","resolvedMethod":"__ecma.Math:random","isExternal":true,"lineNumber":691,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:inherits","signature":"","fileName":"lib/utils.js","lineNumber":378,"columnNumber":17,"usages":[{"targetObj":{"name":"(constructor, superConstructor, props, descriptors)","typeFullName":"ANY","lineNumber":378,"columnNumber":17,"label":"UNKNOWN"},"definedBy":{"name":"(constructor, superConstructor, props, descriptors)","typeFullName":"ANY","lineNumber":378,"columnNumber":17,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"constructor","typeFullName":"Function","position":1,"lineNumber":378,"columnNumber":18,"label":"PARAM"},"definedBy":{"name":"constructor","typeFullName":"Function","position":1,"lineNumber":378,"columnNumber":18,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"defineProperty","resolvedMethod":"Object.defineProperty","paramTypes":["Function","__ecma.String","ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":381,"columnNumber":2}]},{"targetObj":{"name":"props","typeFullName":"ANY","position":3,"lineNumber":378,"columnNumber":49,"label":"PARAM"},"definedBy":{"name":"props","typeFullName":"ANY","position":3,"lineNumber":378,"columnNumber":49,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"assign","resolvedMethod":"Object.assign","paramTypes":["ANY","Object.getOwnPropertyNames:<returnValue>"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":384,"columnNumber":11}]},{"targetObj":{"name":"descriptors","typeFullName":"ANY","position":4,"lineNumber":378,"columnNumber":56,"label":"PARAM"},"definedBy":{"name":"descriptors","typeFullName":"ANY","position":4,"lineNumber":378,"columnNumber":56,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"create","resolvedMethod":"Object.create","paramTypes":["ANY","Object.getOwnPropertyDescriptors:<returnValue>"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":379,"columnNumber":26}]}]},{"code":"","fullName":"lib/utils.js::program:isArrayBufferView","signature":"","fileName":"lib/utils.js","lineNumber":69,"columnNumber":0,"usages":[{"targetObj":{"name":"function isArrayBufferView(val)","typeFullName":"ANY","lineNumber":69,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":"function isArrayBufferView(val)","typeFullName":"ANY","lineNumber":69,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"val","typeFullName":"ANY","position":1,"lineNumber":69,"columnNumber":27,"label":"PARAM"},"definedBy":{"name":"val","typeFullName":"ANY","position":1,"lineNumber":69,"columnNumber":27,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isView","resolvedMethod":"ArrayBuffer.isView","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":72,"columnNumber":13}]},{"targetObj":{"name":"isView","typeFullName":"ANY","resolvedMethod":"ArrayBufferConstructor:isView","isExternal":true,"lineNumber":72,"columnNumber":13,"label":"CALL"},"definedBy":{"name":"isView","typeFullName":"ANY","resolvedMethod":"ArrayBufferConstructor:isView","isExternal":true,"lineNumber":72,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isArrayBuffer","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:isArrayBuffer","isExternal":true,"lineNumber":74,"columnNumber":39,"label":"CALL"},"definedBy":{"name":"isArrayBuffer","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:isArrayBuffer","isExternal":true,"lineNumber":74,"columnNumber":39,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:isBoolean","signature":"","fileName":"lib/utils.js","lineNumber":120,"columnNumber":18,"usages":[{"targetObj":{"name":"thing => thing === true || thing === false","typeFullName":"ANY","lineNumber":120,"columnNumber":18,"label":"UNKNOWN"},"definedBy":{"name":"thing => thing === true || thing === false","typeFullName":"ANY","lineNumber":120,"columnNumber":18,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:isBuffer","signature":"","fileName":"lib/utils.js","lineNumber":47,"columnNumber":0,"usages":[{"targetObj":{"name":"isBuffer","typeFullName":"ANY","resolvedMethod":"Function:isBuffer","isExternal":true,"lineNumber":49,"columnNumber":47,"label":"CALL"},"definedBy":{"name":"isBuffer","typeFullName":"ANY","resolvedMethod":"Function:isBuffer","isExternal":true,"lineNumber":49,"columnNumber":47,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"function isBuffer(val)","typeFullName":"ANY","lineNumber":47,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":"function isBuffer(val)","typeFullName":"ANY","lineNumber":47,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"val","typeFullName":"ANY","position":1,"lineNumber":47,"columnNumber":18,"label":"PARAM"},"definedBy":{"name":"val","typeFullName":"ANY","position":1,"lineNumber":47,"columnNumber":18,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isUndefined","resolvedMethod":"isUndefined","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":48,"columnNumber":26},{"callName":"isBuffer","resolvedMethod":"val.constructor.isBuffer","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":49,"columnNumber":47}]},{"targetObj":{"name":"isFunction","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:isFunction","isExternal":true,"lineNumber":694,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"isFunction","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:isFunction","isExternal":true,"lineNumber":694,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isUndefined","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:isUndefined","isExternal":true,"lineNumber":652,"columnNumber":11,"label":"CALL"},"definedBy":{"name":"isUndefined","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:isUndefined","isExternal":true,"lineNumber":652,"columnNumber":11,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:isContextDefined","signature":"","fileName":"lib/utils.js","lineNumber":292,"columnNumber":25,"usages":[{"targetObj":{"name":"isContextDefined","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/utils.js::program:isContextDefined","isExternal":false,"lineNumber":313,"columnNumber":21,"label":"CALL"},"definedBy":{"name":"isContextDefined","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/utils.js::program:isContextDefined","isExternal":false,"lineNumber":313,"columnNumber":21,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"context","typeFullName":"ANY","position":1,"lineNumber":292,"columnNumber":26,"label":"PARAM"},"definedBy":{"name":"context","typeFullName":"ANY","position":1,"lineNumber":292,"columnNumber":26,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isUndefined","resolvedMethod":"isUndefined","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":292,"columnNumber":39}]}]},{"code":"","fullName":"lib/utils.js::program:isFormData","signature":"","fileName":"lib/utils.js","lineNumber":190,"columnNumber":19,"usages":[{"targetObj":{"name":"(thing)","typeFullName":"ANY","lineNumber":190,"columnNumber":19,"label":"UNKNOWN"},"definedBy":{"name":"(thing)","typeFullName":"ANY","lineNumber":190,"columnNumber":19,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"thing","typeFullName":"ANY","position":1,"lineNumber":190,"columnNumber":20,"label":"PARAM"},"definedBy":{"name":"thing","typeFullName":"ANY","position":1,"lineNumber":190,"columnNumber":20,"label":"PARAM"},"invokedCalls":[{"callName":"toString","resolvedMethod":"thing.toString","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":197,"columnNumber":60}],"argToCalls":[{"callName":"kindOf","resolvedMethod":"kindOf","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":195,"columnNumber":16}]}]},{"code":"","fullName":"lib/utils.js::program:isObject","signature":"","fileName":"lib/utils.js","lineNumber":112,"columnNumber":17,"usages":[{"targetObj":{"name":"isObject","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/utils.js::program:isObject","isExternal":false,"lineNumber":670,"columnNumber":12,"label":"CALL"},"definedBy":{"name":"isObject","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/utils.js::program:isObject","isExternal":false,"lineNumber":670,"columnNumber":12,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:isPlainObject","signature":"","fileName":"lib/utils.js","lineNumber":129,"columnNumber":22,"usages":[{"targetObj":{"name":"val","typeFullName":"ANY","position":1,"lineNumber":129,"columnNumber":23,"label":"PARAM"},"definedBy":{"name":"val","typeFullName":"ANY","position":1,"lineNumber":129,"columnNumber":23,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"kindOf","resolvedMethod":"kindOf","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":130,"columnNumber":6},{"callName":"getPrototypeOf","resolvedMethod":"getPrototypeOf","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":134,"columnNumber":20}]},{"targetObj":{"name":"prototype","typeFullName":"lib/utils.js::program:getPrototypeOf:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"getPrototypeOf","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:getPrototypeOf","isExternal":null,"lineNumber":134,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"getPrototypeOf","resolvedMethod":"Object.getPrototypeOf","paramTypes":["lib/utils.js::program:getPrototypeOf:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":135,"columnNumber":66}]},{"targetObj":{"name":"getPrototypeOf","typeFullName":"ANY","resolvedMethod":"Object.getPrototypeOf","isExternal":true,"lineNumber":135,"columnNumber":66,"label":"CALL"},"definedBy":{"name":"getPrototypeOf","typeFullName":"ANY","resolvedMethod":"Object.getPrototypeOf","isExternal":true,"lineNumber":135,"columnNumber":66,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isPlainObject","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/utils.js::program:isPlainObject","isExternal":false,"lineNumber":319,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"isPlainObject","typeFullName":"__ecma.Boolean","resolvedMethod":"lib/utils.js::program:isPlainObject","isExternal":false,"lineNumber":319,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"getPrototypeOf","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:getPrototypeOf","isExternal":true,"lineNumber":475,"columnNumber":40,"label":"CALL"},"definedBy":{"name":"getPrototypeOf","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:getPrototypeOf","isExternal":true,"lineNumber":475,"columnNumber":40,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:isSpecCompliantForm","signature":"","fileName":"lib/utils.js","lineNumber":632,"columnNumber":0,"usages":[{"targetObj":{"name":"function isSpecCompliantForm(thing)","typeFullName":"ANY","lineNumber":632,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":"function isSpecCompliantForm(thing)","typeFullName":"ANY","lineNumber":632,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:isStream","signature":"","fileName":"lib/utils.js","lineNumber":181,"columnNumber":17,"usages":[{"targetObj":{"name":"(val)","typeFullName":"ANY","lineNumber":181,"columnNumber":17,"label":"UNKNOWN"},"definedBy":{"name":"(val)","typeFullName":"ANY","lineNumber":181,"columnNumber":17,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"val","typeFullName":"ANY","position":1,"lineNumber":181,"columnNumber":18,"label":"PARAM"},"definedBy":{"name":"val","typeFullName":"ANY","position":1,"lineNumber":181,"columnNumber":18,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isObject","resolvedMethod":"isObject","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":181,"columnNumber":26}]}]},{"code":"","fullName":"lib/utils.js::program:isThenable","signature":"","fileName":"lib/utils.js","lineNumber":669,"columnNumber":19,"usages":[{"targetObj":{"name":"(thing)","typeFullName":"ANY","lineNumber":669,"columnNumber":19,"label":"UNKNOWN"},"definedBy":{"name":"(thing)","typeFullName":"ANY","lineNumber":669,"columnNumber":19,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"thing","typeFullName":"ANY","position":1,"lineNumber":669,"columnNumber":20,"label":"PARAM"},"definedBy":{"name":"thing","typeFullName":"ANY","position":1,"lineNumber":669,"columnNumber":20,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isObject","resolvedMethod":"isObject","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":670,"columnNumber":12},{"callName":"isFunction","resolvedMethod":"isFunction","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":670,"columnNumber":31}]}]},{"code":"","fullName":"lib/utils.js::program:kindOfTest","signature":"","fileName":"lib/utils.js","lineNumber":15,"columnNumber":19,"usages":[{"targetObj":{"name":"kindOfTest","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:kindOfTest","isExternal":false,"lineNumber":667,"columnNumber":18,"label":"CALL"},"definedBy":{"name":"kindOfTest","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:kindOfTest","isExternal":false,"lineNumber":667,"columnNumber":18,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"type","typeFullName":"ANY","position":1,"lineNumber":15,"columnNumber":20,"label":"PARAM"},"definedBy":{"name":"type","typeFullName":"ANY","position":1,"lineNumber":15,"columnNumber":20,"label":"PARAM"},"invokedCalls":[{"callName":"toLowerCase","resolvedMethod":"type.toLowerCase","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":16,"columnNumber":9}],"argToCalls":[]},{"targetObj":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"type.toLowerCase","isExternal":true,"lineNumber":16,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"type.toLowerCase","isExternal":true,"lineNumber":16,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:matchAll","signature":"","fileName":"lib/utils.js","lineNumber":506,"columnNumber":17,"usages":[{"targetObj":{"name":"(regExp, str)","typeFullName":"ANY","lineNumber":506,"columnNumber":17,"label":"UNKNOWN"},"definedBy":{"name":"(regExp, str)","typeFullName":"ANY","lineNumber":506,"columnNumber":17,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"matches","typeFullName":"__ecma.String:exec:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"regExp.exec","typeFullName":"ANY","resolvedMethod":"__ecma.String:exec","isExternal":null,"lineNumber":510,"columnNumber":20,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"push","resolvedMethod":"arr.push","paramTypes":["__ecma.String:exec:<returnValue>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":511,"columnNumber":4}]},{"targetObj":{"name":"str","typeFullName":"__ecma.String","position":2,"lineNumber":506,"columnNumber":26,"label":"PARAM"},"definedBy":{"name":"str","typeFullName":"__ecma.String","position":2,"lineNumber":506,"columnNumber":26,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"exec","resolvedMethod":"regExp.exec","paramTypes":["__ecma.String"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":510,"columnNumber":20}]},{"targetObj":{"name":"arr","typeFullName":"__ecma.Array","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"__ecma.Array.factory","typeFullName":"__ecma.Array.factory","resolvedMethod":"__ecma.Array.factory","isExternal":null,"lineNumber":508,"columnNumber":14,"label":"CALL"},"invokedCalls":[{"callName":"push","resolvedMethod":"arr.push","paramTypes":["__ecma.String:exec:<returnValue>"],"returnType":"ANY","isExternal":true,"lineNumber":511,"columnNumber":4}],"argToCalls":[]},{"targetObj":{"name":"regExp","typeFullName":"__ecma.String","position":1,"lineNumber":506,"columnNumber":18,"label":"PARAM"},"definedBy":{"name":"regExp","typeFullName":"__ecma.String","position":1,"lineNumber":506,"columnNumber":18,"label":"PARAM"},"invokedCalls":[{"callName":"exec","resolvedMethod":"regExp.exec","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":510,"columnNumber":20}],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:merge","signature":"","fileName":"lib/utils.js","lineNumber":312,"columnNumber":0,"usages":[{"targetObj":{"name":"merge","typeFullName":"object","resolvedMethod":"lib/utils.js::program:merge","isExternal":false,"lineNumber":320,"columnNumber":26,"label":"CALL"},"definedBy":{"name":"merge","typeFullName":"object","resolvedMethod":"lib/utils.js::program:merge","isExternal":false,"lineNumber":320,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:merge:assignValue","signature":"","fileName":"lib/utils.js","lineNumber":315,"columnNumber":22,"usages":[{"targetObj":{"name":"(val, key)","typeFullName":"ANY","lineNumber":315,"columnNumber":22,"label":"UNKNOWN"},"definedBy":{"name":"(val, key)","typeFullName":"ANY","lineNumber":315,"columnNumber":22,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"val","typeFullName":"ANY","position":1,"lineNumber":315,"columnNumber":23,"label":"PARAM"},"definedBy":{"name":"val","typeFullName":"ANY","position":1,"lineNumber":315,"columnNumber":23,"label":"PARAM"},"invokedCalls":[{"callName":"slice","resolvedMethod":"val.slice","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":322,"columnNumber":26}],"argToCalls":[{"callName":"isPlainObject","resolvedMethod":"isPlainObject","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":317,"columnNumber":44},{"callName":"merge","resolvedMethod":"merge","paramTypes":["ANY","Array<any>"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":318,"columnNumber":26},{"callName":"isPlainObject","resolvedMethod":"isPlainObject","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":319,"columnNumber":15},{"callName":"merge","resolvedMethod":"merge","paramTypes":["ANY","Array<any>"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":320,"columnNumber":26},{"callName":"isArray","resolvedMethod":"isArray","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":321,"columnNumber":15}]},{"targetObj":{"name":"key","typeFullName":"ANY","position":2,"lineNumber":315,"columnNumber":28,"label":"PARAM"},"definedBy":{"name":"key","typeFullName":"ANY","position":2,"lineNumber":315,"columnNumber":28,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"findKey","resolvedMethod":"findKey","paramTypes":["ArrayBufferConstructor:isView:<returnValue>","__ecma.Boolean"],"returnType":"ANY","position":2,"isExternal":false,"lineNumber":316,"columnNumber":34}]},{"targetObj":{"name":"slice","typeFullName":"ANY","resolvedMethod":"Array<any>:slice","isExternal":true,"lineNumber":322,"columnNumber":26,"label":"CALL"},"definedBy":{"name":"slice","typeFullName":"ANY","resolvedMethod":"Array<any>:slice","isExternal":true,"lineNumber":322,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:noop","signature":"","fileName":"lib/utils.js","lineNumber":599,"columnNumber":13,"usages":[{"targetObj":{"name":"()","typeFullName":"ANY","lineNumber":599,"columnNumber":13,"label":"UNKNOWN"},"definedBy":{"name":"()","typeFullName":"ANY","lineNumber":599,"columnNumber":13,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:reduceDescriptors","signature":"","fileName":"lib/utils.js","lineNumber":540,"columnNumber":26,"usages":[{"targetObj":{"name":"reduceDescriptors","typeFullName":"void","resolvedMethod":"lib/utils.js::program:reduceDescriptors","isExternal":false,"lineNumber":560,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"reduceDescriptors","typeFullName":"void","resolvedMethod":"lib/utils.js::program:reduceDescriptors","isExternal":false,"lineNumber":560,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":540,"columnNumber":27,"label":"PARAM"},"definedBy":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":540,"columnNumber":27,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"getOwnPropertyDescriptors","resolvedMethod":"Object.getOwnPropertyDescriptors","paramTypes":["__ecma.Array"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":541,"columnNumber":22},{"callName":"reducer","resolvedMethod":"reducer","paramTypes":["() => never","ANY","__ecma.Array"],"returnType":"ANY","position":3,"isExternal":true,"lineNumber":546,"columnNumber":15},{"callName":"defineProperties","resolvedMethod":"Object.defineProperties","paramTypes":["__ecma.Array","object"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":551,"columnNumber":2}]},{"targetObj":{"name":"descriptors","typeFullName":"Object.getOwnPropertyDescriptors:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"Object.getOwnPropertyDescriptors","typeFullName":"Object.getOwnPropertyDescriptors","resolvedMethod":"Object.getOwnPropertyDescriptors","isExternal":null,"lineNumber":541,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"forEach","resolvedMethod":"forEach","paramTypes":["Object.getOwnPropertyDescriptors:<returnValue>","LAMBDA"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":544,"columnNumber":2}]},{"targetObj":{"name":"getOwnPropertyDescriptors","typeFullName":"ANY","resolvedMethod":"Object.getOwnPropertyDescriptors","isExternal":true,"lineNumber":541,"columnNumber":22,"label":"CALL"},"definedBy":{"name":"getOwnPropertyDescriptors","typeFullName":"ANY","resolvedMethod":"Object.getOwnPropertyDescriptors","isExternal":true,"lineNumber":541,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:stripBOM","signature":"","fileName":"lib/utils.js","lineNumber":362,"columnNumber":17,"usages":[{"targetObj":{"name":"(content)","typeFullName":"ANY","lineNumber":362,"columnNumber":17,"label":"UNKNOWN"},"definedBy":{"name":"(content)","typeFullName":"ANY","lineNumber":362,"columnNumber":17,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"content","typeFullName":"__ecma.String","position":1,"lineNumber":362,"columnNumber":18,"label":"PARAM"},"definedBy":{"name":"content","typeFullName":"__ecma.String","position":1,"lineNumber":362,"columnNumber":18,"label":"PARAM"},"invokedCalls":[{"callName":"charCodeAt","resolvedMethod":"content.charCodeAt","paramTypes":["__ecma.Number"],"returnType":"ANY","isExternal":true,"lineNumber":363,"columnNumber":6},{"callName":"slice","resolvedMethod":"content.slice","paramTypes":["__ecma.Number"],"returnType":"ANY","isExternal":true,"lineNumber":364,"columnNumber":14}],"argToCalls":[]},{"targetObj":{"name":"charCodeAt","typeFullName":"ANY","resolvedMethod":"__ecma.String:charCodeAt","isExternal":true,"lineNumber":363,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"charCodeAt","typeFullName":"ANY","resolvedMethod":"__ecma.String:charCodeAt","isExternal":true,"lineNumber":363,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"charCodeAt","typeFullName":"ANY","resolvedMethod":"__ecma.String:slice:<returnValue>:charCodeAt","isExternal":true,"lineNumber":363,"columnNumber":6,"label":"CALL"},"definedBy":{"name":"charCodeAt","typeFullName":"ANY","resolvedMethod":"__ecma.String:slice:<returnValue>:charCodeAt","isExternal":true,"lineNumber":363,"columnNumber":6,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:toArray","signature":"","fileName":"lib/utils.js","lineNumber":449,"columnNumber":16,"usages":[{"targetObj":{"name":"thing","typeFullName":"ANY","position":1,"lineNumber":449,"columnNumber":17,"label":"PARAM"},"definedBy":{"name":"thing","typeFullName":"ANY","position":1,"lineNumber":449,"columnNumber":17,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isArray","resolvedMethod":"isArray","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":451,"columnNumber":6}]},{"targetObj":{"name":"(thing)","typeFullName":"ANY","lineNumber":449,"columnNumber":16,"label":"UNKNOWN"},"definedBy":{"name":"(thing)","typeFullName":"ANY","lineNumber":449,"columnNumber":16,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"isNumber","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:isNumber","isExternal":true,"lineNumber":453,"columnNumber":7,"label":"CALL"},"definedBy":{"name":"isNumber","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:isNumber","isExternal":true,"lineNumber":453,"columnNumber":7,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"i","typeFullName":"__ecma.Number","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"thing.length","typeFullName":"ANY","resolvedMethod":"<operator>.fieldAccess","isExternal":null,"lineNumber":452,"columnNumber":10,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"isNumber","resolvedMethod":"isNumber","paramTypes":["__ecma.Number"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":453,"columnNumber":7}]},{"targetObj":{"name":"arr","typeFullName":"__ecma.Array","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new Array","typeFullName":"ANY","resolvedMethod":null,"isExternal":null,"lineNumber":454,"columnNumber":14,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"Array","resolvedMethod":"Array","paramTypes":["__ecma.Number"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":454,"columnNumber":8}]}]},{"code":"","fullName":"lib/utils.js::program:toCamelCase","signature":"","fileName":"lib/utils.js","lineNumber":520,"columnNumber":20,"usages":[{"targetObj":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call:<returnValue>:toLowerCase","isExternal":true,"lineNumber":521,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call:<returnValue>:toLowerCase","isExternal":true,"lineNumber":521,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"String:<returnValue>:toLowerCase","isExternal":true,"lineNumber":521,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"toLowerCase","typeFullName":"ANY","resolvedMethod":"String:<returnValue>:toLowerCase","isExternal":true,"lineNumber":521,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"str","typeFullName":"ANY","position":1,"lineNumber":520,"columnNumber":20,"label":"PARAM"},"definedBy":{"name":"str","typeFullName":"ANY","position":1,"lineNumber":520,"columnNumber":20,"label":"PARAM"},"invokedCalls":[{"callName":"toLowerCase","resolvedMethod":"str.toLowerCase","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":521,"columnNumber":9}],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"__ecma.String:toLowerCase:<returnValue>:replace","isExternal":true,"lineNumber":521,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"__ecma.String:toLowerCase:<returnValue>:replace","isExternal":true,"lineNumber":521,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"String:<returnValue>:toLowerCase:<returnValue>:replace","isExternal":true,"lineNumber":521,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"String:<returnValue>:toLowerCase:<returnValue>:replace","isExternal":true,"lineNumber":521,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call:<returnValue>:toLowerCase:<returnValue>:replace","isExternal":true,"lineNumber":521,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call:<returnValue>:toLowerCase:<returnValue>:replace","isExternal":true,"lineNumber":521,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"str => { return str.toLowerCase","typeFullName":"ANY","lineNumber":520,"columnNumber":20,"label":"UNKNOWN"},"definedBy":{"name":"str => { return str.toLowerCase","typeFullName":"ANY","lineNumber":520,"columnNumber":20,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:toFiniteNumber","signature":"","fileName":"lib/utils.js","lineNumber":601,"columnNumber":23,"usages":[{"targetObj":{"name":"(value, defaultValue)","typeFullName":"ANY","lineNumber":601,"columnNumber":23,"label":"UNKNOWN"},"definedBy":{"name":"(value, defaultValue)","typeFullName":"ANY","lineNumber":601,"columnNumber":23,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:toFlatObject","signature":"","fileName":"lib/utils.js","lineNumber":396,"columnNumber":21,"usages":[{"targetObj":{"name":"propFilter","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:propFilter","isExternal":true,"lineNumber":411,"columnNumber":26,"label":"CALL"},"definedBy":{"name":"propFilter","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:propFilter","isExternal":true,"lineNumber":411,"columnNumber":26,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"prop","typeFullName":"__ecma.String","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"props[i]","typeFullName":"ANY","resolvedMethod":"<operator>.indexAccess","isExternal":null,"lineNumber":410,"columnNumber":13,"label":"CALL"},"invokedCalls":[],"argToCalls":[{"callName":"propFilter","resolvedMethod":"propFilter","paramTypes":["__ecma.String","__ecma.Boolean","object"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":411,"columnNumber":26}]},{"targetObj":{"name":"destObj","typeFullName":"ANY","position":2,"lineNumber":396,"columnNumber":33,"label":"PARAM"},"definedBy":{"name":"destObj","typeFullName":"ANY","position":2,"lineNumber":396,"columnNumber":33,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"propFilter","resolvedMethod":"propFilter","paramTypes":["__ecma.String","__ecma.Boolean","object"],"returnType":"ANY","position":3,"isExternal":true,"lineNumber":411,"columnNumber":26},{"callName":"filter","resolvedMethod":"filter","paramTypes":["__ecma.Boolean","object"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":417,"columnNumber":36}]},{"targetObj":{"name":"(sourceObj, destObj, filter, propFilter)","typeFullName":"ANY","lineNumber":396,"columnNumber":21,"label":"UNKNOWN"},"definedBy":{"name":"(sourceObj, destObj, filter, propFilter)","typeFullName":"ANY","lineNumber":396,"columnNumber":21,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"filter","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:filter","isExternal":true,"lineNumber":417,"columnNumber":36,"label":"CALL"},"definedBy":{"name":"filter","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:filter","isExternal":true,"lineNumber":417,"columnNumber":36,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"sourceObj","typeFullName":"ANY","position":1,"lineNumber":396,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"sourceObj","typeFullName":"ANY","position":1,"lineNumber":396,"columnNumber":22,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"getOwnPropertyNames","resolvedMethod":"Object.getOwnPropertyNames","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":407,"columnNumber":12},{"callName":"propFilter","resolvedMethod":"propFilter","paramTypes":["__ecma.String","__ecma.Boolean","object"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":411,"columnNumber":26},{"callName":"getPrototypeOf","resolvedMethod":"getPrototypeOf","paramTypes":["__ecma.Boolean"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":416,"columnNumber":36},{"callName":"filter","resolvedMethod":"filter","paramTypes":["__ecma.Boolean","object"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":417,"columnNumber":36}]}]},{"code":"","fullName":"lib/utils.js::program:toJSONObject","signature":"","fileName":"lib/utils.js","lineNumber":636,"columnNumber":21,"usages":[{"targetObj":{"name":"(obj)","typeFullName":"ANY","lineNumber":636,"columnNumber":21,"label":"UNKNOWN"},"definedBy":{"name":"(obj)","typeFullName":"ANY","lineNumber":636,"columnNumber":21,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":636,"columnNumber":22,"label":"PARAM"},"definedBy":{"name":"obj","typeFullName":"ANY","position":1,"lineNumber":636,"columnNumber":22,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"visit","resolvedMethod":"visit","paramTypes":["__ecma.Array","__ecma.Number"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":664,"columnNumber":9}]},{"targetObj":{"name":"stack","typeFullName":"__ecma.Array","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"new Array","typeFullName":"ANY","resolvedMethod":null,"isExternal":null,"lineNumber":637,"columnNumber":16,"label":"CALL"},"invokedCalls":[{"callName":"indexOf","resolvedMethod":"stack.indexOf","paramTypes":["__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":642,"columnNumber":10}],"argToCalls":[{"callName":"Array","resolvedMethod":"Array","paramTypes":["__ecma.Number"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":637,"columnNumber":8}]}]},{"code":"","fullName":"lib/utils.js::program:toObjectSet","signature":"","fileName":"lib/utils.js","lineNumber":585,"columnNumber":20,"usages":[{"targetObj":{"name":"(arrayOrString, delimiter)","typeFullName":"ANY","lineNumber":585,"columnNumber":20,"label":"UNKNOWN"},"definedBy":{"name":"(arrayOrString, delimiter)","typeFullName":"ANY","lineNumber":585,"columnNumber":20,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"arrayOrString","typeFullName":"ANY","position":1,"lineNumber":585,"columnNumber":21,"label":"PARAM"},"definedBy":{"name":"arrayOrString","typeFullName":"ANY","position":1,"lineNumber":585,"columnNumber":21,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"isArray","resolvedMethod":"isArray","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":594,"columnNumber":2},{"callName":"define","resolvedMethod":"define","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":594,"columnNumber":27},{"callName":"String","resolvedMethod":"String","paramTypes":["Array<any>"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":594,"columnNumber":58}]},{"targetObj":{"name":"delimiter","typeFullName":"ANY","position":2,"lineNumber":585,"columnNumber":36,"label":"PARAM"},"definedBy":{"name":"delimiter","typeFullName":"ANY","position":2,"lineNumber":585,"columnNumber":36,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"split","resolvedMethod":"String","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":594,"columnNumber":58}]},{"targetObj":{"name":"split","typeFullName":"ANY","resolvedMethod":"String:<returnValue>:split","isExternal":true,"lineNumber":594,"columnNumber":58,"label":"CALL"},"definedBy":{"name":"split","typeFullName":"ANY","resolvedMethod":"String:<returnValue>:split","isExternal":true,"lineNumber":594,"columnNumber":58,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:trim","signature":"","fileName":"lib/utils.js","lineNumber":221,"columnNumber":13,"usages":[{"targetObj":{"name":"(str)","typeFullName":"ANY","lineNumber":221,"columnNumber":13,"label":"UNKNOWN"},"definedBy":{"name":"(str)","typeFullName":"ANY","lineNumber":221,"columnNumber":13,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"str","typeFullName":"__ecma.String","position":1,"lineNumber":221,"columnNumber":14,"label":"PARAM"},"definedBy":{"name":"str","typeFullName":"__ecma.String","position":1,"lineNumber":221,"columnNumber":14,"label":"PARAM"},"invokedCalls":[{"callName":"trim","resolvedMethod":"str.trim","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":222,"columnNumber":2},{"callName":"replace","resolvedMethod":"str.replace","paramTypes":["__ecma.String","__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":222,"columnNumber":15}],"argToCalls":[]},{"targetObj":{"name":"trim","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call:<returnValue>:trim","isExternal":true,"lineNumber":222,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"trim","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call:<returnValue>:trim","isExternal":true,"lineNumber":222,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"replace","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call:<returnValue>:replace","isExternal":true,"lineNumber":222,"columnNumber":15,"label":"CALL"},"definedBy":{"name":"replace","typeFullName":"ANY","resolvedMethod":"() => __ecma.String:call:<returnValue>:replace","isExternal":true,"lineNumber":222,"columnNumber":15,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"lib/utils.js::program:typeOfTest","signature":"","fileName":"lib/utils.js","lineNumber":20,"columnNumber":19,"usages":[{"targetObj":{"name":"typeOfTest","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:typeOfTest","isExternal":false,"lineNumber":103,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"typeOfTest","typeFullName":"ANY","resolvedMethod":"lib/utils.js::program:typeOfTest","isExternal":false,"lineNumber":103,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"sandbox/client.js::program","signature":"","fileName":"sandbox/client.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"then","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:post:<returnValue>:then","isExternal":true,"lineNumber":18,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"then","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:post:<returnValue>:then","isExternal":true,"lineNumber":18,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"catch","typeFullName":"ANY","resolvedMethod":"axios.get","isExternal":true,"lineNumber":13,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"catch","typeFullName":"ANY","resolvedMethod":"axios.get","isExternal":true,"lineNumber":13,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"get","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:get","isExternal":true,"lineNumber":13,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"get","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:get","isExternal":true,"lineNumber":13,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"post","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:post","isExternal":true,"lineNumber":18,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"post","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:post","isExternal":true,"lineNumber":18,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"catch","typeFullName":"ANY","resolvedMethod":"axios.post","isExternal":true,"lineNumber":18,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"catch","typeFullName":"ANY","resolvedMethod":"axios.post","isExternal":true,"lineNumber":18,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"then","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:get:<returnValue>:then","isExternal":true,"lineNumber":13,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"then","typeFullName":"ANY","resolvedMethod":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic:get:<returnValue>:then","isExternal":true,"lineNumber":13,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"sandbox/client.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"sandbox/client.js::program:require","isExternal":true,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"axios","typeFullName":"import(\"/home/runner/work/src_repos/javascript/axios/index\").AxiosStatic","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"sandbox/client.js::program:require","isExternal":null,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"get","resolvedMethod":"axios.get","paramTypes":["__ecma.String","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":13,"columnNumber":0},{"callName":"post","resolvedMethod":"axios.post","paramTypes":["__ecma.String","{ foo: __ecma.String; baz: __ecma.Number; }"],"returnType":"ANY","isExternal":true,"lineNumber":18,"columnNumber":0}],"argToCalls":[]}]},{"code":"","fullName":"sandbox/client.js::program:handleFailure","signature":"","fileName":"sandbox/client.js","lineNumber":10,"columnNumber":0,"usages":[{"targetObj":{"name":"function handleFailure(data)","typeFullName":"ANY","lineNumber":10,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":"function handleFailure(data)","typeFullName":"ANY","lineNumber":10,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"data","typeFullName":"ANY","position":1,"lineNumber":10,"columnNumber":23,"label":"PARAM"},"definedBy":{"name":"data","typeFullName":"ANY","position":1,"lineNumber":10,"columnNumber":23,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"log","resolvedMethod":"console.log","paramTypes":["__ecma.String","ANY"],"returnType":"ANY","position":2,"isExternal":true,"lineNumber":10,"columnNumber":31}]}]},{"code":"","fullName":"sandbox/client.js::program:handleSuccess","signature":"","fileName":"sandbox/client.js","lineNumber":9,"columnNumber":0,"usages":[{"targetObj":{"name":"function handleSuccess(data)","typeFullName":"ANY","lineNumber":9,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":"function handleSuccess(data)","typeFullName":"ANY","lineNumber":9,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"data","typeFullName":"ANY","position":1,"lineNumber":9,"columnNumber":23,"label":"PARAM"},"definedBy":{"name":"data","typeFullName":"ANY","position":1,"lineNumber":9,"columnNumber":23,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"log","resolvedMethod":"console.log","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":9,"columnNumber":31}]}]},{"code":"","fullName":"sandbox/server.js::program","signature":"","fileName":"sandbox/server.js","lineNumber":1,"columnNumber":0,"usages":[{"targetObj":{"name":"listen","typeFullName":"ANY","resolvedMethod":"http:http:createServer:<returnValue>:listen","isExternal":true,"lineNumber":74,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"listen","typeFullName":"ANY","resolvedMethod":"http:http:createServer:<returnValue>:listen","isExternal":true,"lineNumber":74,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"require","typeFullName":"ANY","resolvedMethod":"sandbox/server.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"sandbox/server.js::program:require","isExternal":true,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"fs","typeFullName":"fs:fs","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"sandbox/server.js::program:require","isExternal":null,"lineNumber":1,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"createReadStream","resolvedMethod":"fs.createReadStream","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":14,"columnNumber":2}],"argToCalls":[]},{"targetObj":{"name":"on","typeFullName":"ANY","resolvedMethod":"http:http:createServer:<returnValue>:on","isExternal":true,"lineNumber":75,"columnNumber":0,"label":"CALL"},"definedBy":{"name":"on","typeFullName":"ANY","resolvedMethod":"http:http:createServer:<returnValue>:on","isExternal":true,"lineNumber":75,"columnNumber":0,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"url","typeFullName":"url:url","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"sandbox/server.js::program:require","isExternal":null,"lineNumber":2,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"parse","resolvedMethod":"url.parse","paramTypes":["ANY","__ecma.Boolean"],"returnType":"ANY","isExternal":true,"lineNumber":20,"columnNumber":17}],"argToCalls":[]},{"targetObj":{"name":"server","typeFullName":"http:http:createServer:<returnValue>","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"http.createServer","typeFullName":"ANY","resolvedMethod":"http:http:createServer","isExternal":null,"lineNumber":17,"columnNumber":9,"label":"CALL"},"invokedCalls":[{"callName":"listen","resolvedMethod":"server.listen","paramTypes":["__ecma.Number","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":74,"columnNumber":0},{"callName":"on","resolvedMethod":"server.on","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":75,"columnNumber":0},{"callName":"close","resolvedMethod":"server.close","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":78,"columnNumber":4}],"argToCalls":[]},{"targetObj":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"definedBy":{"name":":program","typeFullName":"ANY","lineNumber":1,"columnNumber":0,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"createServer","typeFullName":"ANY","resolvedMethod":"http:http:createServer","isExternal":true,"lineNumber":17,"columnNumber":9,"label":"CALL"},"definedBy":{"name":"createServer","typeFullName":"ANY","resolvedMethod":"http:http:createServer","isExternal":true,"lineNumber":17,"columnNumber":9,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"path","typeFullName":"path:path","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"sandbox/server.js::program:require","isExternal":null,"lineNumber":3,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"join","resolvedMethod":"path.join","paramTypes":["ANY","__ecma.String","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":14,"columnNumber":22},{"callName":"resolve","resolvedMethod":"path.resolve","paramTypes":[],"returnType":"ANY","isExternal":true,"lineNumber":14,"columnNumber":32}],"argToCalls":[]},{"targetObj":{"name":"http","typeFullName":"http:http","lineNumber":null,"columnNumber":null,"label":"LOCAL"},"definedBy":{"name":"require","typeFullName":"ANY","resolvedMethod":"sandbox/server.js::program:require","isExternal":null,"lineNumber":4,"columnNumber":0,"label":"CALL"},"invokedCalls":[{"callName":"createServer","resolvedMethod":"http.createServer","paramTypes":["LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":17,"columnNumber":9}],"argToCalls":[]}]},{"code":"","fullName":"sandbox/server.js::program:anonymous","signature":"","fileName":"sandbox/server.js","lineNumber":17,"columnNumber":27,"usages":[{"targetObj":{"name":"res","typeFullName":"ANY","position":2,"lineNumber":17,"columnNumber":42,"label":"PARAM"},"definedBy":{"name":"res","typeFullName":"ANY","position":2,"lineNumber":17,"columnNumber":42,"label":"PARAM"},"invokedCalls":[{"callName":"writeHead","resolvedMethod":"res.writeHead","paramTypes":["__ecma.Number","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":61,"columnNumber":6},{"callName":"end","resolvedMethod":"res.end","paramTypes":["ANY"],"returnType":"ANY","isExternal":true,"lineNumber":64,"columnNumber":6},{"callName":"writeHead","resolvedMethod":"res.writeHead","paramTypes":["__ecma.Number"],"returnType":"ANY","isExternal":true,"lineNumber":67,"columnNumber":4},{"callName":"end","resolvedMethod":"res.end","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":68,"columnNumber":4}],"argToCalls":[{"callName":"pipeFileToResponse","resolvedMethod":"pipeFileToResponse","paramTypes":["ANY","__ecma.String","__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":30,"columnNumber":4},{"callName":"pipeFileToResponse","resolvedMethod":"pipeFileToResponse","paramTypes":["ANY","__ecma.String","__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":32,"columnNumber":4},{"callName":"pipeFileToResponse","resolvedMethod":"pipeFileToResponse","paramTypes":["ANY","__ecma.String","__ecma.String"],"returnType":"ANY","position":1,"isExternal":false,"lineNumber":34,"columnNumber":4}]},{"targetObj":{"name":"req","typeFullName":"ANY","position":1,"lineNumber":17,"columnNumber":37,"label":"PARAM"},"definedBy":{"name":"req","typeFullName":"ANY","position":1,"lineNumber":17,"columnNumber":37,"label":"PARAM"},"invokedCalls":[{"callName":"setEncoding","resolvedMethod":"req.setEncoding","paramTypes":["__ecma.String"],"returnType":"ANY","isExternal":true,"lineNumber":18,"columnNumber":2},{"callName":"on","resolvedMethod":"req.on","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":40,"columnNumber":4},{"callName":"on","resolvedMethod":"req.on","paramTypes":["__ecma.String","LAMBDA"],"returnType":"ANY","isExternal":true,"lineNumber":44,"columnNumber":4}],"argToCalls":[]},{"targetObj":{"name":"parse","typeFullName":"ANY","resolvedMethod":"url:url:parse","isExternal":true,"lineNumber":20,"columnNumber":17,"label":"CALL"},"definedBy":{"name":"parse","typeFullName":"ANY","resolvedMethod":"url:url:parse","isExternal":true,"lineNumber":20,"columnNumber":17,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"function (req, res)","typeFullName":"ANY","lineNumber":17,"columnNumber":27,"label":"UNKNOWN"},"definedBy":{"name":"function (req, res)","typeFullName":"ANY","lineNumber":17,"columnNumber":27,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"setEncoding","typeFullName":"ANY","resolvedMethod":"req.setEncoding","isExternal":true,"lineNumber":18,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"setEncoding","typeFullName":"ANY","resolvedMethod":"req.setEncoding","isExternal":true,"lineNumber":18,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"sandbox/server.js::program:anonymous1","signature":"","fileName":"sandbox/server.js","lineNumber":75,"columnNumber":19,"usages":[{"targetObj":{"name":"(error)","typeFullName":"ANY","lineNumber":75,"columnNumber":19,"label":"UNKNOWN"},"definedBy":{"name":"(error)","typeFullName":"ANY","lineNumber":75,"columnNumber":19,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"close","typeFullName":"ANY","resolvedMethod":"http:http:createServer:<returnValue>:close","isExternal":true,"lineNumber":78,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"close","typeFullName":"ANY","resolvedMethod":"http:http:createServer:<returnValue>:close","isExternal":true,"lineNumber":78,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"sandbox/server.js::program:anonymous:anonymous","signature":"","fileName":"sandbox/server.js","lineNumber":40,"columnNumber":19,"usages":[{"targetObj":{"name":"function (chunk)","typeFullName":"ANY","lineNumber":40,"columnNumber":19,"label":"UNKNOWN"},"definedBy":{"name":"function (chunk)","typeFullName":"ANY","lineNumber":40,"columnNumber":19,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"sandbox/server.js::program:anonymous:anonymous1","signature":"","fileName":"sandbox/server.js","lineNumber":44,"columnNumber":18,"usages":[{"targetObj":{"name":"function ()","typeFullName":"ANY","lineNumber":44,"columnNumber":18,"label":"UNKNOWN"},"definedBy":{"name":"function ()","typeFullName":"ANY","lineNumber":44,"columnNumber":18,"label":"UNKNOWN"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"error","typeFullName":"ANY","resolvedMethod":"__whatwg.console:error","isExternal":true,"lineNumber":54,"columnNumber":8,"label":"CALL"},"definedBy":{"name":"error","typeFullName":"ANY","resolvedMethod":"__whatwg.console:error","isExternal":true,"lineNumber":54,"columnNumber":8,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"end","typeFullName":"ANY","resolvedMethod":"res.end","isExternal":true,"lineNumber":68,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"end","typeFullName":"ANY","resolvedMethod":"res.end","isExternal":true,"lineNumber":68,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]},{"code":"","fullName":"sandbox/server.js::program:pipeFileToResponse","signature":"","fileName":"sandbox/server.js","lineNumber":7,"columnNumber":0,"usages":[{"targetObj":{"name":"file","typeFullName":"ANY","position":2,"lineNumber":7,"columnNumber":33,"label":"PARAM"},"definedBy":{"name":"file","typeFullName":"ANY","position":2,"lineNumber":7,"columnNumber":33,"label":"PARAM"},"invokedCalls":[],"argToCalls":[{"callName":"join","resolvedMethod":"path.join","paramTypes":["ANY","__ecma.String","ANY"],"returnType":"ANY","position":3,"isExternal":true,"lineNumber":14,"columnNumber":22}]},{"targetObj":{"name":"join","typeFullName":"ANY","resolvedMethod":"path:path:join","isExternal":true,"lineNumber":14,"columnNumber":22,"label":"CALL"},"definedBy":{"name":"join","typeFullName":"ANY","resolvedMethod":"path:path:join","isExternal":true,"lineNumber":14,"columnNumber":22,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"res","typeFullName":"ANY","position":1,"lineNumber":7,"columnNumber":28,"label":"PARAM"},"definedBy":{"name":"res","typeFullName":"ANY","position":1,"lineNumber":7,"columnNumber":28,"label":"PARAM"},"invokedCalls":[{"callName":"writeHead","resolvedMethod":"res.writeHead","paramTypes":["__ecma.Number","ANY"],"returnType":"ANY","isExternal":true,"lineNumber":9,"columnNumber":4}],"argToCalls":[{"callName":"pipe","resolvedMethod":"fs.createReadStream","paramTypes":["ANY"],"returnType":"ANY","position":1,"isExternal":true,"lineNumber":14,"columnNumber":2}]},{"targetObj":{"name":"pipe","typeFullName":"ANY","resolvedMethod":"fs:fs:createReadStream:<returnValue>:pipe","isExternal":true,"lineNumber":14,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"pipe","typeFullName":"ANY","resolvedMethod":"fs:fs:createReadStream:<returnValue>:pipe","isExternal":true,"lineNumber":14,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"writeHead","typeFullName":"ANY","resolvedMethod":"res.writeHead","isExternal":true,"lineNumber":67,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"writeHead","typeFullName":"ANY","resolvedMethod":"res.writeHead","isExternal":true,"lineNumber":67,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"createReadStream","typeFullName":"ANY","resolvedMethod":"fs:fs:createReadStream","isExternal":true,"lineNumber":14,"columnNumber":2,"label":"CALL"},"definedBy":{"name":"createReadStream","typeFullName":"ANY","resolvedMethod":"fs:fs:createReadStream","isExternal":true,"lineNumber":14,"columnNumber":2,"label":"CALL"},"invokedCalls":[],"argToCalls":[]},{"targetObj":{"name":"pipeFileToResponse","typeFullName":"void","resolvedMethod":"sandbox/server.js::program:pipeFileToResponse","isExternal":false,"lineNumber":34,"columnNumber":4,"label":"CALL"},"definedBy":{"name":"pipeFileToResponse","typeFullName":"void","resolvedMethod":"sandbox/server.js::program:pipeFileToResponse","isExternal":false,"lineNumber":34,"columnNumber":4,"label":"CALL"},"invokedCalls":[],"argToCalls":[]}]}],"userDefinedTypes":[{"name":"bin/GithubAPI.js::program:GithubAPI","fields":[{"name":"repo","typeFullName":"this","lineNumber":19,"columnNumber":4,"label":"LOCAL"},{"name":"owner","typeFullName":"this","lineNumber":20,"columnNumber":4,"label":"LOCAL"},{"name":"axios","typeFullName":"this","lineNumber":21,"columnNumber":4,"label":"LOCAL"},{"name":"createComment","typeFullName":"Promise<any>","lineNumber":26,"columnNumber":2,"label":"LOCAL"},{"name":"getComments","typeFullName":"Promise<any>","lineNumber":30,"columnNumber":2,"label":"LOCAL"},{"name":"getComment","typeFullName":"Promise<any>","lineNumber":34,"columnNumber":2,"label":"LOCAL"},{"name":"updateComment","typeFullName":"Promise<any>","lineNumber":38,"columnNumber":2,"label":"LOCAL"},{"name":"appendLabels","typeFullName":"Promise<any>","lineNumber":42,"columnNumber":2,"label":"LOCAL"},{"name":"getUser","typeFullName":"Promise<any>","lineNumber":46,"columnNumber":2,"label":"LOCAL"},{"name":"isCollaborator","typeFullName":"Promise<boolean>","lineNumber":50,"columnNumber":2,"label":"LOCAL"},{"name":"deleteLabel","typeFullName":"Promise<any>","lineNumber":58,"columnNumber":2,"label":"LOCAL"},{"name":"getIssue","typeFullName":"Promise<any>","lineNumber":62,"columnNumber":2,"label":"LOCAL"},{"name":"getPR","typeFullName":"Promise<any>","lineNumber":66,"columnNumber":2,"label":"LOCAL"},{"name":"getIssues","typeFullName":"Promise<any>","lineNumber":70,"columnNumber":2,"label":"LOCAL"},{"name":"updateIssue","typeFullName":"Promise<any>","lineNumber":74,"columnNumber":2,"label":"LOCAL"},{"name":"closeIssue","typeFullName":"Promise<any>","lineNumber":78,"columnNumber":2,"label":"LOCAL"},{"name":"getReleases","typeFullName":"Promise<any>","lineNumber":84,"columnNumber":2,"label":"LOCAL"},{"name":"getRelease","typeFullName":"Promise<any>","lineNumber":88,"columnNumber":2,"label":"LOCAL"},{"name":"getTags","typeFullName":"Promise<any>","lineNumber":92,"columnNumber":2,"label":"LOCAL"},{"name":"reopenIssue","typeFullName":"Promise<any>","lineNumber":96,"columnNumber":2,"label":"LOCAL"},{"name":"getTagRef","typeFullName":"Promise<any>","lineNumber":102,"columnNumber":2,"label":"LOCAL"},{"name":"getLatestTag","typeFullName":"Promise<any>","lineNumber":109,"columnNumber":2,"label":"LOCAL"},{"name":"normalizeTag","typeFullName":"__ecma.String","lineNumber":117,"columnNumber":2,"label":"LOCAL"}],"procedures":[{"callName":"<init>","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:<init>","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY","ANY"],"returnType":"ANY","isExternal":false,"lineNumber":10,"columnNumber":2},{"callName":"createComment","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:createComment","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":26,"columnNumber":2},{"callName":"getComments","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:getComments","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":30,"columnNumber":2},{"callName":"getComment","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:getComment","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":34,"columnNumber":2},{"callName":"updateComment","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:updateComment","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":38,"columnNumber":2},{"callName":"appendLabels","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:appendLabels","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":42,"columnNumber":2},{"callName":"getUser","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:getUser","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":46,"columnNumber":2},{"callName":"isCollaborator","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:isCollaborator","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY"],"returnType":"Promise<boolean>","isExternal":false,"lineNumber":50,"columnNumber":2},{"callName":"deleteLabel","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:deleteLabel","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":58,"columnNumber":2},{"callName":"getIssue","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:getIssue","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":62,"columnNumber":2},{"callName":"getPR","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:getPR","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":66,"columnNumber":2},{"callName":"getIssues","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:getIssues","paramTypes":["bin/GithubAPI.js::program:GithubAPI","bin/GithubAPI.js::program:GithubAPI:getIssues:_anon_cdecl"],"returnType":"Promise<any>","isExternal":false,"lineNumber":70,"columnNumber":2},{"callName":"updateIssue","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:updateIssue","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":74,"columnNumber":2},{"callName":"closeIssue","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:closeIssue","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":78,"columnNumber":2},{"callName":"getReleases","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:getReleases","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":84,"columnNumber":2},{"callName":"getRelease","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:getRelease","paramTypes":["bin/GithubAPI.js::program:GithubAPI","__ecma.String"],"returnType":"Promise<any>","isExternal":false,"lineNumber":88,"columnNumber":2},{"callName":"getTags","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:getTags","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":92,"columnNumber":2},{"callName":"reopenIssue","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:reopenIssue","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":96,"columnNumber":2},{"callName":"getTagRef","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:getTagRef","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":102,"columnNumber":2},{"callName":"getLatestTag","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:getLatestTag","paramTypes":["bin/GithubAPI.js::program:GithubAPI"],"returnType":"Promise<any>","isExternal":false,"lineNumber":109,"columnNumber":2},{"callName":"normalizeTag","resolvedMethod":"bin/GithubAPI.js::program:GithubAPI:normalizeTag","paramTypes":["bin/GithubAPI.js::program:GithubAPI","ANY"],"returnType":"__ecma.String","isExternal":false,"lineNumber":117,"columnNumber":2}],"fileName":"bin/GithubAPI.js","lineNumber":9,"columnNumber":15},{"name":"bin/GithubAPI.js::program:GithubAPI:getIssues:_anon_cdecl","fields":[{"name":"state","typeFullName":"__ecma.String","lineNumber":70,"columnNumber":19,"label":"LOCAL"},{"name":"labels","typeFullName":"ANY","lineNumber":70,"columnNumber":34,"label":"LOCAL"},{"name":"sort","typeFullName":"__ecma.String","lineNumber":70,"columnNumber":42,"label":"LOCAL"},{"name":"desc","typeFullName":"__ecma.Boolean","lineNumber":70,"columnNumber":60,"label":"LOCAL"},{"name":"per_page","typeFullName":"__ecma.Number","lineNumber":70,"columnNumber":74,"label":"LOCAL"},{"name":"page","typeFullName":"__ecma.Number","lineNumber":70,"columnNumber":90,"label":"LOCAL"}],"procedures":[],"fileName":"bin/GithubAPI.js","lineNumber":70,"columnNumber":18},{"name":"bin/RepoBot.js::program:RepoBot","fields":[{"name":"templates","typeFullName":"Object.assign","lineNumber":27,"columnNumber":4,"label":"LOCAL"},{"name":"github","typeFullName":"this","lineNumber":31,"columnNumber":4,"label":"LOCAL"},{"name":"owner","typeFullName":"_tmp_1:owner:<returnValue>:<member>(owner)","lineNumber":33,"columnNumber":4,"label":"LOCAL"},{"name":"repo","typeFullName":"_tmp_1:repo:<returnValue>:<member>(repo)","lineNumber":34,"columnNumber":4,"label":"LOCAL"},{"name":"addComment","typeFullName":"Promise<any>","lineNumber":37,"columnNumber":2,"label":"LOCAL"},{"name":"notifyPRPublished","typeFullName":"Promise<any>","lineNumber":41,"columnNumber":2,"label":"LOCAL"},{"name":"notifyPublishedPRs","typeFullName":"Promise<void>","lineNumber":97,"columnNumber":2,"label":"LOCAL"},{"name":"renderTemplate","typeFullName":"Promise<any>","lineNumber":123,"columnNumber":2,"label":"LOCAL"}],"procedures":[{"callName":"<init>","resolvedMethod":"bin/RepoBot.js::program:RepoBot:<init>","paramTypes":["bin/RepoBot.js::program:RepoBot","ANY"],"returnType":"ANY","isExternal":false,"lineNumber":21,"columnNumber":2},{"callName":"addComment","resolvedMethod":"bin/RepoBot.js::program:RepoBot:addComment","paramTypes":["bin/RepoBot.js::program:RepoBot","ANY","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":37,"columnNumber":2},{"callName":"notifyPRPublished","resolvedMethod":"bin/RepoBot.js::program:RepoBot:notifyPRPublished","paramTypes":["bin/RepoBot.js::program:RepoBot","ANY","ANY"],"returnType":"__ecma.Boolean","isExternal":false,"lineNumber":41,"columnNumber":2},{"callName":"notifyPublishedPRs","resolvedMethod":"bin/RepoBot.js::program:RepoBot:notifyPublishedPRs","paramTypes":["bin/RepoBot.js::program:RepoBot","ANY"],"returnType":"Promise<void>","isExternal":false,"lineNumber":97,"columnNumber":2},{"callName":"renderTemplate","resolvedMethod":"bin/RepoBot.js::program:RepoBot:renderTemplate","paramTypes":["bin/RepoBot.js::program:RepoBot","ANY","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":123,"columnNumber":2}],"fileName":"bin/RepoBot.js","lineNumber":20,"columnNumber":0},{"name":"bin/RepoBot.js::program:RepoBot:notifyPRPublished:anonymous:_anon_cdecl","fields":[{"name":"name","typeFullName":"__ecma.String","lineNumber":66,"columnNumber":31,"label":"LOCAL"}],"procedures":[],"fileName":"bin/RepoBot.js","lineNumber":66,"columnNumber":30},{"name":"bin/RepoBot.js::program:RepoBot:notifyPRPublished:anonymous:{ name: ANY; }","fields":[{"name":"name","typeFullName":"__ecma.String","lineNumber":66,"columnNumber":31,"label":"LOCAL"}],"procedures":[],"fileName":"bin/RepoBot.js","lineNumber":66,"columnNumber":30},{"name":"bin/RepoBot.js::program:RepoBot:notifyPRPublished:anonymous1:_anon_cdecl","fields":[{"name":"body","typeFullName":"ANY","lineNumber":73,"columnNumber":8,"label":"LOCAL"},{"name":"user","typeFullName":"ANY","lineNumber":73,"columnNumber":14,"label":"LOCAL"}],"procedures":[],"fileName":"bin/RepoBot.js","lineNumber":73,"columnNumber":7},{"name":"bin/contributors.js::program:anonymous8:anonymous:_anon_cdecl","fields":[{"name":"name","typeFullName":"__ecma.String","lineNumber":197,"columnNumber":31,"label":"LOCAL"}],"procedures":[],"fileName":"bin/contributors.js","lineNumber":197,"columnNumber":30},{"name":"bin/pr.js::program:anonymous:anonymous:_anon_cdecl","fields":[{"name":"tag","typeFullName":"__ecma.String","lineNumber":19,"columnNumber":29,"label":"LOCAL"},{"name":"size","typeFullName":"__ecma.Number","lineNumber":19,"columnNumber":34,"label":"LOCAL"}],"procedures":[],"fileName":"bin/pr.js","lineNumber":19,"columnNumber":28},{"name":"gulpfile.js::program:anonymous3:anonymous:_anon_cdecl","fields":[{"name":"type","typeFullName":"ANY","lineNumber":60,"columnNumber":10,"label":"LOCAL"},{"name":"contributions","typeFullName":"ANY","lineNumber":60,"columnNumber":16,"label":"LOCAL"}],"procedures":[],"fileName":"gulpfile.js","lineNumber":60,"columnNumber":9},{"name":"gulpfile.js::program:anonymous3:anonymous1:_anon_cdecl","fields":[{"name":"login","typeFullName":"ANY","lineNumber":62,"columnNumber":13,"label":"LOCAL"},{"name":"name","typeFullName":"__ecma.String","lineNumber":62,"columnNumber":20,"label":"LOCAL"},{"name":"url","typeFullName":"ANY","lineNumber":62,"columnNumber":26,"label":"LOCAL"}],"procedures":[],"fileName":"gulpfile.js","lineNumber":62,"columnNumber":12},{"name":"lib/adapters/http.js::program:anonymous3:_anon_cdecl","fields":[{"name":"address","typeFullName":"ANY","lineNumber":156,"columnNumber":24,"label":"LOCAL"},{"name":"family","typeFullName":"ANY","lineNumber":156,"columnNumber":33,"label":"LOCAL"}],"procedures":[],"fileName":"lib/adapters/http.js","lineNumber":156,"columnNumber":23},{"name":"lib/cancel/CancelToken.js::program:CancelToken","fields":[{"name":"promise","typeFullName":"Promise<TResult1>","lineNumber":20,"columnNumber":4,"label":"LOCAL"},{"name":"throwIfRequested","typeFullName":"() => void","lineNumber":68,"columnNumber":2,"label":"LOCAL"},{"name":"subscribe","typeFullName":"(listener: ANY) => void","lineNumber":78,"columnNumber":2,"label":"LOCAL"},{"name":"unsubscribe","typeFullName":"(listener: ANY) => void","lineNumber":95,"columnNumber":2,"label":"LOCAL"},{"name":"toAbortSignal","typeFullName":"() => AbortSignal","lineNumber":105,"columnNumber":2,"label":"LOCAL"},{"name":"source","typeFullName":"lib/cancel/CancelToken.js::program:CancelToken:source","lineNumber":123,"columnNumber":2,"label":"LOCAL"}],"procedures":[{"callName":"<init>","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:<init>","paramTypes":["lib/cancel/CancelToken.js::program:CancelToken","ANY"],"returnType":"ANY","isExternal":false,"lineNumber":13,"columnNumber":2},{"callName":"throwIfRequested","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:throwIfRequested","paramTypes":["lib/cancel/CancelToken.js::program:CancelToken"],"returnType":"() => void","isExternal":false,"lineNumber":68,"columnNumber":2},{"callName":"subscribe","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:subscribe","paramTypes":["lib/cancel/CancelToken.js::program:CancelToken","ANY"],"returnType":"(listener: ANY) => void","isExternal":false,"lineNumber":78,"columnNumber":2},{"callName":"unsubscribe","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:unsubscribe","paramTypes":["lib/cancel/CancelToken.js::program:CancelToken","ANY"],"returnType":"(listener: ANY) => void","isExternal":false,"lineNumber":95,"columnNumber":2},{"callName":"toAbortSignal","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:toAbortSignal","paramTypes":["lib/cancel/CancelToken.js::program:CancelToken"],"returnType":"() => AbortSignal","isExternal":false,"lineNumber":105,"columnNumber":2},{"callName":"source","resolvedMethod":"lib/cancel/CancelToken.js::program:CancelToken:source","paramTypes":["lib/cancel/CancelToken.js::program:CancelToken"],"returnType":"ANY","isExternal":false,"lineNumber":123,"columnNumber":2}],"fileName":"lib/cancel/CancelToken.js","lineNumber":12,"columnNumber":0},{"name":"lib/core/Axios.js::program:Axios","fields":[{"name":"defaults","typeFullName":"this","lineNumber":23,"columnNumber":4,"label":"LOCAL"},{"name":"interceptors","typeFullName":"this","lineNumber":24,"columnNumber":4,"label":"LOCAL"},{"name":"request","typeFullName":"Promise<any>","lineNumber":38,"columnNumber":2,"label":"LOCAL"},{"name":"_request","typeFullName":"(configOrUrl: ANY, config: ANY) => ANY","lineNumber":65,"columnNumber":2,"label":"LOCAL"},{"name":"getUri","typeFullName":"(config: ANY) => __ecma.String","lineNumber":193,"columnNumber":2,"label":"LOCAL"}],"procedures":[{"callName":"<init>","resolvedMethod":"lib/core/Axios.js::program:Axios:<init>","paramTypes":["lib/core/Axios.js::program:Axios","ANY"],"returnType":"ANY","isExternal":false,"lineNumber":22,"columnNumber":2},{"callName":"request","resolvedMethod":"lib/core/Axios.js::program:Axios:request","paramTypes":["lib/core/Axios.js::program:Axios","ANY","ANY"],"returnType":"Promise<any>","isExternal":false,"lineNumber":38,"columnNumber":2},{"callName":"_request","resolvedMethod":"lib/core/Axios.js::program:Axios:_request","paramTypes":["lib/core/Axios.js::program:Axios","ANY","ANY"],"returnType":"(configOrUrl: ANY, config: ANY) => ANY","isExternal":false,"lineNumber":65,"columnNumber":2},{"callName":"getUri","resolvedMethod":"lib/core/Axios.js::program:Axios:getUri","paramTypes":["lib/core/Axios.js::program:Axios","ANY"],"returnType":"(config: ANY) => __ecma.String","isExternal":false,"lineNumber":193,"columnNumber":2}],"fileName":"lib/core/Axios.js","lineNumber":21,"columnNumber":0},{"name":"lib/core/AxiosHeaders.js::program:AxiosHeaders","fields":[{"name":"set","typeFullName":"(header: ANY, valueOrRewrite: ANY, rewrite: ANY) => this","lineNumber":79,"columnNumber":2,"label":"LOCAL"},{"name":"get","typeFullName":"(header: ANY, parser: ANY) => ANY","lineNumber":114,"columnNumber":2,"label":"LOCAL"},{"name":"has","typeFullName":"(header: ANY, matcher: ANY) => __ecma.Boolean","lineNumber":144,"columnNumber":2,"label":"LOCAL"},{"name":"delete","typeFullName":"(header: ANY, matcher: ANY) => __ecma.Boolean","lineNumber":156,"columnNumber":2,"label":"LOCAL"},{"name":"clear","typeFullName":"(matcher: ANY) => __ecma.Boolean","lineNumber":183,"columnNumber":2,"label":"LOCAL"},{"name":"normalize","typeFullName":"(format: ANY) => this","lineNumber":199,"columnNumber":2,"label":"LOCAL"},{"name":"concat","typeFullName":"(...targets: Array<any>) => ANY","lineNumber":226,"columnNumber":2,"label":"LOCAL"},{"name":"toJSON","typeFullName":"(asStrings: ANY) => ANY","lineNumber":230,"columnNumber":2,"label":"LOCAL"},{"name":"Symbol.iterator","typeFullName":"() => ArrayIterator<[string, ANY]>","lineNumber":240,"columnNumber":2,"label":"LOCAL"},{"name":"toString","typeFullName":"() => __ecma.String","lineNumber":244,"columnNumber":2,"label":"LOCAL"},{"name":"Symbol.toStringTag","typeFullName":"__ecma.String","lineNumber":248,"columnNumber":2,"label":"LOCAL"},{"name":"from","typeFullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:from","lineNumber":252,"columnNumber":2,"label":"LOCAL"},{"name":"concat1","typeFullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:concat1","lineNumber":256,"columnNumber":2,"label":"LOCAL"},{"name":"accessor","typeFullName":"lib/core/AxiosHeaders.js::program:AxiosHeaders:accessor","lineNumber":264,"columnNumber":2,"label":"LOCAL"}],"procedures":[{"callName":"<init>","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:<init>","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY"],"returnType":"ANY","isExternal":false,"lineNumber":75,"columnNumber":2},{"callName":"set","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:set","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY","ANY","ANY"],"returnType":"lib/core/AxiosHeaders.js::program","isExternal":false,"lineNumber":79,"columnNumber":2},{"callName":"get","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:get","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY","ANY"],"returnType":"(header: ANY, parser: ANY) => ANY","isExternal":false,"lineNumber":114,"columnNumber":2},{"callName":"has","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:has","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY","ANY"],"returnType":"(header: ANY, matcher: ANY) => __ecma.Boolean","isExternal":false,"lineNumber":144,"columnNumber":2},{"callName":"delete","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:delete","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY","ANY"],"returnType":"__ecma.Boolean","isExternal":false,"lineNumber":156,"columnNumber":2},{"callName":"clear","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:clear","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY"],"returnType":"__ecma.Boolean","isExternal":false,"lineNumber":183,"columnNumber":2},{"callName":"normalize","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:normalize","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY"],"returnType":"lib/core/AxiosHeaders.js::program","isExternal":false,"lineNumber":199,"columnNumber":2},{"callName":"concat","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:concat","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","Array<any>"],"returnType":"(...targets: Array<any>) => ANY","isExternal":false,"lineNumber":226,"columnNumber":2},{"callName":"toJSON","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:toJSON","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY"],"returnType":"(asStrings: ANY) => ANY","isExternal":false,"lineNumber":230,"columnNumber":2},{"callName":"Symbol.iterator","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:Symbol.iterator","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders"],"returnType":"() => ArrayIterator<[string, ANY]>","isExternal":false,"lineNumber":240,"columnNumber":2},{"callName":"toString","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:toString","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders"],"returnType":"() => __ecma.String","isExternal":false,"lineNumber":244,"columnNumber":2},{"callName":"Symbol.toStringTag","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:Symbol.toStringTag","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders"],"returnType":"__ecma.String","isExternal":false,"lineNumber":248,"columnNumber":2},{"callName":"from","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:from","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY"],"returnType":"ANY","isExternal":false,"lineNumber":252,"columnNumber":2},{"callName":"concat1","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:concat1","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY","Array<any>"],"returnType":"lib/core/AxiosHeaders.js::program:AxiosHeaders:<init>","isExternal":false,"lineNumber":256,"columnNumber":2},{"callName":"accessor","resolvedMethod":"lib/core/AxiosHeaders.js::program:AxiosHeaders:accessor","paramTypes":["lib/core/AxiosHeaders.js::program:AxiosHeaders","ANY"],"returnType":"lib/core/AxiosHeaders.js::program","isExternal":false,"lineNumber":264,"columnNumber":2}],"fileName":"lib/core/AxiosHeaders.js","lineNumber":74,"columnNumber":0},{"name":"lib/core/AxiosHeaders.js::program:anonymous1:_anon_cdecl","fields":[{"name":"value","typeFullName":"ANY","lineNumber":290,"columnNumber":50,"label":"LOCAL"}],"procedures":[],"fileName":"lib/core/AxiosHeaders.js","lineNumber":290,"columnNumber":49},{"name":"lib/core/InterceptorManager.js::program:InterceptorManager","fields":[{"name":"handlers","typeFullName":"__ecma.Array.factory","lineNumber":7,"columnNumber":4,"label":"LOCAL"},{"name":"use","typeFullName":"(fulfilled: Function, rejected: Function, options: ANY) => __ecma.Number","lineNumber":18,"columnNumber":2,"label":"LOCAL"},{"name":"eject","typeFullName":"(id: __ecma.Number) => __ecma.Boolean","lineNumber":35,"columnNumber":2,"label":"LOCAL"},{"name":"clear","typeFullName":"() => void","lineNumber":46,"columnNumber":2,"label":"LOCAL"},{"name":"forEach","typeFullName":"(fn: Function) => void","lineNumber":62,"columnNumber":2,"label":"LOCAL"}],"procedures":[{"callName":"<init>","resolvedMethod":"lib/core/InterceptorManager.js::program:InterceptorManager:<init>","paramTypes":["lib/core/InterceptorManager.js::program:InterceptorManager"],"returnType":"ANY","isExternal":false,"lineNumber":6,"columnNumber":2},{"callName":"use","resolvedMethod":"lib/core/InterceptorManager.js::program:InterceptorManager:use","paramTypes":["lib/core/InterceptorManager.js::program:InterceptorManager","Function","Function","ANY"],"returnType":"(fulfilled: Function, rejected: Function, options: ANY) => __ecma.Number","isExternal":false,"lineNumber":18,"columnNumber":2},{"callName":"eject","resolvedMethod":"lib/core/InterceptorManager.js::program:InterceptorManager:eject","paramTypes":["lib/core/InterceptorManager.js::program:InterceptorManager","__ecma.Number"],"returnType":"(id: __ecma.Number) => __ecma.Boolean","isExternal":false,"lineNumber":35,"columnNumber":2},{"callName":"clear","resolvedMethod":"lib/core/InterceptorManager.js::program:InterceptorManager:clear","paramTypes":["lib/core/InterceptorManager.js::program:InterceptorManager"],"returnType":"() => void","isExternal":false,"lineNumber":46,"columnNumber":2},{"callName":"forEach","resolvedMethod":"lib/core/InterceptorManager.js::program:InterceptorManager:forEach","paramTypes":["lib/core/InterceptorManager.js::program:InterceptorManager","Function"],"returnType":"(fn: Function) => void","isExternal":false,"lineNumber":62,"columnNumber":2}],"fileName":"lib/core/InterceptorManager.js","lineNumber":5,"columnNumber":0},{"name":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream","fields":[{"name":"_read","typeFullName":"(size: ANY) => ANY","lineNumber":47,"columnNumber":2,"label":"LOCAL"},{"name":"_transform","typeFullName":"(chunk: ANY, encoding: ANY, callback: ANY) => void","lineNumber":57,"columnNumber":2,"label":"LOCAL"}],"procedures":[{"callName":"<init>","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:<init>","paramTypes":["lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream","ANY"],"returnType":"ANY","isExternal":false,"lineNumber":9,"columnNumber":2},{"callName":"_read","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:_read","paramTypes":["lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream","ANY"],"returnType":"(size: ANY) => ANY","isExternal":false,"lineNumber":47,"columnNumber":2},{"callName":"_transform","resolvedMethod":"lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream:_transform","paramTypes":["lib/helpers/AxiosTransformStream.js::program:AxiosTransformStream","ANY","ANY","ANY"],"returnType":"(chunk: ANY, encoding: ANY, callback: ANY) => void","isExternal":false,"lineNumber":57,"columnNumber":2}],"fileName":"lib/helpers/AxiosTransformStream.js","lineNumber":8,"columnNumber":0},{"name":"lib/helpers/ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream","fields":[{"name":"__transform","typeFullName":"(chunk: ANY, encoding: ANY, callback: ANY) => void","lineNumber":6,"columnNumber":2,"label":"LOCAL"},{"name":"_transform","typeFullName":"(chunk: ANY, encoding: ANY, callback: ANY) => void","lineNumber":11,"columnNumber":2,"label":"LOCAL"}],"procedures":[{"callName":"<init>","resolvedMethod":"lib/helpers/ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:<init>","paramTypes":["lib/helpers/ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream"],"returnType":"ANY","isExternal":false,"lineNumber":null,"columnNumber":null},{"callName":"__transform","resolvedMethod":"lib/helpers/ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:__transform","paramTypes":["lib/helpers/ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream","ANY","ANY","ANY"],"returnType":"(chunk: ANY, encoding: ANY, callback: ANY) => void","isExternal":false,"lineNumber":6,"columnNumber":2},{"callName":"_transform","resolvedMethod":"lib/helpers/ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:_transform","paramTypes":["lib/helpers/ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream","ANY","ANY","ANY"],"returnType":"(chunk: ANY, encoding: ANY, callback: ANY) => void","isExternal":false,"lineNumber":11,"columnNumber":2}],"fileName":"lib/helpers/ZlibHeaderTransformStream.js","lineNumber":5,"columnNumber":0},{"name":"lib/helpers/formDataToStream.js::program:FormDataPart","fields":[{"name":"headers","typeFullName":"__ecma.String","lineNumber":29,"columnNumber":4,"label":"LOCAL"},{"name":"contentLength","typeFullName":"this","lineNumber":31,"columnNumber":4,"label":"LOCAL"},{"name":"size","typeFullName":"this","lineNumber":33,"columnNumber":4,"label":"LOCAL"},{"name":"name","typeFullName":"param1_0:name:<returnValue>:<member>(name)","lineNumber":35,"columnNumber":4,"label":"LOCAL"},{"name":"value","typeFullName":"lib/helpers/formDataToStream.js::program:<member>(value)","lineNumber":36,"columnNumber":4,"label":"LOCAL"},{"name":"encode","typeFullName":"AsyncGenerator<any, void, ANY>","lineNumber":39,"columnNumber":2,"label":"LOCAL"},{"name":"escapeName","typeFullName":"__ecma.String","lineNumber":53,"columnNumber":2,"label":"LOCAL"}],"procedures":[{"callName":"<init>","resolvedMethod":"lib/helpers/formDataToStream.js::program:FormDataPart:<init>","paramTypes":["lib/helpers/formDataToStream.js::program:FormDataPart","ANY","ANY"],"returnType":"lib/helpers/formDataToStream.js::program:FormDataPart:<init>","isExternal":false,"lineNumber":15,"columnNumber":2},{"callName":"encode","resolvedMethod":"lib/helpers/formDataToStream.js::program:FormDataPart:encode","paramTypes":["lib/helpers/formDataToStream.js::program:FormDataPart"],"returnType":"AsyncGenerator<any, void, ANY>","isExternal":false,"lineNumber":39,"columnNumber":2},{"callName":"escapeName","resolvedMethod":"lib/helpers/formDataToStream.js::program:FormDataPart:escapeName","paramTypes":["lib/helpers/formDataToStream.js::program:FormDataPart","ANY"],"returnType":"__ecma.String","isExternal":false,"lineNumber":53,"columnNumber":2}],"fileName":"lib/helpers/formDataToStream.js","lineNumber":14,"columnNumber":0},{"name":"lib/utils.js::program:anonymous21:_anon_cdecl","fields":[{"name":"hasOwnProperty","typeFullName":"(v: PropertyKey) => __ecma.Boolean","lineNumber":529,"columnNumber":26,"label":"LOCAL"}],"procedures":[],"fileName":"lib/utils.js","lineNumber":529,"columnNumber":25},{"name":"lib/utils.js::program:anonymous30:anonymous:anonymous:_anon_cdecl","fields":[{"name":"source","typeFullName":"ANY","lineNumber":681,"columnNumber":42,"label":"LOCAL"},{"name":"data","typeFullName":"ANY","lineNumber":681,"columnNumber":50,"label":"LOCAL"}],"procedures":[],"fileName":"lib/utils.js","lineNumber":681,"columnNumber":41}]}