{
  "objectSlices" : [
    {
      "code" : "",
      "fullName" : "bin\\check-build-version.js::program",
      "signature" : "",
      "fileName" : "bin\\check-build-version.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "version",
            "typeFullName" : "version",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "_tmp_0.version",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 6,
            "columnNumber" : 7,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "strictEqual",
              "resolvedMethod" : "assert:assert:strictEqual",
              "paramTypes" : [
                "ANY",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 15,
              "columnNumber" : 0
            },
            {
              "callName" : "strictEqual",
              "resolvedMethod" : "assert:assert:strictEqual",
              "paramTypes" : [
                "ANY",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 21,
              "columnNumber" : 0
            }
          ]
        },
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "fs",
            "typeFullName" : "fs:fs",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\check-build-version.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "readFileSync",
              "resolvedMethod" : "fs:fs:readFileSync",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 6,
              "columnNumber" : 29
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "log",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__whatwg.console:log",
            "lineNumber" : 74,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "log",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__whatwg.console:log",
            "lineNumber" : 74,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "parse",
            "typeFullName" : "ANY",
            "resolvedMethod" : "JSON.parse",
            "lineNumber" : 49,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "parse",
            "typeFullName" : "ANY",
            "resolvedMethod" : "JSON.parse",
            "lineNumber" : 49,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.formatString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.formatString",
            "lineNumber" : 74,
            "columnNumber" : 32,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.formatString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.formatString",
            "lineNumber" : 74,
            "columnNumber" : 32,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.fieldAccess",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 75,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.fieldAccess",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 75,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "readFileSync",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs:fs:readFileSync",
            "lineNumber" : 6,
            "columnNumber" : 29,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "readFileSync",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs:fs:readFileSync",
            "lineNumber" : 6,
            "columnNumber" : 29,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.assignment",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.assignment",
            "lineNumber" : 72,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.assignment",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.assignment",
            "lineNumber" : 72,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\check-build-version.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\check-build-version.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "assert",
            "typeFullName" : "assert:assert",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\check-build-version.js::program:require",
            "lineNumber" : 2,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "strictEqual",
              "resolvedMethod" : "assert:assert:strictEqual",
              "paramTypes" : [
                "ANY",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 15,
              "columnNumber" : 0
            },
            {
              "callName" : "strictEqual",
              "resolvedMethod" : "assert:assert:strictEqual",
              "paramTypes" : [
                "ANY",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 21,
              "columnNumber" : 0
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "strictEqual",
            "typeFullName" : "ANY",
            "resolvedMethod" : "assert:assert:strictEqual",
            "lineNumber" : 21,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "strictEqual",
            "typeFullName" : "ANY",
            "resolvedMethod" : "assert:assert:strictEqual",
            "lineNumber" : 21,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "util",
            "typeFullName" : "util:util",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:require",
            "lineNumber" : 2,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "promisify",
              "resolvedMethod" : "util:util:promisify",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 8,
              "columnNumber" : 13
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "axios",
            "typeFullName" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosInstance",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "get",
              "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosInstance:get",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 26,
              "columnNumber" : 25
            },
            {
              "callName" : "get",
              "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosInstance:get",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 44,
              "columnNumber" : 25
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:require",
            "lineNumber" : 6,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:require",
            "lineNumber" : 6,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "fs",
            "typeFullName" : "fs/promises:fs",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:require",
            "lineNumber" : 5,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "readFile",
              "resolvedMethod" : "fs/promises:fs:readFile",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 176,
              "columnNumber" : 50
            },
            {
              "callName" : "readFile",
              "resolvedMethod" : "fs/promises:fs:readFile",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 212,
              "columnNumber" : 50
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "Handlebars",
            "typeFullName" : "handlebars:Handlebars",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "compile",
              "resolvedMethod" : "handlebars:Handlebars:compile",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 176,
              "columnNumber" : 18
            },
            {
              "callName" : "compile",
              "resolvedMethod" : "handlebars:Handlebars:compile",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 212,
              "columnNumber" : 18
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "promisify",
            "typeFullName" : "ANY",
            "resolvedMethod" : "util:util:promisify",
            "lineNumber" : 286,
            "columnNumber" : 36,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "promisify",
            "typeFullName" : "ANY",
            "resolvedMethod" : "util:util:promisify",
            "lineNumber" : 286,
            "columnNumber" : 36,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:anonymous2",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 18,
      "columnNumber" : 27,
      "usages" : [
        {
          "targetObj" : {
            "name" : "anonymous2",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:anonymous2",
            "lineNumber" : 18,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "anonymous2",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:anonymous2",
            "lineNumber" : 18,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:anonymous2:anonymous",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 18,
      "columnNumber" : 44,
      "usages" : [
        {
          "targetObj" : {
            "name" : "<operator>.notEquals",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.notEquals",
            "lineNumber" : 473,
            "columnNumber" : 3,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.notEquals",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.notEquals",
            "lineNumber" : 473,
            "columnNumber" : 3,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.addition",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.addition",
            "lineNumber" : 23,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.addition",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.addition",
            "lineNumber" : 23,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "get",
            "typeFullName" : "ANY",
            "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosInstance:get",
            "lineNumber" : 38,
            "columnNumber" : 30,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "get",
            "typeFullName" : "ANY",
            "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosInstance:get",
            "lineNumber" : 38,
            "columnNumber" : 30,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.spread",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.spread",
            "lineNumber" : 8,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.spread",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.spread",
            "lineNumber" : 8,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "async (sha) => {\n  try {\n    if(commitCache[sha] !== undefined) {\n      return commitCache[sha];\n    }\n\n    console.log(colorize()`fetch github commit info (${sha})`);\n\n    const {data} = await axios.get(`https://api.github.com/repos/axios/axios/commits/${sha}`);\n\n    return commitCache[sha] = {\n      ...data.commit.author,\n      ...data.author,\n      avatar_url_sm: data.author.avatar_url ? data.author.avatar_url + '&s=18' : '',\n    };\n  } catch (err) {\n    return commitCache[sha] = null;\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 18,
            "columnNumber" : 44,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "async (sha) => {\n  try {\n    if(commitCache[sha] !== undefined) {\n      return commitCache[sha];\n    }\n\n    console.log(colorize()`fetch github commit info (${sha})`);\n\n    const {data} = await axios.get(`https://api.github.com/repos/axios/axios/commits/${sha}`);\n\n    return commitCache[sha] = {\n      ...data.commit.author,\n      ...data.author,\n      avatar_url_sm: data.author.avatar_url ? data.author.avatar_url + '&s=18' : '',\n    };\n  } catch (err) {\n    return commitCache[sha] = null;\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 18,
            "columnNumber" : 44,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.await",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.await",
            "lineNumber" : 7,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.await",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.await",
            "lineNumber" : 7,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "colorize()",
            "typeFullName" : "ANY",
            "resolvedMethod" : "colorize()",
            "lineNumber" : 14,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "colorize()",
            "typeFullName" : "ANY",
            "resolvedMethod" : "colorize()",
            "lineNumber" : 14,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.indexAccess",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 670,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.indexAccess",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 670,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.conditional",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.conditional",
            "lineNumber" : 49,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.conditional",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.conditional",
            "lineNumber" : 49,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:anonymous3",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 38,
      "columnNumber" : 22,
      "usages" : [
        {
          "targetObj" : {
            "name" : "anonymous3",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:anonymous3",
            "lineNumber" : 38,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "anonymous3",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:anonymous3",
            "lineNumber" : 38,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:anonymous3:anonymous",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 38,
      "columnNumber" : 33,
      "usages" : [
        {
          "targetObj" : {
            "name" : "async (id) => {\n  if(cache[id] !== undefined) {\n    return cache[id];\n  }\n\n  try {\n    const {data} = await axios.get(`https://api.github.com/repos/axios/axios/issues/${id}`);\n\n    return cache[id] = data;\n  } catch (err) {\n    return null;\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 38,
            "columnNumber" : 33,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "async (id) => {\n  if(cache[id] !== undefined) {\n    return cache[id];\n  }\n\n  try {\n    const {data} = await axios.get(`https://api.github.com/repos/axios/axios/issues/${id}`);\n\n    return cache[id] = data;\n  } catch (err) {\n    return null;\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 38,
            "columnNumber" : 33,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:anonymous4",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 52,
      "columnNumber" : 21,
      "usages" : [
        {
          "targetObj" : {
            "name" : "anonymous4",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:anonymous4",
            "lineNumber" : 52,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "anonymous4",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:anonymous4",
            "lineNumber" : 52,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:anonymous4:anonymous",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 52,
      "columnNumber" : 36,
      "usages" : [
        {
          "targetObj" : {
            "name" : "async (userEntry) => {\n  const {email, commits} = userEntry;\n\n  if (userCache[email] !== undefined) {\n    return userCache[email];\n  }\n\n  console.log(colorize()`fetch github user info [${userEntry.name}]`);\n\n  return userCache[email] = {\n    ...userEntry,\n    ...await getUserFromCommit(commits[0].hash)\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 52,
            "columnNumber" : 36,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "async (userEntry) => {\n  const {email, commits} = userEntry;\n\n  if (userCache[email] !== undefined) {\n    return userCache[email];\n  }\n\n  console.log(colorize()`fetch github user info [${userEntry.name}]`);\n\n  return userCache[email] = {\n    ...userEntry,\n    ...await getUserFromCommit(commits[0].hash)\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 52,
            "columnNumber" : 36,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "getUserFromCommit",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:getUserFromCommit",
            "lineNumber" : 63,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getUserFromCommit",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:getUserFromCommit",
            "lineNumber" : 63,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:anonymous5:assign",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 71,
      "columnNumber" : 17,
      "usages" : [
        {
          "targetObj" : {
            "name" : "assign",
            "typeFullName" : "void",
            "resolvedMethod" : "bin\\contributors.js::program:anonymous5:assign",
            "lineNumber" : 86,
            "columnNumber" : 7,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "assign",
            "typeFullName" : "void",
            "resolvedMethod" : "bin\\contributors.js::program:anonymous5:assign",
            "lineNumber" : 86,
            "columnNumber" : 7,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "a",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 71,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "a",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 71,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "assign",
              "resolvedMethod" : "Object.assign",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 74,
              "columnNumber" : 4
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "assign",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.assign",
            "lineNumber" : 382,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "assign",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.assign",
            "lineNumber" : 382,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.assignmentPlus",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.assignmentPlus",
            "lineNumber" : 41,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.assignmentPlus",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.assignmentPlus",
            "lineNumber" : 41,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:anonymous6",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 96,
      "columnNumber" : 24,
      "usages" : [
        {
          "targetObj" : {
            "name" : "anonymous6",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:anonymous6",
            "lineNumber" : 96,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "anonymous6",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:anonymous6",
            "lineNumber" : 96,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:anonymous6:anonymous",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 96,
      "columnNumber" : 42,
      "usages" : [
        {
          "targetObj" : {
            "name" : "getUserInfo",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:getUserInfo",
            "lineNumber" : 157,
            "columnNumber" : 43,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getUserInfo",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:getUserInfo",
            "lineNumber" : 157,
            "columnNumber" : 43,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "async (tag) => {\n  if(releaseCache[tag] !== undefined) {\n    return releaseCache[tag];\n  }\n\n  const isUnreleasedTag = !tag;\n\n  const version = 'v' + tag.replace(/^v/, '');\n\n  const command = isUnreleasedTag ?\n    `npx auto-changelog --unreleased-only --stdout --commit-limit false --template json` :\n    `npx auto-changelog ${\n      version ? '--starting-version ' + version + ' --ending-version ' + version : ''\n    } --stdout --commit-limit false --template json`;\n\n  const release = JSON.parse((await exec(command)).stdout)[0];\n\n  if(release) {\n    const authors = {};\n\n    const commits = [\n      ...release.commits,\n      ...release.fixes.map(fix => fix.commit),\n      ...release.merges.map(fix => fix.commit)\n    ].filter(Boolean);\n\n    const commitMergeMap = {};\n\n    for(const merge of release.merges) {\n      commitMergeMap[merge.commit.hash] = merge.id;\n    }\n\n    for (const {hash, author, email, insertions, deletions} of commits) {\n      const entry = authors[email] = (authors[email]...",
            "typeFullName" : "ANY",
            "lineNumber" : 96,
            "columnNumber" : 42,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "async (tag) => {\n  if(releaseCache[tag] !== undefined) {\n    return releaseCache[tag];\n  }\n\n  const isUnreleasedTag = !tag;\n\n  const version = 'v' + tag.replace(/^v/, '');\n\n  const command = isUnreleasedTag ?\n    `npx auto-changelog --unreleased-only --stdout --commit-limit false --template json` :\n    `npx auto-changelog ${\n      version ? '--starting-version ' + version + ' --ending-version ' + version : ''\n    } --stdout --commit-limit false --template json`;\n\n  const release = JSON.parse((await exec(command)).stdout)[0];\n\n  if(release) {\n    const authors = {};\n\n    const commits = [\n      ...release.commits,\n      ...release.fixes.map(fix => fix.commit),\n      ...release.merges.map(fix => fix.commit)\n    ].filter(Boolean);\n\n    const commitMergeMap = {};\n\n    for(const merge of release.merges) {\n      commitMergeMap[merge.commit.hash] = merge.id;\n    }\n\n    for (const {hash, author, email, insertions, deletions} of commits) {\n      const entry = authors[email] = (authors[email]...",
            "typeFullName" : "ANY",
            "lineNumber" : 96,
            "columnNumber" : 42,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "pr",
            "typeFullName" : "undefined[]",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "commitMergeMap[hash]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 141,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "push",
              "resolvedMethod" : "entry.prs.push",
              "paramTypes" : [
                "undefined[]"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 142,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "exec",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:exec",
            "lineNumber" : 221,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "exec",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:exec",
            "lineNumber" : 221,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.logicalOr",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.logicalOr",
            "lineNumber" : 668,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.logicalOr",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.logicalOr",
            "lineNumber" : 668,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.equals",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.equals",
            "lineNumber" : 76,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.equals",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.equals",
            "lineNumber" : 76,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.logicalNot",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.logicalNot",
            "lineNumber" : 644,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.logicalNot",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.logicalNot",
            "lineNumber" : 644,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "__ecma.Array.factory",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Array.factory",
            "lineNumber" : 646,
            "columnNumber" : 41,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "__ecma.Array.factory",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Array.factory",
            "lineNumber" : 646,
            "columnNumber" : 41,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "tag",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 96,
            "columnNumber" : 49,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "tag",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 96,
            "columnNumber" : 49,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "replace",
              "resolvedMethod" : "__ecma.String:replace",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 103,
              "columnNumber" : 24
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "values",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.values",
            "lineNumber" : 210,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "values",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.values",
            "lineNumber" : 210,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "encodeURIComponent",
            "typeFullName" : "ANY",
            "resolvedMethod" : "encodeURIComponent",
            "lineNumber" : 13,
            "columnNumber" : 33,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "encodeURIComponent",
            "typeFullName" : "ANY",
            "resolvedMethod" : "encodeURIComponent",
            "lineNumber" : 13,
            "columnNumber" : 33,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "command",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "isUnreleasedTag ? \"npx auto-changelog --unreleased-only --stdout --commit-limit false --template json\" : <operator>.formatString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.conditional",
            "lineNumber" : 105,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "exec",
              "resolvedMethod" : "bin\\contributors.js::program:exec",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 111,
              "columnNumber" : 36
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:anonymous6:anonymous:anonymous",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 118,
      "columnNumber" : 27,
      "usages" : [
        {
          "targetObj" : {
            "name" : "fix => fix.commit",
            "typeFullName" : "ANY",
            "lineNumber" : 118,
            "columnNumber" : 27,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "fix => fix.commit",
            "typeFullName" : "ANY",
            "lineNumber" : 118,
            "columnNumber" : 27,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:anonymous6:anonymous:anonymous1",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 119,
      "columnNumber" : 28,
      "usages" : [
        {
          "targetObj" : {
            "name" : "fix => fix.commit",
            "typeFullName" : "ANY",
            "lineNumber" : 119,
            "columnNumber" : 28,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "fix => fix.commit",
            "typeFullName" : "ANY",
            "lineNumber" : 119,
            "columnNumber" : 28,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:anonymous6:anonymous:anonymous2",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 163,
      "columnNumber" : 12,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(a, b) => b.points - a.points",
            "typeFullName" : "ANY",
            "lineNumber" : 163,
            "columnNumber" : 12,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(a, b) => b.points - a.points",
            "typeFullName" : "ANY",
            "lineNumber" : 163,
            "columnNumber" : 12,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.subtraction",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.subtraction",
            "lineNumber" : 28,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.subtraction",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.subtraction",
            "lineNumber" : 28,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:anonymous8:anonymous",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 191,
      "columnNumber" : 29,
      "usages" : [
        {
          "targetObj" : {
            "name" : "({name})=> name === label",
            "typeFullName" : "ANY",
            "lineNumber" : 191,
            "columnNumber" : 29,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "({name})=> name === label",
            "typeFullName" : "ANY",
            "lineNumber" : 191,
            "columnNumber" : 29,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:cleanTemplate",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 12,
      "columnNumber" : 22,
      "usages" : [
        {
          "targetObj" : {
            "name" : "cleanTemplate",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:cleanTemplate",
            "lineNumber" : 216,
            "columnNumber" : 31,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "cleanTemplate",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:cleanTemplate",
            "lineNumber" : 216,
            "columnNumber" : 31,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "template",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 12,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "template",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 12,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "replace",
              "resolvedMethod" : "__ecma.String:replace",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 12,
              "columnNumber" : 34
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:deduplicate",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 67,
      "columnNumber" : 20,
      "usages" : [
        {
          "targetObj" : {
            "name" : "<operator>.not",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.not",
            "lineNumber" : 102,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.not",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.not",
            "lineNumber" : 102,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "entry",
            "typeFullName" : "__ecma.Boolean",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "loginsMap[login]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 85,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "assign",
              "resolvedMethod" : "bin\\contributors.js::program:anonymous5:assign",
              "paramTypes" : [
                "__ecma.Boolean",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 86,
              "columnNumber" : 7
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "entries",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.entries",
            "lineNumber" : 81,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "entries",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.entries",
            "lineNumber" : 81,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.iterator",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.iterator",
            "lineNumber" : 102,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.iterator",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.iterator",
            "lineNumber" : 102,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "deduplicate",
            "typeFullName" : "object",
            "resolvedMethod" : "bin\\contributors.js::program:deduplicate",
            "lineNumber" : 162,
            "columnNumber" : 36,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "deduplicate",
            "typeFullName" : "object",
            "resolvedMethod" : "bin\\contributors.js::program:deduplicate",
            "lineNumber" : 162,
            "columnNumber" : 36,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.logicalAnd",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.logicalAnd",
            "lineNumber" : 473,
            "columnNumber" : 3,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.logicalAnd",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.logicalAnd",
            "lineNumber" : 473,
            "columnNumber" : 3,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "authors",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 67,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "authors",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 67,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "entries",
              "resolvedMethod" : "Object.entries",
              "paramTypes" : [
                "object"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 81,
              "columnNumber" : 29
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:getTagRef",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 219,
      "columnNumber" : 18,
      "usages" : [
        {
          "targetObj" : {
            "name" : "getTagRef",
            "typeFullName" : "Promise<any>",
            "resolvedMethod" : "bin\\contributors.js::program:getTagRef",
            "lineNumber" : 39,
            "columnNumber" : 45,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getTagRef",
            "typeFullName" : "Promise<any>",
            "resolvedMethod" : "bin\\contributors.js::program:getTagRef",
            "lineNumber" : 39,
            "columnNumber" : 45,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:removeExtraLineBreaks",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 10,
      "columnNumber" : 30,
      "usages" : [
        {
          "targetObj" : {
            "name" : "removeExtraLineBreaks",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:removeExtraLineBreaks",
            "lineNumber" : 216,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "removeExtraLineBreaks",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:removeExtraLineBreaks",
            "lineNumber" : 216,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "str",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 10,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "str",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 10,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "replace",
              "resolvedMethod" : "__ecma.String:replace",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 10,
              "columnNumber" : 39
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:renderContributorsList",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 173,
      "columnNumber" : 31,
      "usages" : [
        {
          "targetObj" : {
            "name" : "release",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "await getReleaseInfo",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.await",
            "lineNumber" : 174,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "compile",
              "resolvedMethod" : "bin\\contributors.js::program:compile",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 178,
              "columnNumber" : 18
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "compile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:compile",
            "lineNumber" : 214,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "compile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:compile",
            "lineNumber" : 214,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "tag",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 173,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "tag",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 173,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "getReleaseInfo",
              "resolvedMethod" : "bin\\contributors.js::program:getReleaseInfo",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 174,
              "columnNumber" : 24
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "compile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "handlebars:Handlebars:compile",
            "lineNumber" : 66,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "compile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "handlebars:Handlebars:compile",
            "lineNumber" : 66,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "getReleaseInfo",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:getReleaseInfo",
            "lineNumber" : 184,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getReleaseInfo",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:getReleaseInfo",
            "lineNumber" : 184,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "String",
            "typeFullName" : "ANY",
            "resolvedMethod" : "String",
            "lineNumber" : 591,
            "columnNumber" : 58,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "String",
            "typeFullName" : "ANY",
            "resolvedMethod" : "String",
            "lineNumber" : 591,
            "columnNumber" : 58,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "renderContributorsList",
            "typeFullName" : "Promise<any>",
            "resolvedMethod" : "bin\\contributors.js::program:renderContributorsList",
            "lineNumber" : 77,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "renderContributorsList",
            "typeFullName" : "Promise<any>",
            "resolvedMethod" : "bin\\contributors.js::program:renderContributorsList",
            "lineNumber" : 77,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "template",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 173,
            "columnNumber" : 43,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "template",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 173,
            "columnNumber" : 43,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "readFile",
              "resolvedMethod" : "fs/promises:fs:readFile",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 176,
              "columnNumber" : 50
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "content",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "compile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:compile",
            "lineNumber" : 178,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "cleanTemplate",
              "resolvedMethod" : "bin\\contributors.js::program:cleanTemplate",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 180,
              "columnNumber" : 31
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "readFile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs/promises:fs:readFile",
            "lineNumber" : 66,
            "columnNumber" : 41,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "readFile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs/promises:fs:readFile",
            "lineNumber" : 66,
            "columnNumber" : 41,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\contributors.js::program:renderPRsList",
      "signature" : "",
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 183,
      "columnNumber" : 22,
      "usages" : [
        {
          "targetObj" : {
            "name" : "getIssueById",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:getIssueById",
            "lineNumber" : 189,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getIssueById",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:getIssueById",
            "lineNumber" : 189,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "renderPRsList",
            "typeFullName" : "Promise<any>",
            "resolvedMethod" : "bin\\contributors.js::program:renderPRsList",
            "lineNumber" : 71,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "renderPRsList",
            "typeFullName" : "Promise<any>",
            "resolvedMethod" : "bin\\contributors.js::program:renderPRsList",
            "lineNumber" : 71,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "template",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 183,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "template",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 183,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "readFile",
              "resolvedMethod" : "fs/promises:fs:readFile",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 212,
              "columnNumber" : 50
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.greaterThan",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.greaterThan",
            "lineNumber" : 453,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.greaterThan",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.greaterThan",
            "lineNumber" : 453,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "tag",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 183,
            "columnNumber" : 29,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "tag",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 183,
            "columnNumber" : 29,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "getReleaseInfo",
              "resolvedMethod" : "bin\\contributors.js::program:getReleaseInfo",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 184,
              "columnNumber" : 24
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "exec",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:exec",
            "lineNumber" : 508,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "exec",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:exec",
            "lineNumber" : 508,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "body",
            "typeFullName" : "RegExpExecArray",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "_tmp_31.body",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 192,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "exec",
              "resolvedMethod" : "__ecma.String:exec",
              "paramTypes" : [
                "RegExpExecArray"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 204,
              "columnNumber" : 27
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.void",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.void",
            "lineNumber" : 613,
            "columnNumber" : 35,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.void",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.void",
            "lineNumber" : 613,
            "columnNumber" : 35,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "content",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "compile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\contributors.js::program:compile",
            "lineNumber" : 214,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "cleanTemplate",
              "resolvedMethod" : "bin\\contributors.js::program:cleanTemplate",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 216,
              "columnNumber" : 31
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "release",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "await getReleaseInfo",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.await",
            "lineNumber" : 184,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "compile",
              "resolvedMethod" : "bin\\contributors.js::program:compile",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 214,
              "columnNumber" : 18
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\githubAPI.js::program",
      "signature" : "",
      "fileName" : "bin\\githubAPI.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "axios",
            "typeFullName" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosStatic",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\githubAPI.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "create",
              "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosStatic:create",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 5,
              "columnNumber" : 15
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\githubAPI.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\githubAPI.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "create",
            "typeFullName" : "ANY",
            "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosStatic:create",
            "lineNumber" : 5,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "create",
            "typeFullName" : "ANY",
            "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosStatic:create",
            "lineNumber" : 5,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\helpers\\colorize.js::program",
      "signature" : "",
      "fileName" : "bin\\helpers\\colorize.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\helpers\\colorize.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\helpers\\colorize.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\helpers\\colorize.js::program:anonymous:anonymous",
      "signature" : "",
      "fileName" : "bin\\helpers\\colorize.js",
      "lineNumber" : 10,
      "columnNumber" : 9,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(strings, ...values) => {\n    const {length} = values;\n    return strings.map((str, i) => i < length ? str + chalk[colors[i%colorsCount]].bold(values[i]) : str).join('');\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 10,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(strings, ...values) => {\n    const {length} = values;\n    return strings.map((str, i) => i < length ? str + chalk[colors[i%colorsCount]].bold(values[i]) : str).join('');\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 10,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "strings",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 10,
            "columnNumber" : 10,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "strings",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 10,
            "columnNumber" : 10,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "map",
              "resolvedMethod" : "strings.map",
              "paramTypes" : [
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 12,
              "columnNumber" : 11
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\helpers\\colorize.js::program:anonymous:anonymous:anonymous",
      "signature" : "",
      "fileName" : "bin\\helpers\\colorize.js",
      "lineNumber" : 12,
      "columnNumber" : 23,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(str, i) => i < length ? str + chalk[colors[i%colorsCount]].bold(values[i]) : str",
            "typeFullName" : "ANY",
            "lineNumber" : 12,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(str, i) => i < length ? str + chalk[colors[i%colorsCount]].bold(values[i]) : str",
            "typeFullName" : "ANY",
            "lineNumber" : 12,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.lessThan",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.lessThan",
            "lineNumber" : 326,
            "columnNumber" : 40,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.lessThan",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.lessThan",
            "lineNumber" : 326,
            "columnNumber" : 40,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.modulo",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.modulo",
            "lineNumber" : 42,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.modulo",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.modulo",
            "lineNumber" : 42,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\helpers\\colorize.js::program:colorize",
      "signature" : "",
      "fileName" : "bin\\helpers\\colorize.js",
      "lineNumber" : 3,
      "columnNumber" : 24,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(...colors)=> {\n  if(!colors.length) {\n    colors = ['green', 'magenta', 'cyan', 'blue', 'yellow', 'red'];\n  }\n\n  const colorsCount = colors.length;\n\n  return (strings, ...values) => {\n    const {length} = values;\n    return strings.map((str, i) => i < length ? str + chalk[colors[i%colorsCount]].bold(values[i]) : str).join('');\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 3,
            "columnNumber" : 24,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(...colors)=> {\n  if(!colors.length) {\n    colors = ['green', 'magenta', 'cyan', 'blue', 'yellow', 'red'];\n  }\n\n  const colorsCount = colors.length;\n\n  return (strings, ...values) => {\n    const {length} = values;\n    return strings.map((str, i) => i < length ? str + chalk[colors[i%colorsCount]].bold(values[i]) : str).join('');\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 3,
            "columnNumber" : 24,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\injectContributorsList.js::program",
      "signature" : "",
      "fileName" : "bin\\injectContributorsList.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\injectContributorsList.js::program:require",
            "lineNumber" : 6,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\injectContributorsList.js::program:require",
            "lineNumber" : 6,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "__dirname",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "path.dirname",
            "typeFullName" : "ANY",
            "resolvedMethod" : "path:path:dirname",
            "lineNumber" : 8,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "resolve",
              "resolvedMethod" : "path:path:resolve",
              "paramTypes" : [
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 10,
              "columnNumber" : 30
            },
            {
              "callName" : "resolve",
              "resolvedMethod" : "path:path:resolve",
              "paramTypes" : [
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 11,
              "columnNumber" : 21
            },
            {
              "callName" : "resolve",
              "resolvedMethod" : "path:path:resolve",
              "paramTypes" : [
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 16,
              "columnNumber" : 11
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "fs",
            "typeFullName" : "fs/promises:fs",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\injectContributorsList.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "readFile",
              "resolvedMethod" : "fs/promises:fs:readFile",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 18,
              "columnNumber" : 31
            },
            {
              "callName" : "writeFile",
              "resolvedMethod" : "fs/promises:fs:writeFile",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 65,
              "columnNumber" : 8
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "path",
            "typeFullName" : "path:path",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\injectContributorsList.js::program:require",
            "lineNumber" : 2,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "dirname",
              "resolvedMethod" : "path:path:dirname",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 8,
              "columnNumber" : 18
            },
            {
              "callName" : "resolve",
              "resolvedMethod" : "path:path:resolve",
              "paramTypes" : [
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 10,
              "columnNumber" : 30
            },
            {
              "callName" : "resolve",
              "resolvedMethod" : "path:path:resolve",
              "paramTypes" : [
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 11,
              "columnNumber" : 21
            },
            {
              "callName" : "resolve",
              "resolvedMethod" : "path:path:resolve",
              "paramTypes" : [
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 16,
              "columnNumber" : 11
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "PRS_TEMPLATE",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "path.resolve",
            "typeFullName" : "ANY",
            "resolvedMethod" : "path:path:resolve",
            "lineNumber" : 11,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "renderPRsList",
              "resolvedMethod" : "bin\\contributors.js::program:renderPRsList",
              "paramTypes" : [
                "\"\" | Promise<any>",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 71,
              "columnNumber" : 22
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "fileURLToPath",
            "typeFullName" : "ANY",
            "resolvedMethod" : "url:fileURLToPath",
            "lineNumber" : 8,
            "columnNumber" : 31,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "fileURLToPath",
            "typeFullName" : "ANY",
            "resolvedMethod" : "url:fileURLToPath",
            "lineNumber" : 8,
            "columnNumber" : 31,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "dirname",
            "typeFullName" : "ANY",
            "resolvedMethod" : "path:path:dirname",
            "lineNumber" : 8,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "dirname",
            "typeFullName" : "ANY",
            "resolvedMethod" : "path:path:dirname",
            "lineNumber" : 8,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "CONTRIBUTORS_TEMPLATE",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "path.resolve",
            "typeFullName" : "ANY",
            "resolvedMethod" : "path:path:resolve",
            "lineNumber" : 10,
            "columnNumber" : 30,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "renderContributorsList",
              "resolvedMethod" : "bin\\contributors.js::program:renderContributorsList",
              "paramTypes" : [
                "\"\" | Promise<any>",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 77,
              "columnNumber" : 11
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\injectContributorsList.js::program:anonymous1",
      "signature" : "",
      "fileName" : "bin\\injectContributorsList.js",
      "lineNumber" : 71,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(tag) => tag ? '' : renderPRsList(tag, PRS_TEMPLATE, {awesome_threshold: 5, comments_threshold: 7})",
            "typeFullName" : "ANY",
            "lineNumber" : 71,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(tag) => tag ? '' : renderPRsList(tag, PRS_TEMPLATE, {awesome_threshold: 5, comments_threshold: 7})",
            "typeFullName" : "ANY",
            "lineNumber" : 71,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "tag",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 71,
            "columnNumber" : 3,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "tag",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 71,
            "columnNumber" : 3,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "renderPRsList",
              "resolvedMethod" : "bin\\contributors.js::program:renderPRsList",
              "paramTypes" : [
                "\"\" | Promise<any>",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 71,
              "columnNumber" : 22
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\injectContributorsList.js::program:anonymous2",
      "signature" : "",
      "fileName" : "bin\\injectContributorsList.js",
      "lineNumber" : 77,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(tag) => renderContributorsList(tag, CONTRIBUTORS_TEMPLATE)",
            "typeFullName" : "ANY",
            "lineNumber" : 77,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(tag) => renderContributorsList(tag, CONTRIBUTORS_TEMPLATE)",
            "typeFullName" : "ANY",
            "lineNumber" : 77,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "tag",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 77,
            "columnNumber" : 3,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "tag",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 77,
            "columnNumber" : 3,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "renderContributorsList",
              "resolvedMethod" : "bin\\contributors.js::program:renderContributorsList",
              "paramTypes" : [
                "\"\" | Promise<any>",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 77,
              "columnNumber" : 11
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\injectContributorsList.js::program:anonymous:anonymous",
      "signature" : "",
      "fileName" : "bin\\injectContributorsList.js",
      "lineNumber" : 25,
      "columnNumber" : 59,
      "usages" : [
        {
          "targetObj" : {
            "name" : "releaseContent",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "content.slice",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:slice",
            "lineNumber" : 26,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "test",
              "resolvedMethod" : "contributorsRE.test",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 28,
              "columnNumber" : 23
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "index",
            "typeFullName" : "__ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "offset + match.length",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.addition",
            "lineNumber" : 33,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "slice",
              "resolvedMethod" : "__ecma.String:slice",
              "paramTypes" : [
                "__ecma.Number",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 26,
              "columnNumber" : 27
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "async (match, nextTag, offset) => {\n    const releaseContent = content.slice(index, offset);\n\n    const hasSection = contributorsRE.test(releaseContent);\n\n    const currentTag = tag;\n\n    tag = nextTag;\n    index = offset + match.length;\n\n    if(currentTag) {\n      if (hasSection) {\n        console.log(colorize()`[${currentTag}]: ✓ OK`);\n      } else {\n        const target = isFirstTag && (!await getTagRef(currentTag)) ? '' : currentTag;\n\n        console.log(colorize()`[${currentTag}]: ❌ MISSED` + (!target ? ' (UNRELEASED)' : ''));\n\n        isFirstTag = false;\n\n        console.log(`Generating section...`);\n\n        const section = await injector(target);\n\n        if (!section) {\n          return match;\n        }\n\n        console.log(colorize()`\\nRENDERED SECTION [${name}] for [${currentTag}]:`);\n        console.log('-------------BEGIN--------------\\n');\n        console.log(section);\n        console.log('--------------END---------------\\n');\n\n        return section + '\\n' + match;\n  ...",
            "typeFullName" : "ANY",
            "lineNumber" : 25,
            "columnNumber" : 59,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "async (match, nextTag, offset) => {\n    const releaseContent = content.slice(index, offset);\n\n    const hasSection = contributorsRE.test(releaseContent);\n\n    const currentTag = tag;\n\n    tag = nextTag;\n    index = offset + match.length;\n\n    if(currentTag) {\n      if (hasSection) {\n        console.log(colorize()`[${currentTag}]: ✓ OK`);\n      } else {\n        const target = isFirstTag && (!await getTagRef(currentTag)) ? '' : currentTag;\n\n        console.log(colorize()`[${currentTag}]: ❌ MISSED` + (!target ? ' (UNRELEASED)' : ''));\n\n        isFirstTag = false;\n\n        console.log(`Generating section...`);\n\n        const section = await injector(target);\n\n        if (!section) {\n          return match;\n        }\n\n        console.log(colorize()`\\nRENDERED SECTION [${name}] for [${currentTag}]:`);\n        console.log('-------------BEGIN--------------\\n');\n        console.log(section);\n        console.log('--------------END---------------\\n');\n\n        return section + '\\n' + match;\n  ...",
            "typeFullName" : "ANY",
            "lineNumber" : 25,
            "columnNumber" : 59,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "slice",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:slice",
            "lineNumber" : 6,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "slice",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:slice",
            "lineNumber" : 6,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "target",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "isFirstTag && ",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.conditional",
            "lineNumber" : 39,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "injector",
              "resolvedMethod" : "bin\\injectContributorsList.js::program:injector",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 47,
              "columnNumber" : 30
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "injector",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\injectContributorsList.js::program:injector",
            "lineNumber" : 47,
            "columnNumber" : 30,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "injector",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\injectContributorsList.js::program:injector",
            "lineNumber" : 47,
            "columnNumber" : 30,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "section",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "await injector",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.await",
            "lineNumber" : 47,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "log",
              "resolvedMethod" : "__whatwg.console:log",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 55,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "offset",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 25,
            "columnNumber" : 82,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "offset",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 25,
            "columnNumber" : 82,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "slice",
              "resolvedMethod" : "__ecma.String:slice",
              "paramTypes" : [
                "__ecma.Number",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 26,
              "columnNumber" : 27
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\injectContributorsList.js::program:injectSection",
      "signature" : "",
      "fileName" : "bin\\injectContributorsList.js",
      "lineNumber" : 13,
      "columnNumber" : 22,
      "usages" : [
        {
          "targetObj" : {
            "name" : "injectSection",
            "typeFullName" : "Promise<void>",
            "resolvedMethod" : "bin\\injectContributorsList.js::program:injectSection",
            "lineNumber" : 74,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "injectSection",
            "typeFullName" : "Promise<void>",
            "resolvedMethod" : "bin\\injectContributorsList.js::program:injectSection",
            "lineNumber" : 74,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "newContent",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "await asyncReplace",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.await",
            "lineNumber" : 25,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "writeFile",
              "resolvedMethod" : "fs/promises:fs:writeFile",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 65,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "resolve",
            "typeFullName" : "ANY",
            "resolvedMethod" : "path:path:resolve",
            "lineNumber" : 14,
            "columnNumber" : 32,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "resolve",
            "typeFullName" : "ANY",
            "resolvedMethod" : "path:path:resolve",
            "lineNumber" : 14,
            "columnNumber" : 32,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "contributorsRE",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 13,
            "columnNumber" : 35,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "contributorsRE",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 13,
            "columnNumber" : 35,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "test",
              "resolvedMethod" : "contributorsRE.test",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 28,
              "columnNumber" : 23
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "infile",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "path.resolve",
            "typeFullName" : "ANY",
            "resolvedMethod" : "path:path:resolve",
            "lineNumber" : 16,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "resolve",
              "resolvedMethod" : "path:path:resolve",
              "paramTypes" : [
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 16,
              "columnNumber" : 11
            },
            {
              "callName" : "readFile",
              "resolvedMethod" : "fs/promises:fs:readFile",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 18,
              "columnNumber" : 31
            },
            {
              "callName" : "writeFile",
              "resolvedMethod" : "fs/promises:fs:writeFile",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 65,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "asyncReplace",
            "typeFullName" : "ANY",
            "resolvedMethod" : "string-replace-async:asyncReplace",
            "lineNumber" : 25,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "asyncReplace",
            "typeFullName" : "ANY",
            "resolvedMethod" : "string-replace-async:asyncReplace",
            "lineNumber" : 25,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "content",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "String",
            "typeFullName" : "String",
            "resolvedMethod" : "String",
            "lineNumber" : 18,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "slice",
              "resolvedMethod" : "__ecma.String:slice",
              "paramTypes" : [
                "__ecma.Number",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 26,
              "columnNumber" : 27
            }
          ],
          "argToCalls" : [
            {
              "callName" : "asyncReplace",
              "resolvedMethod" : "string-replace-async:asyncReplace",
              "paramTypes" : [
                "__ecma.String",
                "RegExp",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 25,
              "columnNumber" : 27
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "writeFile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs/promises:fs:writeFile",
            "lineNumber" : 65,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "writeFile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs/promises:fs:writeFile",
            "lineNumber" : 65,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\pr.js::program",
      "signature" : "",
      "fileName" : "bin\\pr.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\pr.js::program:require",
            "lineNumber" : 6,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\pr.js::program:require",
            "lineNumber" : 6,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "util",
            "typeFullName" : "util:util",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\pr.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "promisify",
              "resolvedMethod" : "util:util:promisify",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 8,
              "columnNumber" : 13
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "fs",
            "typeFullName" : "fs/promises:fs",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\pr.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "stat",
              "resolvedMethod" : "fs/promises:fs:stat",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 48,
              "columnNumber" : 19
            },
            {
              "callName" : "readFile",
              "resolvedMethod" : "fs/promises:fs:readFile",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 50,
              "columnNumber" : 40
            },
            {
              "callName" : "readFile",
              "resolvedMethod" : "fs/promises:fs:readFile",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 66,
              "columnNumber" : 41
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "Handlebars",
            "typeFullName" : "handlebars:Handlebars",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\pr.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "registerHelper",
              "resolvedMethod" : "handlebars:Handlebars:registerHelper",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 64,
              "columnNumber" : 2
            },
            {
              "callName" : "compile",
              "resolvedMethod" : "handlebars:Handlebars:compile",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 66,
              "columnNumber" : 9
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\pr.js::program:anonymous2:anonymous",
      "signature" : "",
      "fileName" : "bin\\pr.js",
      "lineNumber" : 52,
      "columnNumber" : 27,
      "usages" : [
        {
          "targetObj" : {
            "name" : "({tag, size}) => `${prettyBytes(size)} (${tag})`",
            "typeFullName" : "ANY",
            "lineNumber" : 52,
            "columnNumber" : 27,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "({tag, size}) => `${prettyBytes(size)} (${tag})`",
            "typeFullName" : "ANY",
            "lineNumber" : 52,
            "columnNumber" : 27,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "size",
            "typeFullName" : "__ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "param1_0.size",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 52,
            "columnNumber" : 34,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "prettyBytes",
              "resolvedMethod" : "pretty-bytes:prettyBytes",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 52,
              "columnNumber" : 47
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "prettyBytes",
            "typeFullName" : "ANY",
            "resolvedMethod" : "pretty-bytes:prettyBytes",
            "lineNumber" : 64,
            "columnNumber" : 50,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "prettyBytes",
            "typeFullName" : "ANY",
            "resolvedMethod" : "pretty-bytes:prettyBytes",
            "lineNumber" : 64,
            "columnNumber" : 50,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\pr.js::program:anonymous3:anonymous",
      "signature" : "",
      "fileName" : "bin\\pr.js",
      "lineNumber" : 64,
      "columnNumber" : 40,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(bytes)=> prettyBytes(bytes)",
            "typeFullName" : "ANY",
            "lineNumber" : 64,
            "columnNumber" : 40,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(bytes)=> prettyBytes(bytes)",
            "typeFullName" : "ANY",
            "lineNumber" : 64,
            "columnNumber" : 40,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "bytes",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 64,
            "columnNumber" : 41,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "bytes",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 64,
            "columnNumber" : 41,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "prettyBytes",
              "resolvedMethod" : "pretty-bytes:prettyBytes",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 64,
              "columnNumber" : 50
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\pr.js::program:generateBody",
      "signature" : "",
      "fileName" : "bin\\pr.js",
      "lineNumber" : 59,
      "columnNumber" : 21,
      "usages" : [
        {
          "targetObj" : {
            "name" : "files",
            "typeFullName" : "files",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "_tmp_5.files",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 59,
            "columnNumber" : 29,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "generateFileReport",
              "resolvedMethod" : "bin\\pr.js::program:generateFileReport",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 61,
              "columnNumber" : 17
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "registerHelper",
            "typeFullName" : "ANY",
            "resolvedMethod" : "handlebars:Handlebars:registerHelper",
            "lineNumber" : 64,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "registerHelper",
            "typeFullName" : "ANY",
            "resolvedMethod" : "handlebars:Handlebars:registerHelper",
            "lineNumber" : 64,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "Handlebars.compile(String(await fs.readFile(template)))",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\pr.js::program:Handlebars.compile(String(await fs.readFile(template)))",
            "lineNumber" : 66,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "Handlebars.compile(String(await fs.readFile(template)))",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\pr.js::program:Handlebars.compile(String(await fs.readFile(template)))",
            "lineNumber" : 66,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "template",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "_tmp_5.template === void 0 ? \"./templates/pr.hbs\" : _tmp_5.template",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.conditional",
            "lineNumber" : 59,
            "columnNumber" : 36,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "readFile",
              "resolvedMethod" : "fs/promises:fs:readFile",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 66,
              "columnNumber" : 41
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "generateBody",
            "typeFullName" : "Promise<any>",
            "resolvedMethod" : "bin\\pr.js::program:generateBody",
            "lineNumber" : 69,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "generateBody",
            "typeFullName" : "Promise<any>",
            "resolvedMethod" : "bin\\pr.js::program:generateBody",
            "lineNumber" : 69,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\pr.js::program:generateFileReport",
      "signature" : "",
      "fileName" : "bin\\pr.js",
      "lineNumber" : 40,
      "columnNumber" : 27,
      "usages" : [
        {
          "targetObj" : {
            "name" : "commits",
            "typeFullName" : "(...items: ANY[]) => __ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "await getBlobHistory",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.await",
            "lineNumber" : 44,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "map",
              "resolvedMethod" : "(...items: ANY[]) => __ecma.Number:map",
              "paramTypes" : [
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 52,
              "columnNumber" : 15
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "files",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 40,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "files",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 40,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "entries",
              "resolvedMethod" : "Object.entries",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 43,
              "columnNumber" : 28
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "gzipSize",
            "typeFullName" : "ANY",
            "resolvedMethod" : "gzip-size:gzipSize",
            "lineNumber" : 50,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "gzipSize",
            "typeFullName" : "ANY",
            "resolvedMethod" : "gzip-size:gzipSize",
            "lineNumber" : 50,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "generateFileReport",
            "typeFullName" : "object",
            "resolvedMethod" : "bin\\pr.js::program:generateFileReport",
            "lineNumber" : 61,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "generateFileReport",
            "typeFullName" : "object",
            "resolvedMethod" : "bin\\pr.js::program:generateFileReport",
            "lineNumber" : 61,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "map",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(...items: ANY[]) => __ecma.Number:map",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "map",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(...items: ANY[]) => __ecma.Number:map",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "stat",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs/promises:fs:stat",
            "lineNumber" : 48,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "stat",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs/promises:fs:stat",
            "lineNumber" : 48,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\pr.js::program:getBlobHistory",
      "signature" : "",
      "fileName" : "bin\\pr.js",
      "lineNumber" : 10,
      "columnNumber" : 23,
      "usages" : [
        {
          "targetObj" : {
            "name" : "filepath",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 10,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "filepath",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 10,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "getBlobSize",
              "resolvedMethod" : "bin\\pr.js::program:getBlobSize",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 25,
              "columnNumber" : 18
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "exec",
            "typeFullName" : "ANY",
            "resolvedMethod" : "RegExp:exec",
            "lineNumber" : 30,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "exec",
            "typeFullName" : "ANY",
            "resolvedMethod" : "RegExp:exec",
            "lineNumber" : 30,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "commits",
            "typeFullName" : "(...items: ANY[]) => __ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "__ecma.Array.factory",
            "typeFullName" : "__ecma.Array.factory",
            "resolvedMethod" : "__ecma.Array.factory",
            "lineNumber" : 15,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "push",
              "resolvedMethod" : "(...items: ANY[]) => __ecma.Number:push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 22,
              "columnNumber" : 4
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "exec",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\pr.js::program:exec",
            "lineNumber" : 33,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "exec",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\pr.js::program:exec",
            "lineNumber" : 33,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "getBlobHistory",
            "typeFullName" : "(...items: ANY[]) => __ecma.Number",
            "resolvedMethod" : "bin\\pr.js::program:getBlobHistory",
            "lineNumber" : 44,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getBlobHistory",
            "typeFullName" : "(...items: ANY[]) => __ecma.Number",
            "resolvedMethod" : "bin\\pr.js::program:getBlobHistory",
            "lineNumber" : 44,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "push",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(...items: ANY[]) => __ecma.Number:push",
            "lineNumber" : 45,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "push",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(...items: ANY[]) => __ecma.Number:push",
            "lineNumber" : 45,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "log",
            "typeFullName" : "stdout",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "await exec",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 11,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "exec",
              "resolvedMethod" : "regexp.exec",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 21,
              "columnNumber" : 17
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\pr.js::program:getBlobSize",
      "signature" : "",
      "fileName" : "bin\\pr.js",
      "lineNumber" : 32,
      "columnNumber" : 20,
      "usages" : [
        {
          "targetObj" : {
            "name" : "getBlobSize",
            "typeFullName" : "Promise<number>",
            "resolvedMethod" : "bin\\pr.js::program:getBlobSize",
            "lineNumber" : 25,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getBlobSize",
            "typeFullName" : "Promise<number>",
            "resolvedMethod" : "bin\\pr.js::program:getBlobSize",
            "lineNumber" : 25,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.plus",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.plus",
            "lineNumber" : 599,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.plus",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.plus",
            "lineNumber" : 599,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\ssl_hotfix.js::program",
      "signature" : "",
      "fileName" : "bin\\ssl_hotfix.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "join",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String[]:join",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "join",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String[]:join",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "on",
            "typeFullName" : "ANY",
            "resolvedMethod" : "import(\"child_process\").ChildProcess:on",
            "lineNumber" : 75,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "on",
            "typeFullName" : "ANY",
            "resolvedMethod" : "import(\"child_process\").ChildProcess:on",
            "lineNumber" : 75,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\ssl_hotfix.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "bin\\ssl_hotfix.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "spawn",
            "typeFullName" : "ANY",
            "resolvedMethod" : "child_process:spawn",
            "lineNumber" : 13,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "spawn",
            "typeFullName" : "ANY",
            "resolvedMethod" : "child_process:spawn",
            "lineNumber" : 13,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "test",
            "typeFullName" : "import(\"child_process\").ChildProcess",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "spawn",
            "typeFullName" : "ANY",
            "resolvedMethod" : "child_process:spawn",
            "lineNumber" : 13,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "on",
              "resolvedMethod" : "import(\"child_process\").ChildProcess:on",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 20,
              "columnNumber" : 0
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "args",
            "typeFullName" : "__ecma.String[]",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "process.argv.slice",
            "typeFullName" : "ANY",
            "resolvedMethod" : "process.argv.slice",
            "lineNumber" : 3,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "join",
              "resolvedMethod" : "__ecma.String[]:join",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 5,
              "columnNumber" : 23
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "warn",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__whatwg.console:warn",
            "lineNumber" : 43,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "warn",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__whatwg.console:warn",
            "lineNumber" : 43,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "bin\\ssl_hotfix.js::program:anonymous",
      "signature" : "",
      "fileName" : "bin\\ssl_hotfix.js",
      "lineNumber" : 20,
      "columnNumber" : 16,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function (code) {\n  process.exit(code)\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 20,
            "columnNumber" : 16,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function (code) {\n  process.exit(code)\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 20,
            "columnNumber" : 16,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "code",
            "typeFullName" : "__ecma.Number",
            "position" : 1,
            "lineNumber" : 20,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "code",
            "typeFullName" : "__ecma.Number",
            "position" : 1,
            "lineNumber" : 20,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "exit",
              "resolvedMethod" : "NodeJS.Process:exit",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 21,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "exit",
            "typeFullName" : "ANY",
            "resolvedMethod" : "NodeJS.Process:exit",
            "lineNumber" : 21,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "exit",
            "typeFullName" : "ANY",
            "resolvedMethod" : "NodeJS.Process:exit",
            "lineNumber" : 21,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "gulpfile.js::program",
      "signature" : "",
      "fileName" : "gulpfile.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "minimist",
            "typeFullName" : "ANY",
            "resolvedMethod" : "minimist:minimist",
            "lineNumber" : 6,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "minimist",
            "typeFullName" : "ANY",
            "resolvedMethod" : "minimist:minimist",
            "lineNumber" : 6,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "task",
            "typeFullName" : "ANY",
            "resolvedMethod" : "gulp:gulp:task",
            "lineNumber" : 73,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "task",
            "typeFullName" : "ANY",
            "resolvedMethod" : "gulp:gulp:task",
            "lineNumber" : 73,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "fs",
            "typeFullName" : "fs-extra:fs",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "gulpfile.js::program:require",
            "lineNumber" : 2,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "emptyDir",
              "resolvedMethod" : "fs-extra:fs:emptyDir",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 13,
              "columnNumber" : 8
            },
            {
              "callName" : "readFile",
              "resolvedMethod" : "fs-extra:fs:readFile",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 17,
              "columnNumber" : 31
            },
            {
              "callName" : "readFile",
              "resolvedMethod" : "fs-extra:fs:readFile",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 18,
              "columnNumber" : 33
            },
            {
              "callName" : "writeFile",
              "resolvedMethod" : "fs-extra:fs:writeFile",
              "paramTypes" : [
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 34,
              "columnNumber" : 8
            },
            {
              "callName" : "readFile",
              "resolvedMethod" : "fs-extra:fs:readFile",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 53,
              "columnNumber" : 31
            },
            {
              "callName" : "writeFile",
              "resolvedMethod" : "fs-extra:fs:writeFile",
              "paramTypes" : [
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 64,
              "columnNumber" : 10
            },
            {
              "callName" : "readFile",
              "resolvedMethod" : "fs-extra:fs:readFile",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 74,
              "columnNumber" : 29
            },
            {
              "callName" : "writeFile",
              "resolvedMethod" : "fs-extra:fs:writeFile",
              "paramTypes" : [
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 78,
              "columnNumber" : 8
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "gulp",
            "typeFullName" : "gulp:gulp",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "gulpfile.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "task",
              "resolvedMethod" : "gulp:gulp:task",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 8,
              "columnNumber" : 2
            },
            {
              "callName" : "task",
              "resolvedMethod" : "gulp:gulp:task",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 12,
              "columnNumber" : 14
            },
            {
              "callName" : "task",
              "resolvedMethod" : "gulp:gulp:task",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 16,
              "columnNumber" : 14
            },
            {
              "callName" : "task",
              "resolvedMethod" : "gulp:gulp:task",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 50,
              "columnNumber" : 20
            },
            {
              "callName" : "task",
              "resolvedMethod" : "gulp:gulp:task",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 73,
              "columnNumber" : 12
            },
            {
              "callName" : "series",
              "resolvedMethod" : "gulp:gulp:series",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 85,
              "columnNumber" : 16
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "axios",
            "typeFullName" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosInstance",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "gulpfile.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "get",
              "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosInstance:get",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 38,
              "columnNumber" : 30
            },
            {
              "callName" : "get",
              "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosInstance:get",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 44,
              "columnNumber" : 38
            },
            {
              "callName" : "isAxiosError",
              "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosInstance:isAxiosError",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 66,
              "columnNumber" : 8
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "series",
            "typeFullName" : "ANY",
            "resolvedMethod" : "gulp:gulp:series",
            "lineNumber" : 85,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "series",
            "typeFullName" : "ANY",
            "resolvedMethod" : "gulp:gulp:series",
            "lineNumber" : 85,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "gulpfile.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "gulpfile.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "gulpfile.js::program:anonymous",
      "signature" : "",
      "fileName" : "gulpfile.js",
      "lineNumber" : 8,
      "columnNumber" : 23,
      "usages" : [
        {
          "targetObj" : {
            "name" : "async function(){\n  console.log('hello!');\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 8,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "async function(){\n  console.log('hello!');\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 8,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "gulpfile.js::program:anonymous1",
      "signature" : "",
      "fileName" : "gulpfile.js",
      "lineNumber" : 12,
      "columnNumber" : 33,
      "usages" : [
        {
          "targetObj" : {
            "name" : "async function() {\n  await fs.emptyDir('./dist/')\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 12,
            "columnNumber" : 33,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "async function() {\n  await fs.emptyDir('./dist/')\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 12,
            "columnNumber" : 33,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "emptyDir",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs-extra:fs:emptyDir",
            "lineNumber" : 13,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "emptyDir",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs-extra:fs:emptyDir",
            "lineNumber" : 13,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "gulpfile.js::program:anonymous2",
      "signature" : "",
      "fileName" : "gulpfile.js",
      "lineNumber" : 16,
      "columnNumber" : 33,
      "usages" : [
        {
          "targetObj" : {
            "name" : "writeFile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs-extra:fs:writeFile",
            "lineNumber" : 78,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "writeFile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs-extra:fs:writeFile",
            "lineNumber" : 78,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "readFile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs-extra:fs:readFile",
            "lineNumber" : 74,
            "columnNumber" : 29,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "readFile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs-extra:fs:readFile",
            "lineNumber" : 74,
            "columnNumber" : 29,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "stringify",
            "typeFullName" : "ANY",
            "resolvedMethod" : "JSON.stringify",
            "lineNumber" : 64,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "stringify",
            "typeFullName" : "ANY",
            "resolvedMethod" : "JSON.stringify",
            "lineNumber" : 64,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.postIncrement",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.postIncrement",
            "lineNumber" : 616,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.postIncrement",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.postIncrement",
            "lineNumber" : 616,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "bower",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "JSON.parse",
            "typeFullName" : "JSON.parse",
            "resolvedMethod" : "JSON.parse",
            "lineNumber" : 18,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "stringify",
              "resolvedMethod" : "JSON.stringify",
              "paramTypes" : [
                "ANY",
                "__ecma.Null",
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 34,
              "columnNumber" : 35
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "async function () {\n  const npm = JSON.parse(await fs.readFile('package.json'));\n  const bower = JSON.parse(await fs.readFile('bower.json'));\n\n  const fields = [\n    'name',\n    'description',\n    'version',\n    'homepage',\n    'license',\n    'keywords'\n  ];\n\n  for (let i = 0, l = fields.length; i < l; i++) {\n    const field = fields[i];\n    bower[field] = npm[field];\n  }\n\n  await fs.writeFile('bower.json', JSON.stringify(bower, null, 2));\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 16,
            "columnNumber" : 33,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "async function () {\n  const npm = JSON.parse(await fs.readFile('package.json'));\n  const bower = JSON.parse(await fs.readFile('bower.json'));\n\n  const fields = [\n    'name',\n    'description',\n    'version',\n    'homepage',\n    'license',\n    'keywords'\n  ];\n\n  for (let i = 0, l = fields.length; i < l; i++) {\n    const field = fields[i];\n    bower[field] = npm[field];\n  }\n\n  await fs.writeFile('bower.json', JSON.stringify(bower, null, 2));\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 16,
            "columnNumber" : 33,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "gulpfile.js::program:anonymous3",
      "signature" : "",
      "fileName" : "gulpfile.js",
      "lineNumber" : 50,
      "columnNumber" : 41,
      "usages" : [
        {
          "targetObj" : {
            "name" : "npm",
            "typeFullName" : "__ecma.String[]",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "JSON.parse",
            "typeFullName" : "JSON.parse",
            "resolvedMethod" : "JSON.parse",
            "lineNumber" : 53,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "stringify",
              "resolvedMethod" : "JSON.stringify",
              "paramTypes" : [
                "__ecma.String[]",
                "__ecma.Null",
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 64,
              "columnNumber" : 39
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "isAxiosError",
            "typeFullName" : "ANY",
            "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosInstance:isAxiosError",
            "lineNumber" : 66,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isAxiosError",
            "typeFullName" : "ANY",
            "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosInstance:isAxiosError",
            "lineNumber" : 66,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "async function () {\n  const CONTRIBUTION_THRESHOLD = 3;\n\n  const npm = JSON.parse(await fs.readFile('package.json'));\n\n  try {\n    const contributors = await getContributors('axios', 'axios', 15);\n\n    npm.contributors = contributors\n      .filter(\n        ({type, contributions}) => type.toLowerCase() === 'user' && contributions >= CONTRIBUTION_THRESHOLD\n      )\n      .map(({login, name, url}) => `${name || login} (https://github.com/${login})`);\n\n    await fs.writeFile('package.json', JSON.stringify(npm, null, 2));\n  } catch (err) {\n    if (axios.isAxiosError(err) && err.response && err.response.status === 403) {\n      throw Error(`GitHub API Error: ${err.response.data && err.response.data.message}`);\n    }\n    throw err;\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 50,
            "columnNumber" : 41,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "async function () {\n  const CONTRIBUTION_THRESHOLD = 3;\n\n  const npm = JSON.parse(await fs.readFile('package.json'));\n\n  try {\n    const contributors = await getContributors('axios', 'axios', 15);\n\n    npm.contributors = contributors\n      .filter(\n        ({type, contributions}) => type.toLowerCase() === 'user' && contributions >= CONTRIBUTION_THRESHOLD\n      )\n      .map(({login, name, url}) => `${name || login} (https://github.com/${login})`);\n\n    await fs.writeFile('package.json', JSON.stringify(npm, null, 2));\n  } catch (err) {\n    if (axios.isAxiosError(err) && err.response && err.response.status === 403) {\n      throw Error(`GitHub API Error: ${err.response.data && err.response.data.message}`);\n    }\n    throw err;\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 50,
            "columnNumber" : 41,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "Error",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Error",
            "lineNumber" : 576,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "Error",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Error",
            "lineNumber" : 576,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "contributors",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "await getContributors",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.await",
            "lineNumber" : 56,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "filter",
              "resolvedMethod" : ".filter",
              "paramTypes" : [
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 58,
              "columnNumber" : 23
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.throw",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.throw",
            "lineNumber" : 576,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.throw",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.throw",
            "lineNumber" : 576,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "gulpfile.js::program:anonymous3:anonymous",
      "signature" : "",
      "fileName" : "gulpfile.js",
      "lineNumber" : 60,
      "columnNumber" : 8,
      "usages" : [
        {
          "targetObj" : {
            "name" : "({type, contributions}) => type.toLowerCase() === 'user' && contributions >= CONTRIBUTION_THRESHOLD",
            "typeFullName" : "ANY",
            "lineNumber" : 60,
            "columnNumber" : 8,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "({type, contributions}) => type.toLowerCase() === 'user' && contributions >= CONTRIBUTION_THRESHOLD",
            "typeFullName" : "ANY",
            "lineNumber" : 60,
            "columnNumber" : 8,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "type",
            "typeFullName" : "__ecma.Boolean",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "param1_0.type",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 60,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "toLowerCase",
              "resolvedMethod" : "__ecma.Boolean:toLowerCase",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 60,
              "columnNumber" : 35
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.greaterEqualsThan",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.greaterEqualsThan",
            "lineNumber" : 640,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.greaterEqualsThan",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.greaterEqualsThan",
            "lineNumber" : 640,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "toLowerCase",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:toLowerCase",
            "lineNumber" : 16,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toLowerCase",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:toLowerCase",
            "lineNumber" : 16,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "gulpfile.js::program:anonymous3:anonymous1",
      "signature" : "",
      "fileName" : "gulpfile.js",
      "lineNumber" : 62,
      "columnNumber" : 11,
      "usages" : [
        {
          "targetObj" : {
            "name" : "({login, name, url}) => `${name || login} (https://github.com/${login})`",
            "typeFullName" : "ANY",
            "lineNumber" : 62,
            "columnNumber" : 11,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "({login, name, url}) => `${name || login} (https://github.com/${login})`",
            "typeFullName" : "ANY",
            "lineNumber" : 62,
            "columnNumber" : 11,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "gulpfile.js::program:anonymous4",
      "signature" : "",
      "fileName" : "gulpfile.js",
      "lineNumber" : 73,
      "columnNumber" : 29,
      "usages" : [
        {
          "targetObj" : {
            "name" : "async function () {\n  var npm = JSON.parse(await fs.readFile('package.json'));\n\n  const envFilePath = './lib/env/data.js';\n\n  await fs.writeFile(envFilePath, Object.entries({\n    VERSION: (argv.bump || npm.version).replace(/^v/, '')\n  }).map(([key, value]) => {\n    return `export const ${key} = ${JSON.stringify(value)};`\n  }).join('\\n'));\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 73,
            "columnNumber" : 29,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "async function () {\n  var npm = JSON.parse(await fs.readFile('package.json'));\n\n  const envFilePath = './lib/env/data.js';\n\n  await fs.writeFile(envFilePath, Object.entries({\n    VERSION: (argv.bump || npm.version).replace(/^v/, '')\n  }).map(([key, value]) => {\n    return `export const ${key} = ${JSON.stringify(value)};`\n  }).join('\\n'));\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 73,
            "columnNumber" : 29,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "gulpfile.js::program:anonymous4:anonymous",
      "signature" : "",
      "fileName" : "gulpfile.js",
      "lineNumber" : 80,
      "columnNumber" : 9,
      "usages" : [
        {
          "targetObj" : {
            "name" : "([key, value]) => {\n    return `export const ${key} = ${JSON.stringify(value)};`\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 80,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "([key, value]) => {\n    return `export const ${key} = ${JSON.stringify(value)};`\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 80,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "gulpfile.js::program:getContributors",
      "signature" : "",
      "fileName" : "gulpfile.js",
      "lineNumber" : 37,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "repo",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 37,
            "columnNumber" : 37,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "repo",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 37,
            "columnNumber" : 37,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "encodeURIComponent",
              "resolvedMethod" : "encodeURIComponent",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 39,
              "columnNumber" : 64
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "getContributors",
            "typeFullName" : "Promise<ANY[]>",
            "resolvedMethod" : "gulpfile.js::program:getContributors",
            "lineNumber" : 56,
            "columnNumber" : 31,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getContributors",
            "typeFullName" : "Promise<ANY[]>",
            "resolvedMethod" : "gulpfile.js::program:getContributors",
            "lineNumber" : 56,
            "columnNumber" : 31,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "all",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Promise.all",
            "lineNumber" : 66,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "all",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Promise.all",
            "lineNumber" : 66,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "contributors",
            "typeFullName" : "data",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "await axios.get",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 38,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "map",
              "resolvedMethod" : "contributors.map",
              "paramTypes" : [
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 43,
              "columnNumber" : 21
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "user",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 37,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "user",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 37,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "encodeURIComponent",
              "resolvedMethod" : "encodeURIComponent",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 39,
              "columnNumber" : 36
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "gulpfile.js::program:getContributors:anonymous",
      "signature" : "",
      "fileName" : "gulpfile.js",
      "lineNumber" : 43,
      "columnNumber" : 38,
      "usages" : [
        {
          "targetObj" : {
            "name" : "async (contributor)=> {\n    return {...contributor, ...(await axios.get(\n      `https://api.github.com/users/${encodeURIComponent(contributor.login)}`\n    )).data};\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 43,
            "columnNumber" : 38,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "async (contributor)=> {\n    return {...contributor, ...(await axios.get(\n      `https://api.github.com/users/${encodeURIComponent(contributor.login)}`\n    )).data};\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 43,
            "columnNumber" : 38,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "index.js::program",
      "signature" : "",
      "fileName" : "index.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "index.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "index.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "karma.conf.cjs::program",
      "signature" : "",
      "fileName" : "karma.conf.cjs",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "karma.conf.cjs::program:require",
            "lineNumber" : 9,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "karma.conf.cjs::program:require",
            "lineNumber" : 9,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "karma.conf.cjs::program:anonymous",
      "signature" : "",
      "fileName" : "karma.conf.cjs",
      "lineNumber" : 21,
      "columnNumber" : 17,
      "usages" : [
        {
          "targetObj" : {
            "name" : "config",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 21,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "config",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 21,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "set",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 139,
              "columnNumber" : 2
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "resolve",
            "typeFullName" : "ANY",
            "resolvedMethod" : "@rollup/plugin-node-resolve",
            "lineNumber" : 169,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "resolve",
            "typeFullName" : "ANY",
            "resolvedMethod" : "@rollup/plugin-node-resolve",
            "lineNumber" : 169,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.multiplication",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.multiplication",
            "lineNumber" : 617,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.multiplication",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.multiplication",
            "lineNumber" : 617,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "keys",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.keys",
            "lineNumber" : 272,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "keys",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.keys",
            "lineNumber" : 272,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "function(config) {\n  var customLaunchers = {};\n  var browsers = process.env.Browsers && process.env.Browsers.split(',');\n  var sauceLabs;\n\n  if (process.env.SAUCE_USERNAME || process.env.SAUCE_ACCESS_KEY) {\n    customLaunchers = {};\n\n    var runAll = true;\n    var options = [\n      'SAUCE_CHROME',\n      'SAUCE_FIREFOX',\n      'SAUCE_SAFARI',\n      'SAUCE_OPERA',\n      'SAUCE_IE',\n      'SAUCE_EDGE',\n      'SAUCE_IOS',\n      'SAUCE_ANDROID'\n    ];\n\n    options.forEach(function(opt) {\n      if (process.env[opt]) {\n        runAll = false;\n      }\n    });\n\n    // Chrome\n    if (runAll || process.env.SAUCE_CHROME) {\n      customLaunchers.SL_Chrome = createCustomLauncher('chrome');\n      // customLaunchers.SL_ChromeDev = createCustomLauncher('chrome', 'dev');\n      // customLaunchers.SL_ChromeBeta = createCustomLauncher('chrome', 'beta');\n    }\n\n    // Firefox\n    if (runAll || process.env.SAUCE_FIREFOX) {\n      //customLaunchers.SL_Firefox = createCustomLauncher('firefox');\n      // cust...",
            "typeFullName" : "ANY",
            "lineNumber" : 21,
            "columnNumber" : 17,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function(config) {\n  var customLaunchers = {};\n  var browsers = process.env.Browsers && process.env.Browsers.split(',');\n  var sauceLabs;\n\n  if (process.env.SAUCE_USERNAME || process.env.SAUCE_ACCESS_KEY) {\n    customLaunchers = {};\n\n    var runAll = true;\n    var options = [\n      'SAUCE_CHROME',\n      'SAUCE_FIREFOX',\n      'SAUCE_SAFARI',\n      'SAUCE_OPERA',\n      'SAUCE_IE',\n      'SAUCE_EDGE',\n      'SAUCE_IOS',\n      'SAUCE_ANDROID'\n    ];\n\n    options.forEach(function(opt) {\n      if (process.env[opt]) {\n        runAll = false;\n      }\n    });\n\n    // Chrome\n    if (runAll || process.env.SAUCE_CHROME) {\n      customLaunchers.SL_Chrome = createCustomLauncher('chrome');\n      // customLaunchers.SL_ChromeDev = createCustomLauncher('chrome', 'dev');\n      // customLaunchers.SL_ChromeBeta = createCustomLauncher('chrome', 'beta');\n    }\n\n    // Firefox\n    if (runAll || process.env.SAUCE_FIREFOX) {\n      //customLaunchers.SL_Firefox = createCustomLauncher('firefox');\n      // cust...",
            "typeFullName" : "ANY",
            "lineNumber" : 21,
            "columnNumber" : 17,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "commonjs",
            "typeFullName" : "ANY",
            "resolvedMethod" : "@rollup/plugin-commonjs",
            "lineNumber" : 170,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "commonjs",
            "typeFullName" : "ANY",
            "resolvedMethod" : "@rollup/plugin-commonjs",
            "lineNumber" : 170,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String[]:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String[]:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "karma.conf.cjs::program:anonymous:anonymous",
      "signature" : "",
      "fileName" : "karma.conf.cjs",
      "lineNumber" : 41,
      "columnNumber" : 20,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function(opt) {\n      if (process.env[opt]) {\n        runAll = false;\n      }\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 41,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function(opt) {\n      if (process.env[opt]) {\n        runAll = false;\n      }\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 41,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "karma.conf.cjs::program:createCustomLauncher",
      "signature" : "",
      "fileName" : "karma.conf.cjs",
      "lineNumber" : 12,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "createCustomLauncher",
            "typeFullName" : "ANY",
            "resolvedMethod" : "karma.conf.cjs::program:createCustomLauncher",
            "lineNumber" : 96,
            "columnNumber" : 32,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "createCustomLauncher",
            "typeFullName" : "ANY",
            "resolvedMethod" : "karma.conf.cjs::program:createCustomLauncher",
            "lineNumber" : 96,
            "columnNumber" : 32,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\adapters.js::program",
      "signature" : "",
      "fileName" : "lib\\adapters\\adapters.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\adapters.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "forEach",
              "resolvedMethod" : "../utils.js:utils:forEach",
              "paramTypes" : [
                "{ http: (config: ANY) => Promise<any>; xhr: (config: ANY) => Promise<any>; }",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 11,
              "columnNumber" : 0
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 24,
              "columnNumber" : 15
            },
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 32,
              "columnNumber" : 20
            },
            {
              "callName" : "hasOwnProp",
              "resolvedMethod" : "../utils.js:utils:hasOwnProp",
              "paramTypes" : [
                "{ http: (config: ANY) => Promise<any>; xhr: (config: ANY) => Promise<any>; }",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 46,
              "columnNumber" : 8
            },
            {
              "callName" : "isFunction",
              "resolvedMethod" : "../utils.js:utils:isFunction",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 52,
              "columnNumber" : 9
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\adapters.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\adapters.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\adapters.js::program:anonymous",
      "signature" : "",
      "fileName" : "lib\\adapters\\adapters.js",
      "lineNumber" : 11,
      "columnNumber" : 29,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 11,
            "columnNumber" : 29,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 11,
            "columnNumber" : 29,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "fn",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 11,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "fn",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 11,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "defineProperty",
              "resolvedMethod" : "Object.defineProperty",
              "paramTypes" : [
                "ANY",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 14,
              "columnNumber" : 6
            },
            {
              "callName" : "defineProperty",
              "resolvedMethod" : "Object.defineProperty",
              "paramTypes" : [
                "ANY",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 18,
              "columnNumber" : 4
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "defineProperty",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.defineProperty",
            "lineNumber" : 379,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "defineProperty",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.defineProperty",
            "lineNumber" : 379,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\adapters.js::program:anonymous1",
      "signature" : "",
      "fileName" : "lib\\adapters\\adapters.js",
      "lineNumber" : 23,
      "columnNumber" : 14,
      "usages" : [
        {
          "targetObj" : {
            "name" : "hasOwnProp",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:hasOwnProp",
            "lineNumber" : 57,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "hasOwnProp",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:hasOwnProp",
            "lineNumber" : 57,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isArray",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isArray",
            "lineNumber" : 154,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isArray",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isArray",
            "lineNumber" : 154,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "adapters",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 23,
            "columnNumber" : 15,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "adapters",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 23,
            "columnNumber" : 15,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 24,
              "columnNumber" : 15
            },
            {
              "callName" : "",
              "resolvedMethod" : "_tmp_4.push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 24,
              "columnNumber" : 53
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "nameOrAdapter",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "adapters[i]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 31,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "toLowerCase",
              "resolvedMethod" : "nameOrAdapter.toLowerCase",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 32,
              "columnNumber" : 66
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 32,
              "columnNumber" : 20
            },
            {
              "callName" : "hasOwnProp",
              "resolvedMethod" : "../utils.js:utils:hasOwnProp",
              "paramTypes" : [
                "{ http: (config: ANY) => Promise<any>; xhr: (config: ANY) => Promise<any>; }",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 46,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "(adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 23,
            "columnNumber" : 14,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 23,
            "columnNumber" : 14,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isString",
            "lineNumber" : 199,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isString",
            "lineNumber" : 199,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isFunction",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isFunction",
            "lineNumber" : 112,
            "columnNumber" : 7,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isFunction",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isFunction",
            "lineNumber" : 112,
            "columnNumber" : 7,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.alloc",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.alloc",
            "lineNumber" : 23,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.alloc",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.alloc",
            "lineNumber" : 23,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "adapter",
            "typeFullName" : "__ecma.Boolean",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "utils.isString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.conditional",
            "lineNumber" : 32,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isFunction",
              "resolvedMethod" : "../utils.js:utils:isFunction",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 52,
              "columnNumber" : 9
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "isFunction",
              "resolvedMethod" : "../utils.js:utils:isFunction",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 38,
              "columnNumber" : 26
            },
            {
              "callName" : "kindOf",
              "resolvedMethod" : "../utils.js:utils:kindOf",
              "paramTypes" : [
                "NodeJS.Process"
              ],
              "returnType" : "ANY",
              "lineNumber" : 118,
              "columnNumber" : 65
            },
            {
              "callName" : "isAsyncFn",
              "resolvedMethod" : "../utils.js:utils:isAsyncFn",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 157,
              "columnNumber" : 18
            },
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 159,
              "columnNumber" : 11
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 161,
              "columnNumber" : 20
            },
            {
              "callName" : "stripBOM",
              "resolvedMethod" : "../utils.js:utils:stripBOM",
              "paramTypes" : [
                "Buffer | Blob"
              ],
              "returnType" : "ANY",
              "lineNumber" : 233,
              "columnNumber" : 26
            },
            {
              "callName" : "isSpecCompliantForm",
              "resolvedMethod" : "../utils.js:utils:isSpecCompliantForm",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 271,
              "columnNumber" : 8
            },
            {
              "callName" : "isFormData",
              "resolvedMethod" : "../utils.js:utils:isFormData",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 281,
              "columnNumber" : 15
            },
            {
              "callName" : "isFunction",
              "resolvedMethod" : "../utils.js:utils:isFunction",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 281,
              "columnNumber" : 41
            },
            {
              "callName" : "isBlob",
              "resolvedMethod" : "../utils.js:utils:isBlob",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 292,
              "columnNumber" : 15
            },
            {
              "callName" : "isStream",
              "resolvedMethod" : "../utils.js:utils:isStream",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 296,
              "columnNumber" : 24
            },
            {
              "callName" : "isArrayBuffer",
              "resolvedMethod" : "../utils.js:utils:isArrayBuffer",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 299,
              "columnNumber" : 17
            },
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 301,
              "columnNumber" : 17
            },
            {
              "callName" : "toFiniteNumber",
              "resolvedMethod" : "../utils.js:utils:toFiniteNumber",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 323,
              "columnNumber" : 26
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 325,
              "columnNumber" : 8
            },
            {
              "callName" : "isStream",
              "resolvedMethod" : "../utils.js:utils:isStream",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 333,
              "columnNumber" : 11
            },
            {
              "callName" : "toFiniteNumber",
              "resolvedMethod" : "../utils.js:utils:toFiniteNumber",
              "paramTypes" : [
                "undefined"
              ],
              "returnType" : "ANY",
              "lineNumber" : 339,
              "columnNumber" : 17
            },
            {
              "callName" : "toFiniteNumber",
              "resolvedMethod" : "../utils.js:utils:toFiniteNumber",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "lineNumber" : 445,
              "columnNumber" : 18
            },
            {
              "callName" : "toFiniteNumber",
              "resolvedMethod" : "../utils.js:utils:toFiniteNumber",
              "paramTypes" : [
                "undefined"
              ],
              "returnType" : "ANY",
              "lineNumber" : 446,
              "columnNumber" : 19
            },
            {
              "callName" : "stripBOM",
              "resolvedMethod" : "../utils.js:utils:stripBOM",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 563,
              "columnNumber" : 31
            },
            {
              "callName" : "isStream",
              "resolvedMethod" : "../utils.js:utils:isStream",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 640,
              "columnNumber" : 8
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:require",
            "lineNumber" : 26,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:require",
            "lineNumber" : 26,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "zlib",
            "typeFullName" : "zlib:zlib",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:require",
            "lineNumber" : 12,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "createUnzip",
              "resolvedMethod" : "zlib:zlib:createUnzip",
              "paramTypes" : [
                "{ flush: ANY; finishFlush: ANY; }"
              ],
              "returnType" : "ANY",
              "lineNumber" : 479,
              "columnNumber" : 23
            },
            {
              "callName" : "createUnzip",
              "resolvedMethod" : "zlib:zlib:createUnzip",
              "paramTypes" : [
                "{ flush: ANY; finishFlush: ANY; }"
              ],
              "returnType" : "ANY",
              "lineNumber" : 488,
              "columnNumber" : 23
            },
            {
              "callName" : "createBrotliDecompress",
              "resolvedMethod" : "zlib:zlib:createBrotliDecompress",
              "paramTypes" : [
                "{ flush: ANY; finishFlush: ANY; }"
              ],
              "returnType" : "ANY",
              "lineNumber" : 495,
              "columnNumber" : 25
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "kindOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:kindOf",
            "lineNumber" : 118,
            "columnNumber" : 65,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "kindOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:kindOf",
            "lineNumber" : 118,
            "columnNumber" : 65,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "AxiosError",
            "typeFullName" : "lib\\core\\AxiosError.js::program:AxiosError",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:require",
            "lineNumber" : 15,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "from",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
              "paramTypes" : [
                "void",
                "ANY",
                "__ecma.Boolean",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 226,
              "columnNumber" : 14
            },
            {
              "callName" : "from",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
              "paramTypes" : [
                "void",
                "__ecma.Null",
                "__ecma.Boolean",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 554,
              "columnNumber" : 17
            },
            {
              "callName" : "from",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
              "paramTypes" : [
                "void",
                "__ecma.Null",
                "__ecma.Boolean",
                "ANY",
                "{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 568,
              "columnNumber" : 19
            },
            {
              "callName" : "from",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
              "paramTypes" : [
                "void",
                "__ecma.Null",
                "__ecma.Boolean",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 591,
              "columnNumber" : 13
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "supportedProtocols",
            "typeFullName" : "__ecma.String[]",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "platform.protocols.map",
            "typeFullName" : "ANY",
            "resolvedMethod" : "platform.protocols.map",
            "lineNumber" : 44,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "indexOf",
              "resolvedMethod" : "__ecma.String[]:indexOf",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 248,
              "columnNumber" : 8
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "AxiosHeaders",
            "typeFullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:require",
            "lineNumber" : 20,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "from",
              "resolvedMethod" : "AxiosHeaders.from",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 256,
              "columnNumber" : 20
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.instanceOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.instanceOf",
            "lineNumber" : 473,
            "columnNumber" : 3,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.instanceOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.instanceOf",
            "lineNumber" : 473,
            "columnNumber" : 3,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "stream",
            "typeFullName" : "stream:stream",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:require",
            "lineNumber" : 19,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "AxiosTransformStream",
              "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream",
              "lineNumber" : 337,
              "columnNumber" : 13
            },
            {
              "callName" : "pipeline",
              "resolvedMethod" : "stream:stream:pipeline",
              "paramTypes" : [
                "__ecma.Number",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 501,
              "columnNumber" : 44
            },
            {
              "callName" : "finished",
              "resolvedMethod" : "stream:stream:finished",
              "paramTypes" : [
                "__ecma.Boolean",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 503,
              "columnNumber" : 27
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "util",
            "typeFullName" : "util:util",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:require",
            "lineNumber" : 10,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "promisify",
              "resolvedMethod" : "util:util:promisify",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 286,
              "columnNumber" : 36
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:anonymous",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 44,
      "columnNumber" : 50,
      "usages" : [
        {
          "targetObj" : {
            "name" : "protocol => {\n  return protocol + ':';\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 44,
            "columnNumber" : 50,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "protocol => {\n  return protocol + ':';\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 44,
            "columnNumber" : 50,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:anonymous1:anonymous",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 123,
      "columnNumber" : 21,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(resolve, reject) => {\n    let onDone;\n    let isDone;\n\n    const done = (value, isRejected) => {\n      if (isDone) return;\n      isDone = true;\n      onDone && onDone(value, isRejected);\n    }\n\n    const _resolve = (value) => {\n      done(value);\n      resolve(value);\n    };\n\n    const _reject = (reason) => {\n      done(reason, true);\n      reject(reason);\n    }\n\n    asyncExecutor(_resolve, _reject, (onDoneHandler) => (onDone = onDoneHandler)).catch(_reject);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 123,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(resolve, reject) => {\n    let onDone;\n    let isDone;\n\n    const done = (value, isRejected) => {\n      if (isDone) return;\n      isDone = true;\n      onDone && onDone(value, isRejected);\n    }\n\n    const _resolve = (value) => {\n      done(value);\n      resolve(value);\n    };\n\n    const _reject = (reason) => {\n      done(reason, true);\n      reject(reason);\n    }\n\n    asyncExecutor(_resolve, _reject, (onDoneHandler) => (onDone = onDoneHandler)).catch(_reject);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 123,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "asyncExecutor",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:asyncExecutor",
            "lineNumber" : 143,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "asyncExecutor",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:asyncExecutor",
            "lineNumber" : 143,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:anonymous1:anonymous:_reject",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 138,
      "columnNumber" : 20,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(reason) => {\n      done(reason, true);\n      reject(reason);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 138,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(reason) => {\n      done(reason, true);\n      reject(reason);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 138,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "reason",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 138,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "reason",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 138,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "done",
              "resolvedMethod" : "lib\\adapters\\http.js::program:anonymous1:anonymous:done",
              "paramTypes" : [
                "ANY",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 139,
              "columnNumber" : 6
            },
            {
              "callName" : "reject",
              "resolvedMethod" : "lib\\adapters\\http.js::program:reject",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 140,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "reject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:reject",
            "lineNumber" : 606,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "reject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:reject",
            "lineNumber" : 606,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:anonymous1:anonymous:_resolve",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 133,
      "columnNumber" : 21,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(value) => {\n      done(value);\n      resolve(value);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 133,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(value) => {\n      done(value);\n      resolve(value);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 133,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 133,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 133,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "done",
              "resolvedMethod" : "lib\\adapters\\http.js::program:anonymous1:anonymous:done",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 134,
              "columnNumber" : 6
            },
            {
              "callName" : "resolve",
              "resolvedMethod" : "lib\\adapters\\http.js::program:resolve",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 135,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "resolve",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:resolve",
            "lineNumber" : 135,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "resolve",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:resolve",
            "lineNumber" : 135,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:anonymous1:anonymous:anonymous3",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 143,
      "columnNumber" : 37,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(onDoneHandler) => (onDone = onDoneHandler)",
            "typeFullName" : "ANY",
            "lineNumber" : 143,
            "columnNumber" : 37,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(onDoneHandler) => (onDone = onDoneHandler)",
            "typeFullName" : "ANY",
            "lineNumber" : 143,
            "columnNumber" : 37,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:anonymous1:anonymous:done",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 127,
      "columnNumber" : 17,
      "usages" : [
        {
          "targetObj" : {
            "name" : "done",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\adapters\\http.js::program:anonymous1:anonymous:done",
            "lineNumber" : 139,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "done",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\adapters\\http.js::program:anonymous1:anonymous:done",
            "lineNumber" : 139,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 127,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 127,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "onDone",
              "resolvedMethod" : "lib\\adapters\\http.js::program:onDone",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 130,
              "columnNumber" : 16
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "isRejected",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 127,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "isRejected",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 127,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "onDone",
              "resolvedMethod" : "lib\\adapters\\http.js::program:onDone",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 130,
              "columnNumber" : 16
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "onDone",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:onDone",
            "lineNumber" : 183,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "onDone",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:onDone",
            "lineNumber" : 183,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:dispatchBeforeRedirect",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 56,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function dispatchBeforeRedirect(options) {\n  if (options.beforeRedirects.proxy) {\n    options.beforeRedirects.proxy(options);\n  }\n  if (options.beforeRedirects.config) {\n    options.beforeRedirects.config(options);\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 56,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function dispatchBeforeRedirect(options) {\n  if (options.beforeRedirects.proxy) {\n    options.beforeRedirects.proxy(options);\n  }\n  if (options.beforeRedirects.config) {\n    options.beforeRedirects.config(options);\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 56,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "options",
            "typeFullName" : "{ [x: __ecma.String]: ANY; }",
            "position" : 1,
            "lineNumber" : 56,
            "columnNumber" : 32,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "options",
            "typeFullName" : "{ [x: __ecma.String]: ANY; }",
            "position" : 1,
            "lineNumber" : 56,
            "columnNumber" : 32,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "proxy",
              "resolvedMethod" : "options.beforeRedirects.proxy",
              "paramTypes" : [
                "http:http:ClientRequestArgs"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 58,
              "columnNumber" : 4
            },
            {
              "callName" : "config",
              "resolvedMethod" : "options.beforeRedirects.config",
              "paramTypes" : [
                "http:http:ClientRequestArgs"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 61,
              "columnNumber" : 4
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 148,
      "columnNumber" : 41,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function httpAdapter(config) {\n  return wrapAsync(async function dispatchHttpRequest(resolve, reject, onDone) {\n    let {data, lookup, family} = config;\n    const {responseType, responseEncoding} = config;\n    const method = config.method.toUpperCase();\n    let isDone;\n    let rejected = false;\n    let req;\n\n    if (lookup && utils.isAsyncFn(lookup)) {\n      lookup = callbackify(lookup, (entry) => {\n        if(utils.isString(entry)) {\n          entry = [entry, entry.indexOf('.') < 0 ? 6 : 4]\n        } else if (!utils.isArray(entry)) {\n          throw new TypeError('lookup async function must return an array [ip: string, family: number]]')\n        }\n        return entry;\n      })\n    }\n\n    // temporary internal emitter until the AxiosRequest class will be implemented\n    const emitter = new EventEmitter();\n\n    const onFinished = () => {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(abort);\n      }\n\n      if (config.signal) {\n        config.signal.removeEven...",
            "typeFullName" : "ANY",
            "lineNumber" : 148,
            "columnNumber" : 41,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function httpAdapter(config) {\n  return wrapAsync(async function dispatchHttpRequest(resolve, reject, onDone) {\n    let {data, lookup, family} = config;\n    const {responseType, responseEncoding} = config;\n    const method = config.method.toUpperCase();\n    let isDone;\n    let rejected = false;\n    let req;\n\n    if (lookup && utils.isAsyncFn(lookup)) {\n      lookup = callbackify(lookup, (entry) => {\n        if(utils.isString(entry)) {\n          entry = [entry, entry.indexOf('.') < 0 ? 6 : 4]\n        } else if (!utils.isArray(entry)) {\n          throw new TypeError('lookup async function must return an array [ip: string, family: number]]')\n        }\n        return entry;\n      })\n    }\n\n    // temporary internal emitter until the AxiosRequest class will be implemented\n    const emitter = new EventEmitter();\n\n    const onFinished = () => {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(abort);\n      }\n\n      if (config.signal) {\n        config.signal.removeEven...",
            "typeFullName" : "ANY",
            "lineNumber" : 148,
            "columnNumber" : 41,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "config",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 148,
            "columnNumber" : 62,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "config",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 148,
            "columnNumber" : 62,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "from",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
              "paramTypes" : [
                "void",
                "ANY",
                "__ecma.Boolean",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 226,
              "columnNumber" : 14
            },
            {
              "callName" : "from",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
              "paramTypes" : [
                "void",
                "__ecma.Null",
                "__ecma.Boolean",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 554,
              "columnNumber" : 17
            },
            {
              "callName" : "from",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
              "paramTypes" : [
                "void",
                "__ecma.Null",
                "__ecma.Boolean",
                "ANY",
                "{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 568,
              "columnNumber" : 19
            },
            {
              "callName" : "from",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
              "paramTypes" : [
                "void",
                "__ecma.Null",
                "__ecma.Boolean",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 591,
              "columnNumber" : 13
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 149,
      "columnNumber" : 19,
      "usages" : [
        {
          "targetObj" : {
            "name" : "isFinite",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Number.isFinite",
            "lineNumber" : 600,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isFinite",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Number.isFinite",
            "lineNumber" : 600,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "req",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "transport.request",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\Axios.js::program:Axios:request",
            "lineNumber" : 436,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "destroy",
              "resolvedMethod" : "__ecma.Boolean:destroy",
              "paramTypes" : [
                "void"
              ],
              "returnType" : "ANY",
              "lineNumber" : 584,
              "columnNumber" : 6
            },
            {
              "callName" : "on",
              "resolvedMethod" : "req.on",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 588,
              "columnNumber" : 4
            },
            {
              "callName" : "on",
              "resolvedMethod" : "req.on",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 595,
              "columnNumber" : 4
            },
            {
              "callName" : "setTimeout",
              "resolvedMethod" : "req.setTimeout",
              "paramTypes" : [
                "__ecma.Number",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 621,
              "columnNumber" : 6
            },
            {
              "callName" : "destroy",
              "resolvedMethod" : "__ecma.Boolean:destroy",
              "paramTypes" : [
                "void"
              ],
              "returnType" : "ANY",
              "lineNumber" : 650,
              "columnNumber" : 8
            },
            {
              "callName" : "end",
              "resolvedMethod" : "req.end",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 661,
              "columnNumber" : 6
            }
          ],
          "argToCalls" : [
            {
              "callName" : "from",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
              "paramTypes" : [
                "void",
                "__ecma.Null",
                "__ecma.Boolean",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 4,
              "lineNumber" : 591,
              "columnNumber" : 13
            },
            {
              "callName" : "pipe",
              "resolvedMethod" : "__ecma.Boolean:pipe",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 659,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "reject",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 149,
            "columnNumber" : 63,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "reject",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 149,
            "columnNumber" : 63,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "once",
              "resolvedMethod" : "emitter.once",
              "paramTypes" : [
                "__ecma.String",
                "(reason?: ANY) => void"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 195,
              "columnNumber" : 4
            },
            {
              "callName" : "settle",
              "resolvedMethod" : "lib\\core\\settle.js::program:settle",
              "paramTypes" : [
                "(value: ANY) => void",
                "(reason?: ANY) => void",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 213,
              "columnNumber" : 15
            },
            {
              "callName" : "AxiosHeaders",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
              "paramTypes" : [
              ],
              "returnType" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
              "position" : 2,
              "lineNumber" : 239,
              "columnNumber" : 13
            },
            {
              "callName" : "settle",
              "resolvedMethod" : "lib\\core\\settle.js::program:settle",
              "paramTypes" : [
                "(value: ANY) => void",
                "(reason?: ANY) => void",
                "{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 518,
              "columnNumber" : 8
            },
            {
              "callName" : "settle",
              "resolvedMethod" : "lib\\core\\settle.js::program:settle",
              "paramTypes" : [
                "(value: ANY) => void",
                "(reason?: ANY) => void",
                "{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 570,
              "columnNumber" : 10
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "setContentLength",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:<init>:setContentLength",
            "lineNumber" : 312,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "setContentLength",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:<init>:setContentLength",
            "lineNumber" : 312,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "pipe",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:pipe",
            "lineNumber" : 14,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "pipe",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:pipe",
            "lineNumber" : 14,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "data",
            "typeFullName" : "__ecma.Boolean",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "stream.Readable.from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "stream.Readable.from",
            "lineNumber" : 334,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "getHeaders",
              "resolvedMethod" : "__ecma.Boolean:getHeaders",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 282,
              "columnNumber" : 18
            },
            {
              "callName" : "on",
              "resolvedMethod" : "__ecma.Boolean:on",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 342,
              "columnNumber" : 26
            },
            {
              "callName" : "on",
              "resolvedMethod" : "__ecma.Boolean:on",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 644,
              "columnNumber" : 6
            },
            {
              "callName" : "once",
              "resolvedMethod" : "__ecma.Boolean:once",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 648,
              "columnNumber" : 6
            },
            {
              "callName" : "on",
              "resolvedMethod" : "__ecma.Boolean:on",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 653,
              "columnNumber" : 6
            },
            {
              "callName" : "pipe",
              "resolvedMethod" : "__ecma.Boolean:pipe",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 659,
              "columnNumber" : 6
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isSpecCompliantForm",
              "resolvedMethod" : "../utils.js:utils:isSpecCompliantForm",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 271,
              "columnNumber" : 8
            },
            {
              "callName" : "formDataToStream",
              "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:formDataToStream",
              "paramTypes" : [
                "__ecma.Boolean",
                "LAMBDA",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 274,
              "columnNumber" : 13
            },
            {
              "callName" : "isFormData",
              "resolvedMethod" : "../utils.js:utils:isFormData",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 281,
              "columnNumber" : 15
            },
            {
              "callName" : "call",
              "resolvedMethod" : "util.promisify",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 286,
              "columnNumber" : 36
            },
            {
              "callName" : "isBlob",
              "resolvedMethod" : "../utils.js:utils:isBlob",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 292,
              "columnNumber" : 15
            },
            {
              "callName" : "readBlob",
              "resolvedMethod" : "lib\\helpers\\readBlob.js::program:readBlob",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 295,
              "columnNumber" : 34
            },
            {
              "callName" : "isStream",
              "resolvedMethod" : "../utils.js:utils:isStream",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 296,
              "columnNumber" : 24
            },
            {
              "callName" : "isBuffer",
              "resolvedMethod" : "Buffer:isBuffer",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 297,
              "columnNumber" : 10
            },
            {
              "callName" : "isArrayBuffer",
              "resolvedMethod" : "../utils.js:utils:isArrayBuffer",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 299,
              "columnNumber" : 17
            },
            {
              "callName" : "Uint8Array",
              "resolvedMethod" : "Uint8Array",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "Uint8Array",
              "position" : 1,
              "lineNumber" : 300,
              "columnNumber" : 8
            },
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 301,
              "columnNumber" : 17
            },
            {
              "callName" : "from",
              "resolvedMethod" : "Buffer.from",
              "paramTypes" : [
                "__ecma.Boolean",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 302,
              "columnNumber" : 15
            },
            {
              "callName" : "isStream",
              "resolvedMethod" : "../utils.js:utils:isStream",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 333,
              "columnNumber" : 11
            },
            {
              "callName" : "from",
              "resolvedMethod" : "stream.Readable.from",
              "paramTypes" : [
                "__ecma.Boolean",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 334,
              "columnNumber" : 15
            },
            {
              "callName" : "AxiosTransformStream",
              "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream",
              "position" : 1,
              "lineNumber" : 337,
              "columnNumber" : 6
            },
            {
              "callName" : "",
              "resolvedMethod" : "_tmp_39.push",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 337,
              "columnNumber" : 30
            },
            {
              "callName" : "isStream",
              "resolvedMethod" : "../utils.js:utils:isStream",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 640,
              "columnNumber" : 8
            },
            {
              "callName" : "end",
              "resolvedMethod" : "req.end",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 661,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "timeout",
            "typeFullName" : "__ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "parseInt",
            "typeFullName" : "parseInt",
            "resolvedMethod" : "parseInt",
            "lineNumber" : 603,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isNaN",
              "resolvedMethod" : "isNaN",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 605,
              "columnNumber" : 10
            },
            {
              "callName" : "setTimeout",
              "resolvedMethod" : "req.setTimeout",
              "paramTypes" : [
                "__ecma.Number",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 621,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "getContentType",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:getContentType",
            "lineNumber" : 47,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getContentType",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:getContentType",
            "lineNumber" : 47,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isStream",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isStream",
            "lineNumber" : 66,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isStream",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isStream",
            "lineNumber" : 66,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "test",
            "typeFullName" : "ANY",
            "resolvedMethod" : "RegExp:test",
            "lineNumber" : 50,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "test",
            "typeFullName" : "ANY",
            "resolvedMethod" : "RegExp:test",
            "lineNumber" : 50,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "customErr",
            "typeFullName" : "ErrorConstructor",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new Error",
            "typeFullName" : "Error",
            "resolvedMethod" : "Error",
            "lineNumber" : 374,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "Error",
              "resolvedMethod" : "Error",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "Error",
              "position" : 1,
              "lineNumber" : 374,
              "columnNumber" : 12
            },
            {
              "callName" : "reject",
              "resolvedMethod" : "lib\\adapters\\http.js::program:reject",
              "paramTypes" : [
                "ErrorConstructor"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 378,
              "columnNumber" : 13
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "headers",
            "typeFullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "AxiosHeaders.from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:normalize",
            "lineNumber" : 256,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "set",
              "resolvedMethod" : "headers.set",
              "paramTypes" : [
                "__ecma.String",
                "ANY",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 262,
              "columnNumber" : 4
            },
            {
              "callName" : "getContentType",
              "resolvedMethod" : "headers.getContentType",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 272,
              "columnNumber" : 27
            },
            {
              "callName" : "set",
              "resolvedMethod" : "headers.set",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 275,
              "columnNumber" : 8
            },
            {
              "callName" : "set",
              "resolvedMethod" : "headers.set",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 282,
              "columnNumber" : 6
            },
            {
              "callName" : "hasContentLength",
              "resolvedMethod" : "headers.hasContentLength",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 284,
              "columnNumber" : 11
            },
            {
              "callName" : "setContentLength",
              "resolvedMethod" : "headers.setContentLength",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 287,
              "columnNumber" : 62
            },
            {
              "callName" : "setContentType",
              "resolvedMethod" : "headers.setContentType",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 293,
              "columnNumber" : 19
            },
            {
              "callName" : "setContentLength",
              "resolvedMethod" : "headers.setContentLength",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 294,
              "columnNumber" : 6
            },
            {
              "callName" : "setContentLength",
              "resolvedMethod" : "headers.setContentLength",
              "paramTypes" : [
                "ANY",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 312,
              "columnNumber" : 6
            },
            {
              "callName" : "getContentLength",
              "resolvedMethod" : "headers.getContentLength",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 323,
              "columnNumber" : 47
            },
            {
              "callName" : "delete",
              "resolvedMethod" : "headers.delete",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 363,
              "columnNumber" : 12
            },
            {
              "callName" : "set",
              "resolvedMethod" : "headers.set",
              "paramTypes" : [
                "__ecma.String",
                "ANY",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 381,
              "columnNumber" : 4
            },
            {
              "callName" : "toJSON",
              "resolvedMethod" : "headers.toJSON",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 389,
              "columnNumber" : 15
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "resolve",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 149,
            "columnNumber" : 54,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "resolve",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 149,
            "columnNumber" : 54,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "settle",
              "resolvedMethod" : "lib\\core\\settle.js::program:settle",
              "paramTypes" : [
                "(value: ANY) => void",
                "(reason?: ANY) => void",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 213,
              "columnNumber" : 15
            },
            {
              "callName" : "AxiosHeaders",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
              "paramTypes" : [
              ],
              "returnType" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
              "position" : 1,
              "lineNumber" : 239,
              "columnNumber" : 13
            },
            {
              "callName" : "settle",
              "resolvedMethod" : "lib\\core\\settle.js::program:settle",
              "paramTypes" : [
                "(value: ANY) => void",
                "(reason?: ANY) => void",
                "{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 518,
              "columnNumber" : 8
            },
            {
              "callName" : "settle",
              "resolvedMethod" : "lib\\core\\settle.js::program:settle",
              "paramTypes" : [
                "(value: ANY) => void",
                "(reason?: ANY) => void",
                "{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 570,
              "columnNumber" : 10
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "getContentType",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:<init>:getContentType",
            "lineNumber" : 47,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getContentType",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:<init>:getContentType",
            "lineNumber" : 47,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "test",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:test",
            "lineNumber" : 50,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "test",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:test",
            "lineNumber" : 50,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "getContentLength",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:getContentLength",
            "lineNumber" : 323,
            "columnNumber" : 47,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getContentLength",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:getContentLength",
            "lineNumber" : 323,
            "columnNumber" : 47,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "async function dispatchHttpRequest(resolve, reject, onDone) {\n    let {data, lookup, family} = config;\n    const {responseType, responseEncoding} = config;\n    const method = config.method.toUpperCase();\n    let isDone;\n    let rejected = false;\n    let req;\n\n    if (lookup && utils.isAsyncFn(lookup)) {\n      lookup = callbackify(lookup, (entry) => {\n        if(utils.isString(entry)) {\n          entry = [entry, entry.indexOf('.') < 0 ? 6 : 4]\n        } else if (!utils.isArray(entry)) {\n          throw new TypeError('lookup async function must return an array [ip: string, family: number]]')\n        }\n        return entry;\n      })\n    }\n\n    // temporary internal emitter until the AxiosRequest class will be implemented\n    const emitter = new EventEmitter();\n\n    const onFinished = () => {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(abort);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', abort);\n      }\n\n      emitter....",
            "typeFullName" : "ANY",
            "lineNumber" : 149,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "async function dispatchHttpRequest(resolve, reject, onDone) {\n    let {data, lookup, family} = config;\n    const {responseType, responseEncoding} = config;\n    const method = config.method.toUpperCase();\n    let isDone;\n    let rejected = false;\n    let req;\n\n    if (lookup && utils.isAsyncFn(lookup)) {\n      lookup = callbackify(lookup, (entry) => {\n        if(utils.isString(entry)) {\n          entry = [entry, entry.indexOf('.') < 0 ? 6 : 4]\n        } else if (!utils.isArray(entry)) {\n          throw new TypeError('lookup async function must return an array [ip: string, family: number]]')\n        }\n        return entry;\n      })\n    }\n\n    // temporary internal emitter until the AxiosRequest class will be implemented\n    const emitter = new EventEmitter();\n\n    const onFinished = () => {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(abort);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', abort);\n      }\n\n      emitter....",
            "typeFullName" : "ANY",
            "lineNumber" : 149,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isBuffer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Buffer:isBuffer",
            "lineNumber" : 49,
            "columnNumber" : 47,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isBuffer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Buffer:isBuffer",
            "lineNumber" : 49,
            "columnNumber" : 47,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "maxRate",
            "typeFullName" : "maxRate",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "config.maxRate",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 266,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 325,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "isArrayBuffer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isArrayBuffer",
            "lineNumber" : 127,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isArrayBuffer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isArrayBuffer",
            "lineNumber" : 127,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "setContentType",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:<init>:setContentType",
            "lineNumber" : 99,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "setContentType",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:<init>:setContentType",
            "lineNumber" : 99,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "once",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:once",
            "lineNumber" : 582,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "once",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:once",
            "lineNumber" : 582,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "getContentLength",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:<init>:getContentLength",
            "lineNumber" : 323,
            "columnNumber" : 47,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getContentLength",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:<init>:getContentLength",
            "lineNumber" : 323,
            "columnNumber" : 47,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "parseInt",
            "typeFullName" : "ANY",
            "resolvedMethod" : "parseInt",
            "lineNumber" : 603,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "parseInt",
            "typeFullName" : "ANY",
            "resolvedMethod" : "parseInt",
            "lineNumber" : 603,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "responseEncoding",
            "typeFullName" : "__ecma.Boolean",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "_tmp_13.responseEncoding",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 151,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "toString",
              "resolvedMethod" : "Buffer | Blob:toString",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 230,
              "columnNumber" : 24
            },
            {
              "callName" : "toString",
              "resolvedMethod" : "__ecma.String:toString",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 561,
              "columnNumber" : 29
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Buffer.from",
            "lineNumber" : 334,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Buffer.from",
            "lineNumber" : 334,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isNaN",
            "typeFullName" : "ANY",
            "resolvedMethod" : "isNaN",
            "lineNumber" : 605,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isNaN",
            "typeFullName" : "ANY",
            "resolvedMethod" : "isNaN",
            "lineNumber" : 605,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "indexOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String[]:indexOf",
            "lineNumber" : 559,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "indexOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String[]:indexOf",
            "lineNumber" : 559,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "hasContentLength",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:<init>:hasContentLength",
            "lineNumber" : 284,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "hasContentLength",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:<init>:hasContentLength",
            "lineNumber" : 284,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isBlob",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isBlob",
            "lineNumber" : 123,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isBlob",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isBlob",
            "lineNumber" : 123,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "convertedData",
            "typeFullName" : "Buffer | Blob",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "stream.Readable.from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "stream.Readable.from",
            "lineNumber" : 236,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "toString",
              "resolvedMethod" : "Buffer | Blob:toString",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 230,
              "columnNumber" : 24
            }
          ],
          "argToCalls" : [
            {
              "callName" : "stripBOM",
              "resolvedMethod" : "../utils.js:utils:stripBOM",
              "paramTypes" : [
                "Buffer | Blob"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 233,
              "columnNumber" : 26
            },
            {
              "callName" : "from",
              "resolvedMethod" : "stream.Readable.from",
              "paramTypes" : [
                "Buffer | Blob"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 236,
              "columnNumber" : 24
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "isFormData",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isFormData",
            "lineNumber" : 69,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isFormData",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isFormData",
            "lineNumber" : 69,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "hasContentLength",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:hasContentLength",
            "lineNumber" : 284,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "hasContentLength",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:hasContentLength",
            "lineNumber" : 284,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "protocol",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "parsed.protocol || supportedProtocols[0]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.logicalOr",
            "lineNumber" : 207,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "indexOf",
              "resolvedMethod" : "__ecma.String[]:indexOf",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 248,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "emitter",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new EventEmitter",
            "typeFullName" : "ANY",
            "resolvedMethod" : null,
            "lineNumber" : 169,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "removeAllListeners",
              "resolvedMethod" : "emitter.removeAllListeners",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 180,
              "columnNumber" : 6
            },
            {
              "callName" : "CanceledError",
              "resolvedMethod" : "lib\\cancel\\CanceledError.js::program:CanceledError",
              "paramTypes" : [
                "__ecma.Null",
                "__ecma.Boolean",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "lib\\cancel\\CanceledError.js::program:CanceledError",
              "lineNumber" : 192,
              "columnNumber" : 6
            },
            {
              "callName" : "once",
              "resolvedMethod" : "emitter.once",
              "paramTypes" : [
                "__ecma.String",
                "(reason?: ANY) => void"
              ],
              "returnType" : "ANY",
              "lineNumber" : 195,
              "columnNumber" : 4
            },
            {
              "callName" : "once",
              "resolvedMethod" : "emitter.once",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 574,
              "columnNumber" : 6
            },
            {
              "callName" : "once",
              "resolvedMethod" : "emitter.once",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 582,
              "columnNumber" : 4
            }
          ],
          "argToCalls" : [
            {
              "callName" : "EventEmitter",
              "resolvedMethod" : "EventEmitter",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 169,
              "columnNumber" : 10
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "setContentLength",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:setContentLength",
            "lineNumber" : 312,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "setContentLength",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:setContentLength",
            "lineNumber" : 312,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isSpecCompliantForm",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isSpecCompliantForm",
            "lineNumber" : 110,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isSpecCompliantForm",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isSpecCompliantForm",
            "lineNumber" : 110,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "setContentType",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:setContentType",
            "lineNumber" : 99,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "setContentType",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:setContentType",
            "lineNumber" : 99,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "transport",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "isHttpsRequest ? httpsFollow : httpFollow",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.conditional",
            "lineNumber" : 421,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "request",
              "resolvedMethod" : "lib\\core\\Axios.js::program:Axios:request",
              "paramTypes" : [
                "http:http:ClientRequestArgs",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 436,
              "columnNumber" : 10
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "getHeaders",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:getHeaders",
            "lineNumber" : 282,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getHeaders",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:getHeaders",
            "lineNumber" : 282,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isAsyncFn",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isAsyncFn",
            "lineNumber" : 4,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isAsyncFn",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isAsyncFn",
            "lineNumber" : 4,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "knownLength",
            "typeFullName" : "__ecma.Boolean",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "await util.promisify",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.await",
            "lineNumber" : 286,
            "columnNumber" : 30,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isFinite",
              "resolvedMethod" : "Number.isFinite",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 287,
              "columnNumber" : 10
            },
            {
              "callName" : "setContentLength",
              "resolvedMethod" : "headers.setContentLength",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 287,
              "columnNumber" : 62
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "parsed",
            "typeFullName" : "URL",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new URL",
            "typeFullName" : "URL",
            "resolvedMethod" : "URL",
            "lineNumber" : 206,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "URL",
              "resolvedMethod" : "URL",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "URL",
              "position" : 1,
              "lineNumber" : 206,
              "columnNumber" : 10
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "lookup",
            "typeFullName" : "__ecma.Boolean",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "callbackify",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\callbackify.js::program:callbackify",
            "lineNumber" : 158,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isAsyncFn",
              "resolvedMethod" : "../utils.js:utils:isAsyncFn",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 157,
              "columnNumber" : 18
            },
            {
              "callName" : "callbackify",
              "resolvedMethod" : "lib\\helpers\\callbackify.js::program:callbackify",
              "paramTypes" : [
                "__ecma.Boolean",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 158,
              "columnNumber" : 15
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "maxUploadRate",
            "typeFullName" : "undefined",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "maxDownloadRate = maxRate",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.assignment",
            "lineNumber" : 329,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "toFiniteNumber",
              "resolvedMethod" : "../utils.js:utils:toFiniteNumber",
              "paramTypes" : [
                "undefined"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 339,
              "columnNumber" : 17
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "toString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Buffer | Blob:toString",
            "lineNumber" : 11,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Buffer | Blob:toString",
            "lineNumber" : 11,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:abort",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 191,
      "columnNumber" : 4,
      "usages" : [
        {
          "targetObj" : {
            "name" : "abort",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:abort",
            "lineNumber" : 200,
            "columnNumber" : 32,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "abort",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:abort",
            "lineNumber" : 200,
            "columnNumber" : 32,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:anonymous",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 158,
      "columnNumber" : 35,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(entry) => {\n        if(utils.isString(entry)) {\n          entry = [entry, entry.indexOf('.') < 0 ? 6 : 4]\n        } else if (!utils.isArray(entry)) {\n          throw new TypeError('lookup async function must return an array [ip: string, family: number]]')\n        }\n        return entry;\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 158,
            "columnNumber" : 35,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(entry) => {\n        if(utils.isString(entry)) {\n          entry = [entry, entry.indexOf('.') < 0 ? 6 : 4]\n        } else if (!utils.isArray(entry)) {\n          throw new TypeError('lookup async function must return an array [ip: string, family: number]]')\n        }\n        return entry;\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 158,
            "columnNumber" : 35,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "entry",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 158,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "entry",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 158,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "indexOf",
              "resolvedMethod" : "__ecma.Boolean:indexOf",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 160,
              "columnNumber" : 26
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 159,
              "columnNumber" : 11
            },
            {
              "callName" : "",
              "resolvedMethod" : "_tmp_15.push",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 160,
              "columnNumber" : 19
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 161,
              "columnNumber" : 20
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "indexOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:indexOf",
            "lineNumber" : 559,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "indexOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:indexOf",
            "lineNumber" : 559,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:anonymous2",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 183,
      "columnNumber" : 11,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(value, isRejected) => {\n      isDone = true;\n      if (isRejected) {\n        rejected = true;\n        onFinished();\n      }\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 183,
            "columnNumber" : 11,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(value, isRejected) => {\n      isDone = true;\n      if (isRejected) {\n        rejected = true;\n        onFinished();\n      }\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 183,
            "columnNumber" : 11,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:anonymous3",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 274,
      "columnNumber" : 36,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(formHeaders) => {\n        headers.set(formHeaders);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 274,
            "columnNumber" : 36,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(formHeaders) => {\n        headers.set(formHeaders);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 274,
            "columnNumber" : 36,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "formHeaders",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 274,
            "columnNumber" : 37,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "formHeaders",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 274,
            "columnNumber" : 37,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "set",
              "resolvedMethod" : "headers.set",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 275,
              "columnNumber" : 8
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:anonymous4",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 342,
      "columnNumber" : 46,
      "usages" : [
        {
          "targetObj" : {
            "name" : "progress => {\n        onUploadProgress(Object.assign(progress, {\n          upload: true\n        }));\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 342,
            "columnNumber" : 46,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "progress => {\n        onUploadProgress(Object.assign(progress, {\n          upload: true\n        }));\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 342,
            "columnNumber" : 46,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "progress",
            "typeFullName" : "void",
            "position" : 1,
            "lineNumber" : 342,
            "columnNumber" : 46,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "progress",
            "typeFullName" : "void",
            "position" : 1,
            "lineNumber" : 342,
            "columnNumber" : 46,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "assign",
              "resolvedMethod" : "Object.assign",
              "paramTypes" : [
                "void",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 343,
              "columnNumber" : 25
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "onUploadProgress",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:onUploadProgress",
            "lineNumber" : 343,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "onUploadProgress",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:onUploadProgress",
            "lineNumber" : 343,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:anonymous5",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 582,
      "columnNumber" : 26,
      "usages" : [
        {
          "targetObj" : {
            "name" : "err => {\n      reject(err);\n      req.destroy(err);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 582,
            "columnNumber" : 26,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "err => {\n      reject(err);\n      req.destroy(err);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 582,
            "columnNumber" : 26,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "err",
            "typeFullName" : "void",
            "position" : 1,
            "lineNumber" : 582,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "err",
            "typeFullName" : "void",
            "position" : 1,
            "lineNumber" : 582,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "reject",
              "resolvedMethod" : "lib\\adapters\\http.js::program:reject",
              "paramTypes" : [
                "void"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 583,
              "columnNumber" : 6
            },
            {
              "callName" : "destroy",
              "resolvedMethod" : "__ecma.Boolean:destroy",
              "paramTypes" : [
                "void"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 584,
              "columnNumber" : 6
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:anonymous6",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 644,
      "columnNumber" : 21,
      "usages" : [
        {
          "targetObj" : {
            "name" : "() => {\n        ended = true;\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 644,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "() => {\n        ended = true;\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 644,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:anonymous7",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 648,
      "columnNumber" : 25,
      "usages" : [
        {
          "targetObj" : {
            "name" : "err => {\n        errored = true;\n        req.destroy(err);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 648,
            "columnNumber" : 25,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "err => {\n        errored = true;\n        req.destroy(err);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 648,
            "columnNumber" : 25,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "err",
            "typeFullName" : "void",
            "position" : 1,
            "lineNumber" : 648,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "err",
            "typeFullName" : "void",
            "position" : 1,
            "lineNumber" : 648,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "destroy",
              "resolvedMethod" : "__ecma.Boolean:destroy",
              "paramTypes" : [
                "void"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 650,
              "columnNumber" : 8
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:anonymous8",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 653,
      "columnNumber" : 23,
      "usages" : [
        {
          "targetObj" : {
            "name" : "() => {\n        if (!ended && !errored) {\n          abort(new CanceledError('Request stream has been aborted', config, req));\n        }\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 653,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "() => {\n        if (!ended && !errored) {\n          abort(new CanceledError('Request stream has been aborted', config, req));\n        }\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 653,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:handleRequestError",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 588,
      "columnNumber" : 20,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function handleRequestError(err) {\n      // @todo remove\n      // if (req.aborted && err.code !== AxiosError.ERR_FR_TOO_MANY_REDIRECTS) return;\n      reject(AxiosError.from(err, null, config, req));\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 588,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function handleRequestError(err) {\n      // @todo remove\n      // if (req.aborted && err.code !== AxiosError.ERR_FR_TOO_MANY_REDIRECTS) return;\n      reject(AxiosError.from(err, null, config, req));\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 588,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "err",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 588,
            "columnNumber" : 48,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "err",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 588,
            "columnNumber" : 48,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "from",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
              "paramTypes" : [
                "void",
                "__ecma.Null",
                "__ecma.Boolean",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 591,
              "columnNumber" : 13
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:handleRequestSocket",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 595,
      "columnNumber" : 21,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 595,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 595,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "socket",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 595,
            "columnNumber" : 50,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "socket",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 595,
            "columnNumber" : 50,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "setKeepAlive",
              "resolvedMethod" : "socket.setKeepAlive",
              "paramTypes" : [
                "__ecma.Boolean",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 597,
              "columnNumber" : 6
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:handleRequestTimeout",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 621,
      "columnNumber" : 30,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function handleRequestTimeout() {\n        if (isDone) return;\n        let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n        const transitional = config.transitional || transitionalDefaults;\n        if (config.timeoutErrorMessage) {\n          timeoutErrorMessage = config.timeoutErrorMessage;\n        }\n        reject(new AxiosError(\n          timeoutErrorMessage,\n          transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n          config,\n          req\n        ));\n        abort();\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 621,
            "columnNumber" : 30,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function handleRequestTimeout() {\n        if (isDone) return;\n        let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n        const transitional = config.transitional || transitionalDefaults;\n        if (config.timeoutErrorMessage) {\n          timeoutErrorMessage = config.timeoutErrorMessage;\n        }\n        reject(new AxiosError(\n          timeoutErrorMessage,\n          transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n          config,\n          req\n        ));\n        abort();\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 621,
            "columnNumber" : 30,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:handleResponse",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 436,
      "columnNumber" : 37,
      "usages" : [
        {
          "targetObj" : {
            "name" : "toFiniteNumber",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:toFiniteNumber",
            "lineNumber" : 89,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toFiniteNumber",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:toFiniteNumber",
            "lineNumber" : 89,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "createBrotliDecompress",
            "typeFullName" : "ANY",
            "resolvedMethod" : "zlib:zlib:createBrotliDecompress",
            "lineNumber" : 495,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "createBrotliDecompress",
            "typeFullName" : "ANY",
            "resolvedMethod" : "zlib:zlib:createBrotliDecompress",
            "lineNumber" : 495,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "on",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:<init>:on",
            "lineNumber" : 75,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "on",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:<init>:on",
            "lineNumber" : 75,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "responseBuffer",
            "typeFullName" : "__ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "__ecma.Array.factory",
            "typeFullName" : "__ecma.Array.factory",
            "resolvedMethod" : "__ecma.Array.factory",
            "lineNumber" : 520,
            "columnNumber" : 31,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "push",
              "resolvedMethod" : "__ecma.Number:push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 524,
              "columnNumber" : 10
            }
          ],
          "argToCalls" : [
            {
              "callName" : "concat",
              "resolvedMethod" : "Buffer:concat",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 559,
              "columnNumber" : 81
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "function handleResponse(res) {\n      if (req.destroyed) return;\n\n      const streams = [res];\n\n      const responseLength = +res.headers['content-length'];\n\n      if (onDownloadProgress) {\n        const transformStream = new AxiosTransformStream({\n          length: utils.toFiniteNumber(responseLength),\n          maxRate: utils.toFiniteNumber(maxDownloadRate)\n        });\n\n        onDownloadProgress && transformStream.on('progress', progress => {\n          onDownloadProgress(Object.assign(progress, {\n            download: true\n          }));\n        });\n\n        streams.push(transformStream);\n      }\n\n      // decompress the response body transparently if required\n      let responseStream = res;\n\n      // return the last request in case of redirects\n      const lastRequest = res.req || req;\n\n      // if decompress disabled we should not decompress\n      if (config.decompress !== false && res.headers['content-encoding']) {\n        // if no content, but headers still say that it is enco...",
            "typeFullName" : "ANY",
            "lineNumber" : 436,
            "columnNumber" : 37,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function handleResponse(res) {\n      if (req.destroyed) return;\n\n      const streams = [res];\n\n      const responseLength = +res.headers['content-length'];\n\n      if (onDownloadProgress) {\n        const transformStream = new AxiosTransformStream({\n          length: utils.toFiniteNumber(responseLength),\n          maxRate: utils.toFiniteNumber(maxDownloadRate)\n        });\n\n        onDownloadProgress && transformStream.on('progress', progress => {\n          onDownloadProgress(Object.assign(progress, {\n            download: true\n          }));\n        });\n\n        streams.push(transformStream);\n      }\n\n      // decompress the response body transparently if required\n      let responseStream = res;\n\n      // return the last request in case of redirects\n      const lastRequest = res.req || req;\n\n      // if decompress disabled we should not decompress\n      if (config.decompress !== false && res.headers['content-encoding']) {\n        // if no content, but headers still say that it is enco...",
            "typeFullName" : "ANY",
            "lineNumber" : 436,
            "columnNumber" : 37,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "pipeline",
            "typeFullName" : "ANY",
            "resolvedMethod" : "stream:stream:pipeline",
            "lineNumber" : 337,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "pipeline",
            "typeFullName" : "ANY",
            "resolvedMethod" : "stream:stream:pipeline",
            "lineNumber" : 337,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "createUnzip",
            "typeFullName" : "ANY",
            "resolvedMethod" : "zlib:zlib:createUnzip",
            "lineNumber" : 488,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "createUnzip",
            "typeFullName" : "ANY",
            "resolvedMethod" : "zlib:zlib:createUnzip",
            "lineNumber" : 488,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "transformStream",
            "typeFullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new AxiosTransformStream",
            "typeFullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream",
            "lineNumber" : 444,
            "columnNumber" : 32,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "on",
              "resolvedMethod" : "transformStream.on",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 449,
              "columnNumber" : 30
            }
          ],
          "argToCalls" : [
            {
              "callName" : "AxiosTransformStream",
              "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream",
              "position" : 1,
              "lineNumber" : 444,
              "columnNumber" : 14
            },
            {
              "callName" : "push",
              "resolvedMethod" : "__ecma.Number:push",
              "paramTypes" : [
                "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 455,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "finished",
            "typeFullName" : "ANY",
            "resolvedMethod" : "stream:stream:finished",
            "lineNumber" : 503,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "finished",
            "typeFullName" : "ANY",
            "resolvedMethod" : "stream:stream:finished",
            "lineNumber" : 503,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "on",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:on",
            "lineNumber" : 75,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "on",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:on",
            "lineNumber" : 75,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "responseLength",
            "typeFullName" : "__ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "+res.headers['content-length']",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.plus",
            "lineNumber" : 441,
            "columnNumber" : 29,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "toFiniteNumber",
              "resolvedMethod" : "../utils.js:utils:toFiniteNumber",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 445,
              "columnNumber" : 18
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.delete",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.delete",
            "lineNumber" : 211,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.delete",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.delete",
            "lineNumber" : 211,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "lastRequest",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "res.req || req",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.logicalOr",
            "lineNumber" : 462,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "from",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
              "paramTypes" : [
                "void",
                "__ecma.Null",
                "__ecma.Boolean",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 4,
              "lineNumber" : 554,
              "columnNumber" : 17
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "on",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:on",
            "lineNumber" : 75,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "on",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:on",
            "lineNumber" : 75,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "res",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 436,
            "columnNumber" : 61,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "res",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 436,
            "columnNumber" : 61,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "",
              "resolvedMethod" : "_tmp_48.push",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 439,
              "columnNumber" : 23
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "response",
            "typeFullName" : "{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new AxiosHeaders",
            "typeFullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "lineNumber" : 511,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "AxiosHeaders",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
              "position" : 1,
              "lineNumber" : 508,
              "columnNumber" : 12
            },
            {
              "callName" : "settle",
              "resolvedMethod" : "lib\\core\\settle.js::program:settle",
              "paramTypes" : [
                "(value: ANY) => void",
                "(reason?: ANY) => void",
                "{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 518,
              "columnNumber" : 8
            },
            {
              "callName" : "from",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
              "paramTypes" : [
                "void",
                "__ecma.Null",
                "__ecma.Boolean",
                "ANY",
                "{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 5,
              "lineNumber" : 568,
              "columnNumber" : 19
            },
            {
              "callName" : "settle",
              "resolvedMethod" : "lib\\core\\settle.js::program:settle",
              "paramTypes" : [
                "(value: ANY) => void",
                "(reason?: ANY) => void",
                "{ status: ANY; statusText: ANY; headers: AxiosHeaders; config: ANY; request: ANY; }"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 570,
              "columnNumber" : 10
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:handleResponse:anonymous",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 449,
      "columnNumber" : 61,
      "usages" : [
        {
          "targetObj" : {
            "name" : "progress => {\n          onDownloadProgress(Object.assign(progress, {\n            download: true\n          }));\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 449,
            "columnNumber" : 61,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "progress => {\n          onDownloadProgress(Object.assign(progress, {\n            download: true\n          }));\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 449,
            "columnNumber" : 61,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "progress",
            "typeFullName" : "void",
            "position" : 1,
            "lineNumber" : 449,
            "columnNumber" : 61,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "progress",
            "typeFullName" : "void",
            "position" : 1,
            "lineNumber" : 449,
            "columnNumber" : 61,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "assign",
              "resolvedMethod" : "Object.assign",
              "paramTypes" : [
                "void",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 450,
              "columnNumber" : 29
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "onDownloadProgress",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:onDownloadProgress",
            "lineNumber" : 450,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "onDownloadProgress",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:onDownloadProgress",
            "lineNumber" : 450,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:handleResponse:anonymous1",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 503,
      "columnNumber" : 59,
      "usages" : [
        {
          "targetObj" : {
            "name" : "() => {\n        offListeners();\n        onFinished();\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 503,
            "columnNumber" : 59,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "() => {\n        offListeners();\n        onFinished();\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 503,
            "columnNumber" : 59,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "offListeners",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:offListeners",
            "lineNumber" : 504,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "offListeners",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\http.js::program:offListeners",
            "lineNumber" : 504,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:handleResponse:anonymous2",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 574,
      "columnNumber" : 28,
      "usages" : [
        {
          "targetObj" : {
            "name" : "err => {\n        if (!responseStream.destroyed) {\n          responseStream.emit('error', err);\n          responseStream.destroy();\n        }\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 574,
            "columnNumber" : 28,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "err => {\n        if (!responseStream.destroyed) {\n          responseStream.emit('error', err);\n          responseStream.destroy();\n        }\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 574,
            "columnNumber" : 28,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "err",
            "typeFullName" : "void",
            "position" : 1,
            "lineNumber" : 574,
            "columnNumber" : 28,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "err",
            "typeFullName" : "void",
            "position" : 1,
            "lineNumber" : 574,
            "columnNumber" : 28,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "emit",
              "resolvedMethod" : "__ecma.Boolean:emit",
              "paramTypes" : [
                "__ecma.String",
                "void"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 576,
              "columnNumber" : 10
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "emit",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:emit",
            "lineNumber" : 192,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "emit",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:emit",
            "lineNumber" : 192,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:handleResponse:handleStreamData",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 523,
      "columnNumber" : 34,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destroy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            responseStream.destroy();\n            reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              AxiosError.ERR_BAD_RESPONSE, config, lastRequest));\n          }\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 523,
            "columnNumber" : 34,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destroy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            responseStream.destroy();\n            reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              AxiosError.ERR_BAD_RESPONSE, config, lastRequest));\n          }\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 523,
            "columnNumber" : 34,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.minus",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.minus",
            "lineNumber" : 559,
            "columnNumber" : 79,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.minus",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.minus",
            "lineNumber" : 559,
            "columnNumber" : 79,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "chunk",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 523,
            "columnNumber" : 60,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "chunk",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 523,
            "columnNumber" : 60,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "push",
              "resolvedMethod" : "__ecma.Number:push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 524,
              "columnNumber" : 10
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "destroy",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:destroy",
            "lineNumber" : 650,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "destroy",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:destroy",
            "lineNumber" : 650,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "push",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Number:push",
            "lineNumber" : 45,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "push",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Number:push",
            "lineNumber" : 45,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:handleResponse:handleStreamEnd",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 557,
      "columnNumber" : 33,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function handleStreamEnd() {\n          try {\n            let responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n            if (responseType !== 'arraybuffer') {\n              responseData = responseData.toString(responseEncoding);\n              if (!responseEncoding || responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n            response.data = responseData;\n          } catch (err) {\n            reject(AxiosError.from(err, null, config, response.request, response));\n          }\n          settle(resolve, reject, response);\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 557,
            "columnNumber" : 33,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function handleStreamEnd() {\n          try {\n            let responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n            if (responseType !== 'arraybuffer') {\n              responseData = responseData.toString(responseEncoding);\n              if (!responseEncoding || responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n            response.data = responseData;\n          } catch (err) {\n            reject(AxiosError.from(err, null, config, response.request, response));\n          }\n          settle(resolve, reject, response);\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 557,
            "columnNumber" : 33,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "stripBOM",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:stripBOM",
            "lineNumber" : 233,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "stripBOM",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:stripBOM",
            "lineNumber" : 233,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "toString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:toString",
            "lineNumber" : 11,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:toString",
            "lineNumber" : 11,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "concat",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Buffer:concat",
            "lineNumber" : 223,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "concat",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Buffer:concat",
            "lineNumber" : 223,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "responseData",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.conditional",
            "lineNumber" : 559,
            "columnNumber" : 31,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "toString",
              "resolvedMethod" : "__ecma.String:toString",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 561,
              "columnNumber" : 29
            }
          ],
          "argToCalls" : [
            {
              "callName" : "stripBOM",
              "resolvedMethod" : "../utils.js:utils:stripBOM",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 563,
              "columnNumber" : 31
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:handleResponse:handleStreamError",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 552,
      "columnNumber" : 35,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function handleStreamError(err) {\n          if (req.destroyed) return;\n          reject(AxiosError.from(err, null, config, lastRequest));\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 552,
            "columnNumber" : 35,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function handleStreamError(err) {\n          if (req.destroyed) return;\n          reject(AxiosError.from(err, null, config, lastRequest));\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 552,
            "columnNumber" : 35,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "err",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 552,
            "columnNumber" : 62,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "err",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 552,
            "columnNumber" : 62,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "from",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
              "paramTypes" : [
                "void",
                "__ecma.Null",
                "__ecma.Boolean",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 554,
              "columnNumber" : 17
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
            "lineNumber" : 334,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
            "lineNumber" : 334,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:handleResponse:handlerStreamAborted",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 537,
      "columnNumber" : 37,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n\n          const err = new AxiosError(\n            'maxContentLength size of ' + config.maxContentLength + ' exceeded',\n            AxiosError.ERR_BAD_RESPONSE,\n            config,\n            lastRequest\n          );\n          responseStream.destroy(err);\n          reject(err);\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 537,
            "columnNumber" : 37,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n\n          const err = new AxiosError(\n            'maxContentLength size of ' + config.maxContentLength + ' exceeded',\n            AxiosError.ERR_BAD_RESPONSE,\n            config,\n            lastRequest\n          );\n          responseStream.destroy(err);\n          reject(err);\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 537,
            "columnNumber" : 37,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "err",
            "typeFullName" : "void",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new AxiosError",
            "typeFullName" : "lib\\core\\AxiosError.js::program:AxiosError",
            "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError",
            "lineNumber" : 542,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "AxiosError",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError",
              "paramTypes" : [
                "ANY",
                "ANY",
                "__ecma.Boolean",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "lib\\core\\AxiosError.js::program:AxiosError",
              "position" : 1,
              "lineNumber" : 542,
              "columnNumber" : 16
            },
            {
              "callName" : "destroy",
              "resolvedMethod" : "__ecma.Boolean:destroy",
              "paramTypes" : [
                "void"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 548,
              "columnNumber" : 10
            },
            {
              "callName" : "reject",
              "resolvedMethod" : "lib\\adapters\\http.js::program:reject",
              "paramTypes" : [
                "void"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 549,
              "columnNumber" : 10
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:onFinished",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 171,
      "columnNumber" : 23,
      "usages" : [
        {
          "targetObj" : {
            "name" : "onFinished",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:onFinished",
            "lineNumber" : 505,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "onFinished",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\adapters\\http.js::program:httpAdapter:dispatchHttpRequest:onFinished",
            "lineNumber" : 505,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:setProxy",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 74,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "setProxy",
            "typeFullName" : "http:http:ClientRequestArgs",
            "resolvedMethod" : "lib\\adapters\\http.js::program:setProxy",
            "lineNumber" : 404,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "setProxy",
            "typeFullName" : "http:http:ClientRequestArgs",
            "resolvedMethod" : "lib\\adapters\\http.js::program:setProxy",
            "lineNumber" : 404,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "proxy",
            "typeFullName" : "AxiosProxyConfig",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new URL",
            "typeFullName" : "URL",
            "resolvedMethod" : "URL",
            "lineNumber" : 79,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "URL",
              "resolvedMethod" : "URL",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "URL",
              "position" : 1,
              "lineNumber" : 79,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "location",
            "typeFullName" : "__ecma.String",
            "position" : 3,
            "lineNumber" : 74,
            "columnNumber" : 40,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "location",
            "typeFullName" : "__ecma.String",
            "position" : 3,
            "lineNumber" : 74,
            "columnNumber" : 40,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "getProxyForUrl",
              "resolvedMethod" : "proxy-from-env:getProxyForUrl",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 77,
              "columnNumber" : 21
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "getProxyForUrl",
            "typeFullName" : "ANY",
            "resolvedMethod" : "proxy-from-env:getProxyForUrl",
            "lineNumber" : 77,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getProxyForUrl",
            "typeFullName" : "ANY",
            "resolvedMethod" : "proxy-from-env:getProxyForUrl",
            "lineNumber" : 77,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Buffer:from",
            "lineNumber" : 334,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Buffer:from",
            "lineNumber" : 334,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "configProxy",
            "typeFullName" : "AxiosProxyConfig",
            "position" : 2,
            "lineNumber" : 74,
            "columnNumber" : 27,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "configProxy",
            "typeFullName" : "AxiosProxyConfig",
            "position" : 2,
            "lineNumber" : 74,
            "columnNumber" : 27,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "setProxy",
              "resolvedMethod" : "lib\\adapters\\http.js::program:setProxy",
              "paramTypes" : [
                "ANY",
                "AxiosProxyConfig",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 114,
              "columnNumber" : 4
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:setProxy:beforeRedirect",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 111,
      "columnNumber" : 34,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function beforeRedirect(redirectOptions) {\n    // Configure proxy for redirected request, passing the original config proxy to apply\n    // the exact same logic as if the redirected request was performed by axios directly.\n    setProxy(redirectOptions, configProxy, redirectOptions.href);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 111,
            "columnNumber" : 34,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function beforeRedirect(redirectOptions) {\n    // Configure proxy for redirected request, passing the original config proxy to apply\n    // the exact same logic as if the redirected request was performed by axios directly.\n    setProxy(redirectOptions, configProxy, redirectOptions.href);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 111,
            "columnNumber" : 34,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "redirectOptions",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 111,
            "columnNumber" : 58,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "redirectOptions",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 111,
            "columnNumber" : 58,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "setProxy",
              "resolvedMethod" : "lib\\adapters\\http.js::program:setProxy",
              "paramTypes" : [
                "ANY",
                "AxiosProxyConfig",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 114,
              "columnNumber" : 4
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\http.js::program:wrapAsync",
      "signature" : "",
      "fileName" : "lib\\adapters\\http.js",
      "lineNumber" : 122,
      "columnNumber" : 18,
      "usages" : [
        {
          "targetObj" : {
            "name" : "wrapAsync",
            "typeFullName" : "Promise<any>",
            "resolvedMethod" : "lib\\adapters\\http.js::program:wrapAsync",
            "lineNumber" : 149,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "wrapAsync",
            "typeFullName" : "Promise<any>",
            "resolvedMethod" : "lib\\adapters\\http.js::program:wrapAsync",
            "lineNumber" : 149,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\xhr.js::program",
      "signature" : "",
      "fileName" : "lib\\adapters\\xhr.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:require",
            "lineNumber" : 15,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:require",
            "lineNumber" : 15,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "AxiosHeaders",
            "typeFullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:require",
            "lineNumber" : 14,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "from",
              "resolvedMethod" : "AxiosHeaders.from",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 51,
              "columnNumber" : 27
            },
            {
              "callName" : "from",
              "resolvedMethod" : "AxiosHeaders.from",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 93,
              "columnNumber" : 30
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "cookies",
            "typeFullName" : "../helpers/cookies.js:cookies",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:require",
            "lineNumber" : 5,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "read",
              "resolvedMethod" : "../helpers/cookies.js:cookies:read",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 187,
              "columnNumber" : 36
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "isFormData",
              "resolvedMethod" : "../utils.js:utils:isFormData",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 64,
              "columnNumber" : 8
            },
            {
              "callName" : "forEach",
              "resolvedMethod" : "../utils.js:utils:forEach",
              "paramTypes" : [
                "(asStrings: ANY) => ANY",
                "LAMBDA"
              ],
              "returnType" : "(asStrings: ANY) => ANY",
              "lineNumber" : 199,
              "columnNumber" : 6
            },
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 205,
              "columnNumber" : 9
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\xhr.js::program:anonymous",
      "signature" : "",
      "fileName" : "lib\\adapters\\xhr.js",
      "lineNumber" : 48,
      "columnNumber" : 40,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      if (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else {\n        requestHeaders.setContentType('multipart/form-data;', false); // mobile/desktop app frameworks\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth...",
            "typeFullName" : "ANY",
            "lineNumber" : 48,
            "columnNumber" : 40,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      if (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else {\n        requestHeaders.setContentType('multipart/form-data;', false); // mobile/desktop app frameworks\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth...",
            "typeFullName" : "ANY",
            "lineNumber" : 48,
            "columnNumber" : 40,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\xhr.js::program:anonymous:dispatchXhrRequest",
      "signature" : "",
      "fileName" : "lib\\adapters\\xhr.js",
      "lineNumber" : 49,
      "columnNumber" : 21,
      "usages" : [
        {
          "targetObj" : {
            "name" : "fullPath",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "buildFullPath",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\core\\buildFullPath.js::program:buildFullPath",
            "lineNumber" : 81,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "buildURL",
              "resolvedMethod" : "lib\\helpers\\buildURL.js::program:buildURL",
              "paramTypes" : [
                "__ecma.String",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 83,
              "columnNumber" : 46
            },
            {
              "callName" : "isURLSameOrigin",
              "resolvedMethod" : "../helpers/isURLSameOrigin.js:isURLSameOrigin",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 186,
              "columnNumber" : 51
            },
            {
              "callName" : "parseProtocol",
              "resolvedMethod" : "lib\\helpers\\parseProtocol.js::program:parseProtocol",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 242,
              "columnNumber" : 21
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "protocol",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "parseProtocol",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\parseProtocol.js::program:parseProtocol",
            "lineNumber" : 242,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "indexOf",
              "resolvedMethod" : "platform.protocols.indexOf",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 244,
              "columnNumber" : 20
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "requestHeaders",
            "typeFullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "AxiosHeaders.from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:normalize",
            "lineNumber" : 51,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "setContentType",
              "resolvedMethod" : "requestHeaders.setContentType",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 66,
              "columnNumber" : 8
            },
            {
              "callName" : "setContentType",
              "resolvedMethod" : "requestHeaders.setContentType",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 68,
              "columnNumber" : 8
            },
            {
              "callName" : "set",
              "resolvedMethod" : "requestHeaders.set",
              "paramTypes" : [
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 78,
              "columnNumber" : 6
            },
            {
              "callName" : "set",
              "resolvedMethod" : "requestHeaders.set",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 190,
              "columnNumber" : 8
            },
            {
              "callName" : "setContentType",
              "resolvedMethod" : "requestHeaders.setContentType",
              "paramTypes" : [
                "__ecma.Null"
              ],
              "returnType" : "ANY",
              "lineNumber" : 195,
              "columnNumber" : 33
            },
            {
              "callName" : "toJSON",
              "resolvedMethod" : "requestHeaders.toJSON",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 199,
              "columnNumber" : 20
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isUndefined",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isUndefined",
            "lineNumber" : 101,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isUndefined",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isUndefined",
            "lineNumber" : 101,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "open",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Null:open",
            "lineNumber" : 83,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "open",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Null:open",
            "lineNumber" : 83,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "read",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../helpers/cookies.js:cookies:read",
            "lineNumber" : 187,
            "columnNumber" : 36,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "read",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../helpers/cookies.js:cookies:read",
            "lineNumber" : 187,
            "columnNumber" : 36,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "unescape",
            "typeFullName" : "ANY",
            "resolvedMethod" : "unescape",
            "lineNumber" : 77,
            "columnNumber" : 46,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "unescape",
            "typeFullName" : "ANY",
            "resolvedMethod" : "unescape",
            "lineNumber" : 77,
            "columnNumber" : 46,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "open",
            "typeFullName" : "ANY",
            "resolvedMethod" : "XMLHttpRequest:open",
            "lineNumber" : 83,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "open",
            "typeFullName" : "ANY",
            "resolvedMethod" : "XMLHttpRequest:open",
            "lineNumber" : 83,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      if (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else {\n        requestHeaders.setContentType('multipart/form-data;', false); // mobile/desktop app frameworks\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(c...",
            "typeFullName" : "ANY",
            "lineNumber" : 49,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      if (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else {\n        requestHeaders.setContentType('multipart/form-data;', false); // mobile/desktop app frameworks\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(c...",
            "typeFullName" : "ANY",
            "lineNumber" : 49,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "xsrfValue",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.logicalAnd",
            "lineNumber" : 186,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "set",
              "resolvedMethod" : "requestHeaders.set",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 190,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "isURLSameOrigin",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../helpers/isURLSameOrigin.js:isURLSameOrigin",
            "lineNumber" : 186,
            "columnNumber" : 51,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isURLSameOrigin",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../helpers/isURLSameOrigin.js:isURLSameOrigin",
            "lineNumber" : 186,
            "columnNumber" : 51,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "btoa",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:btoa",
            "lineNumber" : 78,
            "columnNumber" : 53,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "btoa",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:btoa",
            "lineNumber" : 78,
            "columnNumber" : 53,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "addEventListener",
            "typeFullName" : "ANY",
            "resolvedMethod" : "XMLHttpRequest:addEventListener",
            "lineNumber" : 238,
            "columnNumber" : 47,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "addEventListener",
            "typeFullName" : "ANY",
            "resolvedMethod" : "XMLHttpRequest:addEventListener",
            "lineNumber" : 238,
            "columnNumber" : 47,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "addEventListener",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Null:addEventListener",
            "lineNumber" : 238,
            "columnNumber" : 47,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "addEventListener",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Null:addEventListener",
            "lineNumber" : 238,
            "columnNumber" : 47,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "request",
            "typeFullName" : "XMLHttpRequest",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new XMLHttpRequest",
            "typeFullName" : "XMLHttpRequest",
            "resolvedMethod" : "XMLHttpRequest",
            "lineNumber" : 72,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "open",
              "resolvedMethod" : "request.open",
              "paramTypes" : [
                "ANY",
                "__ecma.String",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 83,
              "columnNumber" : 4
            },
            {
              "callName" : "getAllResponseHeaders",
              "resolvedMethod" : "request.getAllResponseHeaders",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 94,
              "columnNumber" : 46
            },
            {
              "callName" : "setRequestHeader",
              "resolvedMethod" : "request.setRequestHeader",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 200,
              "columnNumber" : 8
            },
            {
              "callName" : "addEventListener",
              "resolvedMethod" : "request.addEventListener",
              "paramTypes" : [
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 216,
              "columnNumber" : 6
            },
            {
              "callName" : "abort",
              "resolvedMethod" : "request.abort",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 232,
              "columnNumber" : 8
            },
            {
              "callName" : "send",
              "resolvedMethod" : "request.send",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 251,
              "columnNumber" : 4
            }
          ],
          "argToCalls" : [
            {
              "callName" : "XMLHttpRequest",
              "resolvedMethod" : "XMLHttpRequest",
              "paramTypes" : [
              ],
              "returnType" : "XMLHttpRequest",
              "position" : 1,
              "lineNumber" : 72,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "send",
            "typeFullName" : "ANY",
            "resolvedMethod" : "XMLHttpRequest:send",
            "lineNumber" : 251,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "send",
            "typeFullName" : "ANY",
            "resolvedMethod" : "XMLHttpRequest:send",
            "lineNumber" : 251,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "requestData",
            "typeFullName" : "__ecma.Boolean",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "config.data",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 50,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isFormData",
              "resolvedMethod" : "../utils.js:utils:isFormData",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 64,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "send",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Null:send",
            "lineNumber" : 251,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "send",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Null:send",
            "lineNumber" : 251,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "onCanceled",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:onCanceled",
            "lineNumber" : 238,
            "columnNumber" : 32,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "onCanceled",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:onCanceled",
            "lineNumber" : 238,
            "columnNumber" : 32,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\xhr.js::program:anonymous:dispatchXhrRequest:anonymous",
      "signature" : "",
      "fileName" : "lib\\adapters\\xhr.js",
      "lineNumber" : 227,
      "columnNumber" : 19,
      "usages" : [
        {
          "targetObj" : {
            "name" : "cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 227,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 227,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "abort",
            "typeFullName" : "ANY",
            "resolvedMethod" : "XMLHttpRequest:abort",
            "lineNumber" : 232,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "abort",
            "typeFullName" : "ANY",
            "resolvedMethod" : "XMLHttpRequest:abort",
            "lineNumber" : 232,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "abort",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Null:abort",
            "lineNumber" : 232,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "abort",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Null:abort",
            "lineNumber" : 232,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\xhr.js::program:anonymous:dispatchXhrRequest:done",
      "signature" : "",
      "fileName" : "lib\\adapters\\xhr.js",
      "lineNumber" : 54,
      "columnNumber" : 4,
      "usages" : [
        {
          "targetObj" : {
            "name" : "done",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:anonymous:dispatchXhrRequest:done",
            "lineNumber" : 112,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "done",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:anonymous:dispatchXhrRequest:done",
            "lineNumber" : 112,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\xhr.js::program:anonymous:dispatchXhrRequest:handleAbort",
      "signature" : "",
      "fileName" : "lib\\adapters\\xhr.js",
      "lineNumber" : 143,
      "columnNumber" : 22,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 143,
            "columnNumber" : 22,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 143,
            "columnNumber" : 22,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\xhr.js::program:anonymous:dispatchXhrRequest:handleError",
      "signature" : "",
      "fileName" : "lib\\adapters\\xhr.js",
      "lineNumber" : 155,
      "columnNumber" : 22,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 155,
            "columnNumber" : 22,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 155,
            "columnNumber" : 22,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\xhr.js::program:anonymous:dispatchXhrRequest:handleLoad",
      "signature" : "",
      "fileName" : "lib\\adapters\\xhr.js",
      "lineNumber" : 124,
      "columnNumber" : 35,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 124,
            "columnNumber" : 35,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 124,
            "columnNumber" : 35,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "setTimeout",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:setTimeout",
            "lineNumber" : 621,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "setTimeout",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:setTimeout",
            "lineNumber" : 621,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\xhr.js::program:anonymous:dispatchXhrRequest:handleTimeout",
      "signature" : "",
      "fileName" : "lib\\adapters\\xhr.js",
      "lineNumber" : 165,
      "columnNumber" : 24,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 165,
            "columnNumber" : 24,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 165,
            "columnNumber" : 24,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\xhr.js::program:anonymous:dispatchXhrRequest:onloadend",
      "signature" : "",
      "fileName" : "lib\\adapters\\xhr.js",
      "lineNumber" : 88,
      "columnNumber" : 4,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 88,
            "columnNumber" : 4,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 88,
            "columnNumber" : 4,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.in",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.in",
            "lineNumber" : 644,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.in",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.in",
            "lineNumber" : 644,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "getAllResponseHeaders",
            "typeFullName" : "ANY",
            "resolvedMethod" : "XMLHttpRequest:getAllResponseHeaders",
            "lineNumber" : 94,
            "columnNumber" : 46,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getAllResponseHeaders",
            "typeFullName" : "ANY",
            "resolvedMethod" : "XMLHttpRequest:getAllResponseHeaders",
            "lineNumber" : 94,
            "columnNumber" : 46,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "getAllResponseHeaders",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Null:getAllResponseHeaders",
            "lineNumber" : 94,
            "columnNumber" : 46,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getAllResponseHeaders",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Null:getAllResponseHeaders",
            "lineNumber" : 94,
            "columnNumber" : 46,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\xhr.js::program:anonymous:dispatchXhrRequest:onloadend:_reject",
      "signature" : "",
      "fileName" : "lib\\adapters\\xhr.js",
      "lineNumber" : 110,
      "columnNumber" : 9,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function _reject(err) {\n        reject(err);\n        done();\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 110,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function _reject(err) {\n        reject(err);\n        done();\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 110,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "err",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 110,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "err",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 110,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "reject",
              "resolvedMethod" : "lib\\adapters\\xhr.js::program:reject",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 111,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "reject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:reject",
            "lineNumber" : 245,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "reject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:reject",
            "lineNumber" : 245,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\xhr.js::program:anonymous:dispatchXhrRequest:onloadend:_resolve",
      "signature" : "",
      "fileName" : "lib\\adapters\\xhr.js",
      "lineNumber" : 107,
      "columnNumber" : 13,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function _resolve(value) {\n        resolve(value);\n        done();\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 107,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function _resolve(value) {\n        resolve(value);\n        done();\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 107,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 107,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 107,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "resolve",
              "resolvedMethod" : "lib\\adapters\\xhr.js::program:resolve",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 108,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "resolve",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:resolve",
            "lineNumber" : 108,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "resolve",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:resolve",
            "lineNumber" : 108,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\xhr.js::program:anonymous:dispatchXhrRequest:setRequestHeader",
      "signature" : "",
      "fileName" : "lib\\adapters\\xhr.js",
      "lineNumber" : 199,
      "columnNumber" : 45,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 199,
            "columnNumber" : 45,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 199,
            "columnNumber" : 45,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "setRequestHeader",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Null:setRequestHeader",
            "lineNumber" : 200,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "setRequestHeader",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Null:setRequestHeader",
            "lineNumber" : 200,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "setRequestHeader",
            "typeFullName" : "ANY",
            "resolvedMethod" : "XMLHttpRequest:setRequestHeader",
            "lineNumber" : 200,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "setRequestHeader",
            "typeFullName" : "ANY",
            "resolvedMethod" : "XMLHttpRequest:setRequestHeader",
            "lineNumber" : 200,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "val",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 199,
            "columnNumber" : 71,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "val",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 199,
            "columnNumber" : 71,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "setRequestHeader",
              "resolvedMethod" : "request.setRequestHeader",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 200,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "key",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 199,
            "columnNumber" : 76,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "key",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 199,
            "columnNumber" : 76,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "setRequestHeader",
              "resolvedMethod" : "request.setRequestHeader",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 200,
              "columnNumber" : 8
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\xhr.js::program:progressEventReducer",
      "signature" : "",
      "fileName" : "lib\\adapters\\xhr.js",
      "lineNumber" : 17,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "progressEventReducer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:progressEventReducer",
            "lineNumber" : 221,
            "columnNumber" : 50,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "progressEventReducer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:progressEventReducer",
            "lineNumber" : 221,
            "columnNumber" : 50,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\adapters\\xhr.js::program:progressEventReducer:anonymous",
      "signature" : "",
      "fileName" : "lib\\adapters\\xhr.js",
      "lineNumber" : 21,
      "columnNumber" : 9,
      "usages" : [
        {
          "targetObj" : {
            "name" : "e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 21,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 21,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "_speedometer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:_speedometer",
            "lineNumber" : 25,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "_speedometer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:_speedometer",
            "lineNumber" : 25,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "progressBytes",
            "typeFullName" : "__ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "loaded - bytesNotified",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.subtraction",
            "lineNumber" : 24,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "_speedometer",
              "resolvedMethod" : "lib\\adapters\\xhr.js::program:_speedometer",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 25,
              "columnNumber" : 17
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.lessEqualsThan",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.lessEqualsThan",
            "lineNumber" : 150,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.lessEqualsThan",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.lessEqualsThan",
            "lineNumber" : 150,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.division",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.division",
            "lineNumber" : 11,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.division",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.division",
            "lineNumber" : 11,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "listener",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:listener",
            "lineNumber" : 42,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "listener",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\adapters\\xhr.js::program:listener",
            "lineNumber" : 42,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\axios.js::program",
      "signature" : "",
      "fileName" : "lib\\axios.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\axios.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "extend",
              "resolvedMethod" : "utils.js:utils:extend",
              "paramTypes" : [
                "(...args: ANY[]) => ANY",
                "ANY",
                "lib\\core\\Axios.js::program:Axios",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 32,
              "columnNumber" : 2
            },
            {
              "callName" : "extend",
              "resolvedMethod" : "utils.js:utils:extend",
              "paramTypes" : [
                "(...args: ANY[]) => ANY",
                "lib\\core\\Axios.js::program:Axios",
                "__ecma.Null",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 35,
              "columnNumber" : 2
            },
            {
              "callName" : "isHTMLForm",
              "resolvedMethod" : "utils.js:utils:isHTMLForm",
              "paramTypes" : [
                "{ [x: __ecma.String]: ANY; }"
              ],
              "returnType" : "ANY",
              "lineNumber" : 79,
              "columnNumber" : 43
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "defaults",
            "typeFullName" : "{ transitional: { silentJSONParsing: __ecma.Boolean; forcedJSONParsing: __ecma.Boolean; clarifyTimeoutError: __ecma.Boolean; }; adapter: __ecma.String[]; transformRequest: ((data: ANY, headers: ANY) => ANY)[]; transformResponse: ((data: ANY) => ANY)[]; timeout: __ecma.Number; xsrfCookieName: __ecma.String; xsrfHeaderName: __ecma.String; maxContentLength: __ecma.Number; maxBodyLength: __ecma.Number; env: { FormData: ANY; Blob: { new (blobParts?: BlobPart[], options?: BlobPropertyBag): Blob; prototype: Blob; }; }; validateStatus: (status: ANY) => __ecma.Boolean; headers: { common: { Accept: __ecma.String; }; }; }",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\axios.js::program:require",
            "lineNumber" : 7,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "createInstance",
              "resolvedMethod" : "lib\\axios.js::program:createInstance",
              "paramTypes" : [
                "{ transitional: { silentJSONParsing: __ecma.Boolean; forcedJSONParsing: __ecma.Boolean; clarifyTimeoutError: __ecma.Boolean; }; adapter: __ecma.String[]; transformRequest: ((data: ANY, headers: ANY) => ANY)[]; transformResponse: ((data: ANY) => ANY)[]; timeout: __ecma.Number; xsrfCookieName: __ecma.String; xsrfHeaderName: __ecma.String; maxContentLength: __ecma.Number; maxBodyLength: __ecma.Number; env: { FormData: ANY; Blob: { new (blobParts?: BlobPart[], options?: BlobPropertyBag): Blob; prototype: Blob; }; }; validateStatus: (status: ANY) => __ecma.Boolean; headers: { common: { Accept: __ecma.String; }; }; }"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 46,
              "columnNumber" : 14
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\axios.js::program:require",
            "lineNumber" : 18,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\axios.js::program:require",
            "lineNumber" : 18,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\axios.js::program:all",
      "signature" : "",
      "fileName" : "lib\\axios.js",
      "lineNumber" : 65,
      "columnNumber" : 12,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function all(promises) {\n  return Promise.all(promises);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 65,
            "columnNumber" : 12,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function all(promises) {\n  return Promise.all(promises);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 65,
            "columnNumber" : 12,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "promises",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 65,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "promises",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 65,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "all",
              "resolvedMethod" : "Promise.all",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 66,
              "columnNumber" : 9
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\axios.js::program:anonymous",
      "signature" : "",
      "fileName" : "lib\\axios.js",
      "lineNumber" : 79,
      "columnNumber" : 19,
      "usages" : [
        {
          "targetObj" : {
            "name" : "thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing)",
            "typeFullName" : "ANY",
            "lineNumber" : 79,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing)",
            "typeFullName" : "ANY",
            "lineNumber" : 79,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "thing",
            "typeFullName" : "{ [x: __ecma.String]: ANY; }",
            "position" : 1,
            "lineNumber" : 79,
            "columnNumber" : 19,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "thing",
            "typeFullName" : "{ [x: __ecma.String]: ANY; }",
            "position" : 1,
            "lineNumber" : 79,
            "columnNumber" : 19,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isHTMLForm",
              "resolvedMethod" : "utils.js:utils:isHTMLForm",
              "paramTypes" : [
                "{ [x: __ecma.String]: ANY; }"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 79,
              "columnNumber" : 43
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "isHTMLForm",
            "typeFullName" : "ANY",
            "resolvedMethod" : "utils.js:utils:isHTMLForm",
            "lineNumber" : 79,
            "columnNumber" : 43,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isHTMLForm",
            "typeFullName" : "ANY",
            "resolvedMethod" : "utils.js:utils:isHTMLForm",
            "lineNumber" : 79,
            "columnNumber" : 43,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\axios.js::program:createInstance",
      "signature" : "",
      "fileName" : "lib\\axios.js",
      "lineNumber" : 27,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "context",
            "typeFullName" : "lib\\core\\Axios.js::program:Axios",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new Axios",
            "typeFullName" : "lib\\core\\Axios.js::program:Axios",
            "resolvedMethod" : "lib\\core\\Axios.js::program:Axios",
            "lineNumber" : 28,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "Axios",
              "resolvedMethod" : "lib\\core\\Axios.js::program:Axios",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "lib\\core\\Axios.js::program:Axios",
              "position" : 1,
              "lineNumber" : 28,
              "columnNumber" : 8
            },
            {
              "callName" : "bind",
              "resolvedMethod" : "lib\\helpers\\bind.js::program:bind",
              "paramTypes" : [
                "ANY",
                "lib\\core\\Axios.js::program:Axios"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 29,
              "columnNumber" : 19
            },
            {
              "callName" : "extend",
              "resolvedMethod" : "utils.js:utils:extend",
              "paramTypes" : [
                "(...args: ANY[]) => ANY",
                "ANY",
                "lib\\core\\Axios.js::program:Axios",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 32,
              "columnNumber" : 2
            },
            {
              "callName" : "extend",
              "resolvedMethod" : "utils.js:utils:extend",
              "paramTypes" : [
                "(...args: ANY[]) => ANY",
                "lib\\core\\Axios.js::program:Axios",
                "__ecma.Null",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 35,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "defaultConfig",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 27,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "defaultConfig",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 27,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "mergeConfig",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 39,
              "columnNumber" : 26
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "instance",
            "typeFullName" : "(...args: ANY[]) => ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "bind",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\bind.js::program:bind",
            "lineNumber" : 29,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "extend",
              "resolvedMethod" : "utils.js:utils:extend",
              "paramTypes" : [
                "(...args: ANY[]) => ANY",
                "ANY",
                "lib\\core\\Axios.js::program:Axios",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 32,
              "columnNumber" : 2
            },
            {
              "callName" : "extend",
              "resolvedMethod" : "utils.js:utils:extend",
              "paramTypes" : [
                "(...args: ANY[]) => ANY",
                "lib\\core\\Axios.js::program:Axios",
                "__ecma.Null",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 35,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "extend",
            "typeFullName" : "ANY",
            "resolvedMethod" : "utils.js:utils:extend",
            "lineNumber" : 35,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "extend",
            "typeFullName" : "ANY",
            "resolvedMethod" : "utils.js:utils:extend",
            "lineNumber" : 35,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "createInstance",
            "typeFullName" : "Axios",
            "resolvedMethod" : "lib\\axios.js::program:createInstance",
            "lineNumber" : 46,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "createInstance",
            "typeFullName" : "Axios",
            "resolvedMethod" : "lib\\axios.js::program:createInstance",
            "lineNumber" : 46,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\axios.js::program:createInstance:create",
      "signature" : "",
      "fileName" : "lib\\axios.js",
      "lineNumber" : 38,
      "columnNumber" : 20,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 38,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 38,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "instanceConfig",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 38,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "instanceConfig",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 38,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "mergeConfig",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 39,
              "columnNumber" : 26
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\CancelToken.js::program",
      "signature" : "",
      "fileName" : "lib\\cancel\\CancelToken.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\CancelToken.js::program:CancelToken:<init>",
      "signature" : "",
      "fileName" : "lib\\cancel\\CancelToken.js",
      "lineNumber" : 13,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message...",
            "typeFullName" : "ANY",
            "lineNumber" : 13,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message...",
            "typeFullName" : "ANY",
            "lineNumber" : 13,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\CancelToken.js::program:CancelToken:<init>:anonymous",
      "signature" : "",
      "fileName" : "lib\\cancel\\CancelToken.js",
      "lineNumber" : 27,
      "columnNumber" : 22,
      "usages" : [
        {
          "targetObj" : {
            "name" : "cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 27,
            "columnNumber" : 22,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 27,
            "columnNumber" : 22,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "cancel",
            "typeFullName" : "void",
            "position" : 1,
            "lineNumber" : 27,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "cancel",
            "typeFullName" : "void",
            "position" : 1,
            "lineNumber" : 27,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "i",
              "resolvedMethod" : "token._listeners[i]",
              "paramTypes" : [
                "void"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 33,
              "columnNumber" : 8
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\CancelToken.js::program:CancelToken:<init>:anonymous1",
      "signature" : "",
      "fileName" : "lib\\cancel\\CancelToken.js",
      "lineNumber" : 39,
      "columnNumber" : 24,
      "usages" : [
        {
          "targetObj" : {
            "name" : "onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 39,
            "columnNumber" : 24,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 39,
            "columnNumber" : 24,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "onfulfilled",
            "typeFullName" : "(value: ANY) => TResult1 | PromiseLike<TResult1>",
            "position" : 1,
            "lineNumber" : 39,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "onfulfilled",
            "typeFullName" : "(value: ANY) => TResult1 | PromiseLike<TResult1>",
            "position" : 1,
            "lineNumber" : 39,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "Promise",
              "resolvedMethod" : "Promise",
              "paramTypes" : [
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 42,
              "columnNumber" : 22
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "promise",
            "typeFullName" : "Promise<TResult1>",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new Promise",
            "typeFullName" : "ANY",
            "resolvedMethod" : null,
            "lineNumber" : 42,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "Promise",
              "resolvedMethod" : "Promise",
              "paramTypes" : [
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 42,
              "columnNumber" : 12
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\CancelToken.js::program:CancelToken:<init>:anonymous1:anonymous",
      "signature" : "",
      "fileName" : "lib\\cancel\\CancelToken.js",
      "lineNumber" : 42,
      "columnNumber" : 34,
      "usages" : [
        {
          "targetObj" : {
            "name" : "resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 42,
            "columnNumber" : 34,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 42,
            "columnNumber" : 34,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "resolve",
            "typeFullName" : "(value: ANY) => void",
            "position" : 1,
            "lineNumber" : 42,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "resolve",
            "typeFullName" : "(value: ANY) => void",
            "position" : 1,
            "lineNumber" : 42,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "subscribe",
              "resolvedMethod" : "token.subscribe",
              "paramTypes" : [
                "(value: ANY) => void"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 43,
              "columnNumber" : 8
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\CancelToken.js::program:CancelToken:<init>:anonymous1:reject",
      "signature" : "",
      "fileName" : "lib\\cancel\\CancelToken.js",
      "lineNumber" : 47,
      "columnNumber" : 23,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function reject() {\n        token.unsubscribe(_resolve);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 47,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function reject() {\n        token.unsubscribe(_resolve);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 47,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\CancelToken.js::program:CancelToken:<init>:cancel",
      "signature" : "",
      "fileName" : "lib\\cancel\\CancelToken.js",
      "lineNumber" : 54,
      "columnNumber" : 13,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 54,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 54,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "resolvePromise",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:resolvePromise",
            "lineNumber" : 61,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "resolvePromise",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:resolvePromise",
            "lineNumber" : 61,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\CancelToken.js::program:CancelToken:<init>:promiseExecutor",
      "signature" : "",
      "fileName" : "lib\\cancel\\CancelToken.js",
      "lineNumber" : 20,
      "columnNumber" : 31,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 20,
            "columnNumber" : 31,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 20,
            "columnNumber" : 31,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\CancelToken.js::program:CancelToken:source",
      "signature" : "",
      "fileName" : "lib\\cancel\\CancelToken.js",
      "lineNumber" : 109,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 109,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 109,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "token",
            "typeFullName" : "lib\\cancel\\CancelToken.js::program:CancelToken",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new CancelToken",
            "typeFullName" : "lib\\cancel\\CancelToken.js::program:CancelToken",
            "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:CancelToken",
            "lineNumber" : 111,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "CancelToken",
              "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:CancelToken",
              "paramTypes" : [
                "LAMBDA"
              ],
              "returnType" : "lib\\cancel\\CancelToken.js::program:CancelToken",
              "position" : 1,
              "lineNumber" : 111,
              "columnNumber" : 10
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\CancelToken.js::program:CancelToken:source:executor",
      "signature" : "",
      "fileName" : "lib\\cancel\\CancelToken.js",
      "lineNumber" : 111,
      "columnNumber" : 34,
      "usages" : [
        {
          "targetObj" : {
            "name" : "executor",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:CancelToken:source:executor",
            "lineNumber" : 54,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "executor",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:CancelToken:source:executor",
            "lineNumber" : 54,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\CancelToken.js::program:CancelToken:subscribe",
      "signature" : "",
      "fileName" : "lib\\cancel\\CancelToken.js",
      "lineNumber" : 78,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "subscribe",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:CancelToken:subscribe",
            "lineNumber" : 236,
            "columnNumber" : 28,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "subscribe",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:CancelToken:subscribe",
            "lineNumber" : 236,
            "columnNumber" : 28,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "listener",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 78,
            "columnNumber" : 12,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "listener",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 78,
            "columnNumber" : 12,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "push",
              "resolvedMethod" : "this._listeners.push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 85,
              "columnNumber" : 6
            },
            {
              "callName" : "",
              "resolvedMethod" : "_tmp_8.push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 87,
              "columnNumber" : 25
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "listener",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:listener",
            "lineNumber" : 80,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "listener",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:listener",
            "lineNumber" : 80,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\CancelToken.js::program:CancelToken:throwIfRequested",
      "signature" : "",
      "fileName" : "lib\\cancel\\CancelToken.js",
      "lineNumber" : 68,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "throwIfRequested",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:CancelToken:throwIfRequested",
            "lineNumber" : 19,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "throwIfRequested",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:CancelToken:throwIfRequested",
            "lineNumber" : 19,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\CancelToken.js::program:CancelToken:unsubscribe",
      "signature" : "",
      "fileName" : "lib\\cancel\\CancelToken.js",
      "lineNumber" : 95,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "unsubscribe",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:CancelToken:unsubscribe",
            "lineNumber" : 56,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "unsubscribe",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:CancelToken:unsubscribe",
            "lineNumber" : 56,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "listener",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 95,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "listener",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 95,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "indexOf",
              "resolvedMethod" : "this._listeners.indexOf",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 99,
              "columnNumber" : 18
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "index",
            "typeFullName" : "__ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "this._listeners.indexOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "this._listeners.indexOf",
            "lineNumber" : 99,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "splice",
              "resolvedMethod" : "this._listeners.splice",
              "paramTypes" : [
                "__ecma.Number",
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 101,
              "columnNumber" : 6
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\CanceledError.js::program",
      "signature" : "",
      "fileName" : "lib\\cancel\\CanceledError.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CanceledError.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CanceledError.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "AxiosError",
            "typeFullName" : "lib\\core\\AxiosError.js::program:AxiosError",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CanceledError.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:call",
              "paramTypes" : [
                "lib\\cancel\\CanceledError.js::program",
                "ANY",
                "ANY",
                "ANY",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 17,
              "columnNumber" : 2
            }
          ],
          "argToCalls" : [
            {
              "callName" : "inherits",
              "resolvedMethod" : "../utils.js:utils:inherits",
              "paramTypes" : [
                "lib\\cancel\\CanceledError.js::program:CanceledError",
                "lib\\core\\AxiosError.js::program:AxiosError",
                "ANY",
                "LAMBDA",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 21,
              "columnNumber" : 0
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "inherits",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:inherits",
            "lineNumber" : 33,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "inherits",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:inherits",
            "lineNumber" : 33,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\CanceledError.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "inherits",
              "resolvedMethod" : "../utils.js:utils:inherits",
              "paramTypes" : [
                "lib\\cancel\\CanceledError.js::program:CanceledError",
                "lib\\core\\AxiosError.js::program:AxiosError",
                "ANY",
                "LAMBDA",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 21,
              "columnNumber" : 0
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\CanceledError.js::program:CanceledError",
      "signature" : "",
      "fileName" : "lib\\cancel\\CanceledError.js",
      "lineNumber" : 15,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 15,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 15,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "config",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 15,
            "columnNumber" : 32,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "config",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 15,
            "columnNumber" : 32,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:call",
              "paramTypes" : [
                "lib\\cancel\\CanceledError.js::program",
                "ANY",
                "ANY",
                "ANY",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 4,
              "lineNumber" : 17,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "request",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 15,
            "columnNumber" : 40,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "request",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 15,
            "columnNumber" : 40,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:call",
              "paramTypes" : [
                "lib\\cancel\\CanceledError.js::program",
                "ANY",
                "ANY",
                "ANY",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 5,
              "lineNumber" : 17,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\isCancel.js::program",
      "signature" : "",
      "fileName" : "lib\\cancel\\isCancel.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\cancel\\isCancel.js::program:isCancel",
      "signature" : "",
      "fileName" : "lib\\cancel\\isCancel.js",
      "lineNumber" : 3,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "isCancel",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\isCancel.js::program:isCancel",
            "lineNumber" : 65,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isCancel",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\cancel\\isCancel.js::program:isCancel",
            "lineNumber" : 65,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\Axios.js::program",
      "signature" : "",
      "fileName" : "lib\\core\\Axios.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\Axios.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "forEach",
              "resolvedMethod" : "../utils.js:utils:forEach",
              "paramTypes" : [
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 171,
              "columnNumber" : 0
            },
            {
              "callName" : "forEach",
              "resolvedMethod" : "../utils.js:utils:forEach",
              "paramTypes" : [
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 182,
              "columnNumber" : 0
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\Axios.js::program:require",
            "lineNumber" : 10,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\Axios.js::program:require",
            "lineNumber" : 10,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\Axios.js::program:Axios:<init>",
      "signature" : "",
      "fileName" : "lib\\core\\Axios.js",
      "lineNumber" : 22,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 22,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 22,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\Axios.js::program:Axios:getUri",
      "signature" : "",
      "fileName" : "lib\\core\\Axios.js",
      "lineNumber" : 163,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 163,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 163,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "config",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 163,
            "columnNumber" : 9,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "config",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 163,
            "columnNumber" : 9,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "mergeConfig",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig",
              "paramTypes" : [
                "ANY",
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 164,
              "columnNumber" : 13
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "fullPath",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "buildFullPath",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\core\\buildFullPath.js::program:buildFullPath",
            "lineNumber" : 165,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "buildURL",
              "resolvedMethod" : "lib\\helpers\\buildURL.js::program:buildURL",
              "paramTypes" : [
                "__ecma.String",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 166,
              "columnNumber" : 11
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\Axios.js::program:Axios:request",
      "signature" : "",
      "fileName" : "lib\\core\\Axios.js",
      "lineNumber" : 38,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "transitional",
            "typeFullName" : "__ecma.Boolean",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "_tmp_5.transitional",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 50,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "assertOptions",
              "resolvedMethod" : "../helpers/validator.js:validator:assertOptions",
              "paramTypes" : [
                "__ecma.Boolean",
                "ANY",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 53,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "paramsSerializer",
            "typeFullName" : "__ecma.Boolean",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "_tmp_5.paramsSerializer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 50,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isFunction",
              "resolvedMethod" : "../utils.js:utils:isFunction",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 61,
              "columnNumber" : 10
            },
            {
              "callName" : "assertOptions",
              "resolvedMethod" : "../helpers/validator.js:validator:assertOptions",
              "paramTypes" : [
                "__ecma.Boolean",
                "ANY",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 66,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "responseInterceptorChain",
            "typeFullName" : "__ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "__ecma.Array.factory",
            "typeFullName" : "__ecma.Array.factory",
            "resolvedMethod" : "__ecma.Array.factory",
            "lineNumber" : 106,
            "columnNumber" : 37,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "push",
              "resolvedMethod" : "__ecma.Number:push",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 108,
              "columnNumber" : 6
            }
          ],
          "argToCalls" : [
            {
              "callName" : "apply",
              "resolvedMethod" : "Function:apply",
              "paramTypes" : [
                "__ecma.Number",
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 118,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "requestInterceptorChain",
            "typeFullName" : "__ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "__ecma.Array.factory",
            "typeFullName" : "__ecma.Array.factory",
            "resolvedMethod" : "__ecma.Array.factory",
            "lineNumber" : 94,
            "columnNumber" : 36,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "unshift",
              "resolvedMethod" : "__ecma.Number:unshift",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 103,
              "columnNumber" : 6
            }
          ],
          "argToCalls" : [
            {
              "callName" : "apply",
              "resolvedMethod" : "Function:apply",
              "paramTypes" : [
                "__ecma.Number",
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 117,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(config: ANY) => Promise<any>:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(config: ANY) => Promise<any>:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "config",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 38,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "config",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 38,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "mergeConfig",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig",
              "paramTypes" : [
                "ANY",
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 48,
              "columnNumber" : 13
            },
            {
              "callName" : "runWhen",
              "resolvedMethod" : "__ecma.Boolean:runWhen",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 97,
              "columnNumber" : 55
            },
            {
              "callName" : "resolve",
              "resolvedMethod" : "Promise.resolve",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 121,
              "columnNumber" : 16
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "reject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Promise.reject",
            "lineNumber" : 79,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "reject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Promise.reject",
            "lineNumber" : 79,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "onRejected",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "requestInterceptorChain[i++]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 138,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "onRejected.call",
              "paramTypes" : [
                "lib\\core\\Axios.js::program:Axios",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 142,
              "columnNumber" : 8
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "bind",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(config: ANY) => Promise<any>:bind",
            "lineNumber" : 116,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "bind",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(config: ANY) => Promise<any>:bind",
            "lineNumber" : 116,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "request",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\Axios.js::program:Axios:request",
            "lineNumber" : 436,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "request",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\Axios.js::program:Axios:request",
            "lineNumber" : 436,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "assertOptions",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../helpers/validator.js:validator:assertOptions",
            "lineNumber" : 66,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "assertOptions",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../helpers/validator.js:validator:assertOptions",
            "lineNumber" : 66,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "headers",
            "typeFullName" : "headers",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "_tmp_5.headers",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 50,
            "columnNumber" : 43,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "concat",
              "resolvedMethod" : "AxiosHeaders.concat",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 91,
              "columnNumber" : 21
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "merge",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:merge",
            "lineNumber" : 163,
            "columnNumber" : 29,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "merge",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:merge",
            "lineNumber" : 163,
            "columnNumber" : 29,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "onFulfilled",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\Axios.js::program:onFulfilled",
            "lineNumber" : 140,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "onFulfilled",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\Axios.js::program:onFulfilled",
            "lineNumber" : 140,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "resolve",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Promise.resolve",
            "lineNumber" : 121,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "resolve",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Promise.resolve",
            "lineNumber" : 121,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "promise",
            "typeFullName" : "Promise<any>",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "promise.then",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Promise<any>:then",
            "lineNumber" : 157,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "then",
              "resolvedMethod" : "Promise<any>:then",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 124,
              "columnNumber" : 18
            },
            {
              "callName" : "then",
              "resolvedMethod" : "Promise<any>:then",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 157,
              "columnNumber" : 16
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "transitional",
            "typeFullName" : "ANY",
            "resolvedMethod" : "validators:transitional",
            "lineNumber" : 56,
            "columnNumber" : 29,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "transitional",
            "typeFullName" : "ANY",
            "resolvedMethod" : "validators:transitional",
            "lineNumber" : 56,
            "columnNumber" : 29,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "newConfig",
            "typeFullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "onFulfilled",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\Axios.js::program:onFulfilled",
            "lineNumber" : 140,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "onFulfilled",
              "resolvedMethod" : "lib\\core\\Axios.js::program:onFulfilled",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 140,
              "columnNumber" : 20
            },
            {
              "callName" : "call",
              "resolvedMethod" : "(config: ANY) => Promise<any>:call",
              "paramTypes" : [
                "lib\\core\\Axios.js::program:Axios",
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 148,
              "columnNumber" : 16
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "contextHeaders",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "headers && utils.merge",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.logicalAnd",
            "lineNumber" : 79,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "concat",
              "resolvedMethod" : "AxiosHeaders.concat",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 91,
              "columnNumber" : 21
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "then",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Promise<any>:then",
            "lineNumber" : 18,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "then",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Promise<any>:then",
            "lineNumber" : 18,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\Axios.js::program:Axios:request:anonymous",
      "signature" : "",
      "fileName" : "lib\\core\\Axios.js",
      "lineNumber" : 86,
      "columnNumber" : 6,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(method) => {\n        delete headers[method];\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 86,
            "columnNumber" : 6,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(method) => {\n        delete headers[method];\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 86,
            "columnNumber" : 6,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\Axios.js::program:Axios:request:pushResponseInterceptors",
      "signature" : "",
      "fileName" : "lib\\core\\Axios.js",
      "lineNumber" : 107,
      "columnNumber" : 39,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 107,
            "columnNumber" : 39,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 107,
            "columnNumber" : 39,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\Axios.js::program:Axios:request:unshiftRequestInterceptors",
      "signature" : "",
      "fileName" : "lib\\core\\Axios.js",
      "lineNumber" : 96,
      "columnNumber" : 38,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 96,
            "columnNumber" : 38,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 96,
            "columnNumber" : 38,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "interceptor",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 96,
            "columnNumber" : 74,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "interceptor",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 96,
            "columnNumber" : 74,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "runWhen",
              "resolvedMethod" : "__ecma.Boolean:runWhen",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "lineNumber" : 97,
              "columnNumber" : 55
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "runWhen",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:runWhen",
            "lineNumber" : 97,
            "columnNumber" : 55,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "runWhen",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:runWhen",
            "lineNumber" : 97,
            "columnNumber" : 55,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "unshift",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Number:unshift",
            "lineNumber" : 103,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "unshift",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Number:unshift",
            "lineNumber" : 103,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\Axios.js::program:forEachMethodNoData",
      "signature" : "",
      "fileName" : "lib\\core\\Axios.js",
      "lineNumber" : 171,
      "columnNumber" : 52,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 171,
            "columnNumber" : 52,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 171,
            "columnNumber" : 52,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\Axios.js::program:forEachMethodNoData:anonymous",
      "signature" : "",
      "fileName" : "lib\\core\\Axios.js",
      "lineNumber" : 173,
      "columnNumber" : 28,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 173,
            "columnNumber" : 28,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 173,
            "columnNumber" : 28,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\Axios.js::program:forEachMethodWithData",
      "signature" : "",
      "fileName" : "lib\\core\\Axios.js",
      "lineNumber" : 182,
      "columnNumber" : 40,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 182,
            "columnNumber" : 40,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 182,
            "columnNumber" : 40,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\Axios.js::program:forEachMethodWithData:generateHTTPMethod",
      "signature" : "",
      "fileName" : "lib\\core\\Axios.js",
      "lineNumber" : 185,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "generateHTTPMethod",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\Axios.js::program:forEachMethodWithData:generateHTTPMethod",
            "lineNumber" : 200,
            "columnNumber" : 37,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "generateHTTPMethod",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\Axios.js::program:forEachMethodWithData:generateHTTPMethod",
            "lineNumber" : 200,
            "columnNumber" : 37,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\Axios.js::program:forEachMethodWithData:generateHTTPMethod:httpMethod",
      "signature" : "",
      "fileName" : "lib\\core\\Axios.js",
      "lineNumber" : 186,
      "columnNumber" : 11,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 186,
            "columnNumber" : 11,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 186,
            "columnNumber" : 11,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosError.js::program",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosError.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "defineProperties",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.defineProperties",
            "lineNumber" : 548,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "defineProperties",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.defineProperties",
            "lineNumber" : 548,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosError.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "inherits",
              "resolvedMethod" : "../utils.js:utils:inherits",
              "paramTypes" : [
                "lib\\core\\AxiosError.js::program:AxiosError",
                "ErrorConstructor",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 33,
              "columnNumber" : 0
            },
            {
              "callName" : "toJSONObject",
              "resolvedMethod" : "../utils.js:utils:toJSONObject",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 48,
              "columnNumber" : 14
            },
            {
              "callName" : "toFlatObject",
              "resolvedMethod" : "../utils.js:utils:toFlatObject",
              "paramTypes" : [
                "ANY",
                "ANY",
                "LAMBDA",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 83,
              "columnNumber" : 2
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosError.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosError.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "prototype",
            "typeFullName" : "lib\\core\\AxiosError.js::program:AxiosError",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "AxiosError.prototype",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 55,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "defineProperty",
              "resolvedMethod" : "Object.defineProperty",
              "paramTypes" : [
                "ANY",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 77,
              "columnNumber" : 0
            },
            {
              "callName" : "create",
              "resolvedMethod" : "Object.create",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 81,
              "columnNumber" : 21
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosError.js::program:AxiosError",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosError.js",
      "lineNumber" : 16,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 16,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 16,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "ErrorConstructor:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "ErrorConstructor:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "captureStackTrace",
            "typeFullName" : "ANY",
            "resolvedMethod" : "ErrorConstructor:captureStackTrace",
            "lineNumber" : 20,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "captureStackTrace",
            "typeFullName" : "ANY",
            "resolvedMethod" : "ErrorConstructor:captureStackTrace",
            "lineNumber" : 20,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosError.js::program:anonymous",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosError.js",
      "lineNumber" : 72,
      "columnNumber" : 10,
      "usages" : [
        {
          "targetObj" : {
            "name" : "code => {\n  descriptors[code] = {value: code};\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 72,
            "columnNumber" : 10,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "code => {\n  descriptors[code] = {value: code};\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 72,
            "columnNumber" : 10,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosError.js::program:anonymous1",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosError.js",
      "lineNumber" : 80,
      "columnNumber" : 18,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 80,
            "columnNumber" : 18,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 80,
            "columnNumber" : 18,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "create",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.create",
            "lineNumber" : 13,
            "columnNumber" : 3,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "create",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.create",
            "lineNumber" : 13,
            "columnNumber" : 3,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "toFlatObject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:toFlatObject",
            "lineNumber" : 59,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toFlatObject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:toFlatObject",
            "lineNumber" : 59,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "customProps",
            "typeFullName" : "ANY",
            "position" : 6,
            "lineNumber" : 80,
            "columnNumber" : 59,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "customProps",
            "typeFullName" : "ANY",
            "position" : 6,
            "lineNumber" : 80,
            "columnNumber" : 59,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "assign",
              "resolvedMethod" : "Object.assign",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 95,
              "columnNumber" : 17
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "config",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 80,
            "columnNumber" : 32,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "config",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 80,
            "columnNumber" : 32,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:call",
              "paramTypes" : [
                "ANY",
                "ANY",
                "__ecma.String",
                "ANY",
                "ANY",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 4,
              "lineNumber" : 89,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "response",
            "typeFullName" : "ANY",
            "position" : 5,
            "lineNumber" : 80,
            "columnNumber" : 49,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "response",
            "typeFullName" : "ANY",
            "position" : 5,
            "lineNumber" : 80,
            "columnNumber" : 49,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:call",
              "paramTypes" : [
                "ANY",
                "ANY",
                "__ecma.String",
                "ANY",
                "ANY",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 6,
              "lineNumber" : 89,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "code",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 80,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "code",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 80,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:call",
              "paramTypes" : [
                "ANY",
                "ANY",
                "__ecma.String",
                "ANY",
                "ANY",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 89,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "request",
            "typeFullName" : "ANY",
            "position" : 4,
            "lineNumber" : 80,
            "columnNumber" : 40,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "request",
            "typeFullName" : "ANY",
            "position" : 4,
            "lineNumber" : 80,
            "columnNumber" : 40,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:call",
              "paramTypes" : [
                "ANY",
                "ANY",
                "__ecma.String",
                "ANY",
                "ANY",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 5,
              "lineNumber" : 89,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "error",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 80,
            "columnNumber" : 19,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "error",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 80,
            "columnNumber" : 19,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "toFlatObject",
              "resolvedMethod" : "../utils.js:utils:toFlatObject",
              "paramTypes" : [
                "ANY",
                "ANY",
                "LAMBDA",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 83,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "axiosError",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "Object.create",
            "typeFullName" : "Object.create",
            "resolvedMethod" : "Object.create",
            "lineNumber" : 81,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "toFlatObject",
              "resolvedMethod" : "../utils.js:utils:toFlatObject",
              "paramTypes" : [
                "ANY",
                "ANY",
                "LAMBDA",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 83,
              "columnNumber" : 2
            },
            {
              "callName" : "call",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:call",
              "paramTypes" : [
                "ANY",
                "ANY",
                "__ecma.String",
                "ANY",
                "ANY",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 89,
              "columnNumber" : 2
            },
            {
              "callName" : "assign",
              "resolvedMethod" : "Object.assign",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 95,
              "columnNumber" : 17
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosError.js::program:anonymous1:anonymous",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosError.js",
      "lineNumber" : 85,
      "columnNumber" : 5,
      "usages" : [
        {
          "targetObj" : {
            "name" : "prop => {\n    return prop !== 'isAxiosError';\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 85,
            "columnNumber" : 5,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "prop => {\n    return prop !== 'isAxiosError';\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 85,
            "columnNumber" : 5,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosError.js::program:anonymous1:filter",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosError.js",
      "lineNumber" : 83,
      "columnNumber" : 40,
      "usages" : [
        {
          "targetObj" : {
            "name" : "filter",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosError.js::program:anonymous1:filter",
            "lineNumber" : 58,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "filter",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosError.js::program:anonymous1:filter",
            "lineNumber" : 58,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosError.js::program:toJSON",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosError.js",
      "lineNumber" : 34,
      "columnNumber" : 10,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 34,
            "columnNumber" : 10,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 34,
            "columnNumber" : 10,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "toJSONObject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:toJSONObject",
            "lineNumber" : 48,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toJSONObject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:toJSONObject",
            "lineNumber" : 48,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 17,
              "columnNumber" : 9
            },
            {
              "callName" : "isFunction",
              "resolvedMethod" : "../utils.js:utils:isFunction",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 35,
              "columnNumber" : 6
            },
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 43,
              "columnNumber" : 7
            },
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 45,
              "columnNumber" : 6
            },
            {
              "callName" : "isRegExp",
              "resolvedMethod" : "../utils.js:utils:isRegExp",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 49,
              "columnNumber" : 6
            },
            {
              "callName" : "toCamelCase",
              "resolvedMethod" : "../utils.js:utils:toCamelCase",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 62,
              "columnNumber" : 23
            },
            {
              "callName" : "freezeMethods",
              "resolvedMethod" : "../utils.js:utils:freezeMethods",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 285,
              "columnNumber" : 0
            },
            {
              "callName" : "freezeMethods",
              "resolvedMethod" : "../utils.js:utils:freezeMethods",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "lineNumber" : 286,
              "columnNumber" : 0
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "Symbol",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Symbol",
            "lineNumber" : 8,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "Symbol",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Symbol",
            "lineNumber" : 8,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "freezeMethods",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:freezeMethods",
            "lineNumber" : 286,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "freezeMethods",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:freezeMethods",
            "lineNumber" : 286,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:<init>",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 75,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "constructor(headers) {\n    headers && this.set(headers);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 75,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "constructor(headers) {\n    headers && this.set(headers);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 75,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "headers",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 75,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "headers",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 75,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "set",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set",
              "paramTypes" : [
                "object"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 76,
              "columnNumber" : 15
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:Symbol.iterator",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 236,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "Symbol.iterator",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:Symbol.iterator",
            "lineNumber" : 237,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "Symbol.iterator",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:Symbol.iterator",
            "lineNumber" : 237,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:Symbol.toStringTag",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 244,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 244,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 244,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:accessor",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 260,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "accessor",
            "typeFullName" : "AxiosHeaders",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:accessor",
            "lineNumber" : 283,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "accessor",
            "typeFullName" : "AxiosHeaders",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:accessor",
            "lineNumber" : 283,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 260,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 260,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "forEach",
              "resolvedMethod" : "__ecma.String:forEach",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:accessor:defineAccessor",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 277,
              "columnNumber" : 28
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 277,
              "columnNumber" : 4
            },
            {
              "callName" : "defineAccessor",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:accessor:defineAccessor",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 277,
              "columnNumber" : 61
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "prototype",
            "typeFullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "this.prototype",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 266,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "buildAccessors",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:buildAccessors",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 272,
              "columnNumber" : 8
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:accessor:defineAccessor",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 268,
      "columnNumber" : 4,
      "usages" : [
        {
          "targetObj" : {
            "name" : "defineAccessor",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:accessor:defineAccessor",
            "lineNumber" : 277,
            "columnNumber" : 61,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "defineAccessor",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:accessor:defineAccessor",
            "lineNumber" : 277,
            "columnNumber" : 61,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "_header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 268,
            "columnNumber" : 28,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "_header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 268,
            "columnNumber" : 28,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "normalizeHeader",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:normalizeHeader",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 269,
              "columnNumber" : 22
            },
            {
              "callName" : "buildAccessors",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:buildAccessors",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 272,
              "columnNumber" : 8
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:clear",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 179,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 179,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 179,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "matcher",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 179,
            "columnNumber" : 8,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "matcher",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 179,
            "columnNumber" : 8,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "matchHeaderValue",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:matchHeaderValue",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "ANY",
                "__ecma.String",
                "ANY",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 4,
              "lineNumber" : 186,
              "columnNumber" : 21
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "key",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "keys[i]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 185,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "matchHeaderValue",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:matchHeaderValue",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "ANY",
                "__ecma.String",
                "ANY",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 186,
              "columnNumber" : 21
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:concat",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 222,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "concat",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:concat",
            "lineNumber" : 223,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "concat",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:concat",
            "lineNumber" : 223,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:concat1",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 252,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 252,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 252,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "computed",
            "typeFullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new this",
            "typeFullName" : "this",
            "resolvedMethod" : "this",
            "lineNumber" : 253,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "set",
              "resolvedMethod" : "computed.set",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 255,
              "columnNumber" : 32
            }
          ],
          "argToCalls" : [
            {
              "callName" : "this",
              "resolvedMethod" : "this",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "this",
              "position" : 1,
              "lineNumber" : 253,
              "columnNumber" : 10
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(callbackfn: (value: ANY, index: __ecma.Number, array: ANY[]) => void, thisArg?: ANY) => void:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(callbackfn: (value: ANY, index: __ecma.Number, array: ANY[]) => void, thisArg?: ANY) => void:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:concat1:anonymous",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 255,
      "columnNumber" : 20,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(target) => computed.set(target)",
            "typeFullName" : "ANY",
            "lineNumber" : 255,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(target) => computed.set(target)",
            "typeFullName" : "ANY",
            "lineNumber" : 255,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "target",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 255,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "target",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 255,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "set",
              "resolvedMethod" : "computed.set",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 255,
              "columnNumber" : 32
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:delete",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 152,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "delete",
            "typeFullName" : "(header: ANY, matcher: ANY) => __ecma.Boolean",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:delete",
            "lineNumber" : 363,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "delete",
            "typeFullName" : "(header: ANY, matcher: ANY) => __ecma.Boolean",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:delete",
            "lineNumber" : 363,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 152,
            "columnNumber" : 9,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 152,
            "columnNumber" : 9,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "forEach",
              "resolvedMethod" : "__ecma.String:forEach",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:delete:deleteHeader",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 171,
              "columnNumber" : 6
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 170,
              "columnNumber" : 8
            },
            {
              "callName" : "deleteHeader",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:delete:deleteHeader",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 173,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "matcher",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 152,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "matcher",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 152,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "matchHeaderValue",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:matchHeaderValue",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program",
                "ANY",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 4,
              "lineNumber" : 162,
              "columnNumber" : 32
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:delete:deleteHeader",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 156,
      "columnNumber" : 4,
      "usages" : [
        {
          "targetObj" : {
            "name" : "deleteHeader",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:delete:deleteHeader",
            "lineNumber" : 173,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "deleteHeader",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:delete:deleteHeader",
            "lineNumber" : 173,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "_header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 156,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "_header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 156,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "normalizeHeader",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:normalizeHeader",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 157,
              "columnNumber" : 16
            },
            {
              "callName" : "findKey",
              "resolvedMethod" : "../utils.js:utils:findKey",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 160,
              "columnNumber" : 20
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "key",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "utils.findKey",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:findKey",
            "lineNumber" : 160,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "matchHeaderValue",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:matchHeaderValue",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program",
                "ANY",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 162,
              "columnNumber" : 32
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:from",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 248,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:from",
            "lineNumber" : 334,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:from",
            "lineNumber" : 334,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:get",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 110,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 110,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 110,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 110,
            "columnNumber" : 6,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 110,
            "columnNumber" : 6,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "normalizeHeader",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:normalizeHeader",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 111,
              "columnNumber" : 13
            },
            {
              "callName" : "findKey",
              "resolvedMethod" : "../utils.js:utils:findKey",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 114,
              "columnNumber" : 18
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "exec",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:exec",
            "lineNumber" : 132,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "exec",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:exec",
            "lineNumber" : 132,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "parser",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 110,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "parser",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 110,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "__ecma.Boolean:call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 128,
              "columnNumber" : 17
            },
            {
              "callName" : "exec",
              "resolvedMethod" : "__ecma.Boolean:exec",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 132,
              "columnNumber" : 17
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isFunction",
              "resolvedMethod" : "../utils.js:utils:isFunction",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 127,
              "columnNumber" : 12
            },
            {
              "callName" : "isRegExp",
              "resolvedMethod" : "../utils.js:utils:isRegExp",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 131,
              "columnNumber" : 12
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "(separator?: __ecma.String) => __ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "this[key]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 117,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "parseTokens",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:parseTokens",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 124,
              "columnNumber" : 17
            },
            {
              "callName" : "call",
              "resolvedMethod" : "__ecma.Boolean:call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 128,
              "columnNumber" : 17
            },
            {
              "callName" : "exec",
              "resolvedMethod" : "__ecma.Boolean:exec",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 132,
              "columnNumber" : 17
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "key",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "utils.findKey",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:findKey",
            "lineNumber" : 114,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "__ecma.Boolean:call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 128,
              "columnNumber" : 17
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:has",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 140,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 140,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 140,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 140,
            "columnNumber" : 6,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 140,
            "columnNumber" : 6,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "normalizeHeader",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:normalizeHeader",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 141,
              "columnNumber" : 13
            },
            {
              "callName" : "findKey",
              "resolvedMethod" : "../utils.js:utils:findKey",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 144,
              "columnNumber" : 18
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "matcher",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 140,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "matcher",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 140,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "matchHeaderValue",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:matchHeaderValue",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "ANY",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 4,
              "lineNumber" : 146,
              "columnNumber" : 63
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "key",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "utils.findKey",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:findKey",
            "lineNumber" : 144,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "matchHeaderValue",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:matchHeaderValue",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "ANY",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 146,
              "columnNumber" : 63
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:normalize",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 195,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "normalize",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:normalize",
            "lineNumber" : 51,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "normalize",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:normalize",
            "lineNumber" : 51,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:normalize:anonymous",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 199,
      "columnNumber" : 24,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 199,
            "columnNumber" : 24,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 199,
            "columnNumber" : 24,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 199,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 199,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "normalizeValue",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:normalizeValue",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 203,
              "columnNumber" : 20
            },
            {
              "callName" : "normalizeValue",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:normalizeValue",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 214,
              "columnNumber" : 25
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 199,
            "columnNumber" : 32,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 199,
            "columnNumber" : 32,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "findKey",
              "resolvedMethod" : "../utils.js:utils:findKey",
              "paramTypes" : [
                "object",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 200,
              "columnNumber" : 18
            },
            {
              "callName" : "formatHeader",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:formatHeader",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 208,
              "columnNumber" : 34
            },
            {
              "callName" : "String",
              "resolvedMethod" : "String",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 208,
              "columnNumber" : 57
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 79,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "rewrite",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 79,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "rewrite",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 79,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "setHeader",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:setHeader",
              "paramTypes" : [
                "ANY",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 104,
              "columnNumber" : 24
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "set",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set",
            "lineNumber" : 139,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "set",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set",
            "lineNumber" : 139,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "valueOrRewrite",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 79,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "valueOrRewrite",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 79,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "setHeaders",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:setHeaders",
              "paramTypes" : [
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 100,
              "columnNumber" : 6
            },
            {
              "callName" : "setHeaders",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:setHeaders",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 102,
              "columnNumber" : 6
            },
            {
              "callName" : "setHeader",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:setHeader",
              "paramTypes" : [
                "ANY",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 104,
              "columnNumber" : 24
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "parseHeaders",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../helpers/parseHeaders.js:parseHeaders",
            "lineNumber" : 102,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "parseHeaders",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../helpers/parseHeaders.js:parseHeaders",
            "lineNumber" : 102,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 79,
            "columnNumber" : 6,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 79,
            "columnNumber" : 6,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "trim",
              "resolvedMethod" : "__ecma.String:trim",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 101,
              "columnNumber" : 50
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isPlainObject",
              "resolvedMethod" : "../utils.js:utils:isPlainObject",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 99,
              "columnNumber" : 8
            },
            {
              "callName" : "setHeaders",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:setHeaders",
              "paramTypes" : [
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 100,
              "columnNumber" : 6
            },
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 101,
              "columnNumber" : 14
            },
            {
              "callName" : "isValidHeaderName",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:isValidHeaderName",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 101,
              "columnNumber" : 69
            },
            {
              "callName" : "parseHeaders",
              "resolvedMethod" : "../helpers/parseHeaders.js:parseHeaders",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 102,
              "columnNumber" : 17
            },
            {
              "callName" : "setHeader",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:setHeader",
              "paramTypes" : [
                "ANY",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 104,
              "columnNumber" : 24
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "isPlainObject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isPlainObject",
            "lineNumber" : 16,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isPlainObject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isPlainObject",
            "lineNumber" : 16,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:anonymous:anonymous",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 97,
      "columnNumber" : 29,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(_value, _header) => setHeader(_value, _header, _rewrite)",
            "typeFullName" : "ANY",
            "lineNumber" : 97,
            "columnNumber" : 29,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(_value, _header) => setHeader(_value, _header, _rewrite)",
            "typeFullName" : "ANY",
            "lineNumber" : 97,
            "columnNumber" : 29,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "_value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 97,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "_value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 97,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "setHeader",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:setHeader",
              "paramTypes" : [
                "ANY",
                "__ecma.String",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 97,
              "columnNumber" : 50
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "_header",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 97,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "_header",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 97,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "setHeader",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:setHeader",
              "paramTypes" : [
                "ANY",
                "__ecma.String",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 97,
              "columnNumber" : 50
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:setHeader",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 82,
      "columnNumber" : 4,
      "usages" : [
        {
          "targetObj" : {
            "name" : "lHeader",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "normalizeHeader",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:normalizeHeader",
            "lineNumber" : 83,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "findKey",
              "resolvedMethod" : "../utils.js:utils:findKey",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 89,
              "columnNumber" : 18
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "setHeader",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:setHeader",
            "lineNumber" : 104,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "setHeader",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:setHeader",
            "lineNumber" : 104,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "findKey",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:findKey",
            "lineNumber" : 200,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "findKey",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:findKey",
            "lineNumber" : 200,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "_value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 82,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "_value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 82,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "normalizeValue",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:normalizeValue",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 92,
              "columnNumber" : 31
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "_header",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 82,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "_header",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 82,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "normalizeHeader",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:normalizeHeader",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 83,
              "columnNumber" : 22
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:setHeaders",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 96,
      "columnNumber" : 23,
      "usages" : [
        {
          "targetObj" : {
            "name" : "setHeaders",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:setHeaders",
            "lineNumber" : 102,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "setHeaders",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:setHeaders",
            "lineNumber" : 102,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "headers",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 96,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "headers",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 96,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "forEach",
              "resolvedMethod" : "../utils.js:utils:forEach",
              "paramTypes" : [
                "object",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 97,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "_rewrite",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 96,
            "columnNumber" : 33,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "_rewrite",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 96,
            "columnNumber" : 33,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "setHeader",
              "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set:setHeader",
              "paramTypes" : [
                "ANY",
                "__ecma.String",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 97,
              "columnNumber" : 50
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:toJSON",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 226,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "toJSON",
            "typeFullName" : "(asStrings: ANY) => ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:toJSON",
            "lineNumber" : 6,
            "columnNumber" : 67,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toJSON",
            "typeFullName" : "(asStrings: ANY) => ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:toJSON",
            "lineNumber" : 6,
            "columnNumber" : 67,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:toJSON:anonymous",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 229,
      "columnNumber" : 24,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 229,
            "columnNumber" : 24,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 229,
            "columnNumber" : 24,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 229,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 229,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "join",
              "resolvedMethod" : "value.join",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 230,
              "columnNumber" : 93
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 230,
              "columnNumber" : 70
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "join",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(separator?: __ecma.String) => __ecma.String:join",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "join",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(separator?: __ecma.String) => __ecma.String:join",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "join",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:join",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "join",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:join",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:toString",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 240,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "toString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:toString",
            "lineNumber" : 11,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:toString",
            "lineNumber" : 11,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:toString:anonymous",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 241,
      "columnNumber" : 45,
      "usages" : [
        {
          "targetObj" : {
            "name" : "([header, value]) => header + ': ' + value",
            "typeFullName" : "ANY",
            "lineNumber" : 241,
            "columnNumber" : 45,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "([header, value]) => header + ': ' + value",
            "typeFullName" : "ANY",
            "lineNumber" : 241,
            "columnNumber" : 45,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:buildAccessors",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 61,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "buildAccessors",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:buildAccessors",
            "lineNumber" : 272,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "buildAccessors",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:buildAccessors",
            "lineNumber" : 272,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 61,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 61,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "defineProperty",
              "resolvedMethod" : "Object.defineProperty",
              "paramTypes" : [
                "ANY",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 65,
              "columnNumber" : 4
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 61,
            "columnNumber" : 29,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 61,
            "columnNumber" : 29,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "this[methodName].call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program",
                "__ecma.String",
                "ANY",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 67,
              "columnNumber" : 15
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "toCamelCase",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:toCamelCase",
            "lineNumber" : 62,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toCamelCase",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:toCamelCase",
            "lineNumber" : 62,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:buildAccessors:anonymous",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 64,
      "columnNumber" : 32,
      "usages" : [
        {
          "targetObj" : {
            "name" : "methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 64,
            "columnNumber" : 32,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 64,
            "columnNumber" : 32,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:buildAccessors:anonymous:anonymous",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 66,
      "columnNumber" : 13,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 66,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 66,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "arg1",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 66,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "arg1",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 66,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "this[methodName].call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program",
                "__ecma.String",
                "ANY",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 67,
              "columnNumber" : 15
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "arg2",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 66,
            "columnNumber" : 28,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "arg2",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 66,
            "columnNumber" : 28,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "this[methodName].call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program",
                "__ecma.String",
                "ANY",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 4,
              "lineNumber" : 67,
              "columnNumber" : 15
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "arg3",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 66,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "arg3",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 66,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "this[methodName].call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program",
                "__ecma.String",
                "ANY",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 5,
              "lineNumber" : 67,
              "columnNumber" : 15
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:formatHeader",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 54,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "formatHeader",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:formatHeader",
            "lineNumber" : 208,
            "columnNumber" : 34,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "formatHeader",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:formatHeader",
            "lineNumber" : 208,
            "columnNumber" : 34,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 54,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 54,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "trim",
              "resolvedMethod" : "__ecma.String:trim",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 55,
              "columnNumber" : 9
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "trim",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:trim",
            "lineNumber" : 37,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "trim",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:trim",
            "lineNumber" : 37,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:formatHeader:anonymous",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 56,
      "columnNumber" : 46,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(w, char, str) => {\n      return char.toUpperCase() + str;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 56,
            "columnNumber" : 46,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(w, char, str) => {\n      return char.toUpperCase() + str;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 56,
            "columnNumber" : 46,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "char",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 56,
            "columnNumber" : 50,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "char",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 56,
            "columnNumber" : 50,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "toUpperCase",
              "resolvedMethod" : "__ecma.String:toUpperCase",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 57,
              "columnNumber" : 13
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:isValidHeaderName",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 32,
      "columnNumber" : 26,
      "usages" : [
        {
          "targetObj" : {
            "name" : "isValidHeaderName",
            "typeFullName" : "__ecma.Boolean",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:isValidHeaderName",
            "lineNumber" : 101,
            "columnNumber" : 69,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isValidHeaderName",
            "typeFullName" : "__ecma.Boolean",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:isValidHeaderName",
            "lineNumber" : 101,
            "columnNumber" : 69,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "str",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 32,
            "columnNumber" : 27,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "str",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 32,
            "columnNumber" : 27,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "trim",
              "resolvedMethod" : "str.trim",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 32,
              "columnNumber" : 73
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:matchHeaderValue",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 34,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "matchHeaderValue",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:matchHeaderValue",
            "lineNumber" : 186,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "matchHeaderValue",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:matchHeaderValue",
            "lineNumber" : 186,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "indexOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(separator?: __ecma.String) => __ecma.String:indexOf",
            "lineNumber" : 559,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "indexOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(separator?: __ecma.String) => __ecma.String:indexOf",
            "lineNumber" : 559,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "indexOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:indexOf",
            "lineNumber" : 559,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "indexOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:indexOf",
            "lineNumber" : 559,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isRegExp",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isRegExp",
            "lineNumber" : 131,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isRegExp",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isRegExp",
            "lineNumber" : 131,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 34,
            "columnNumber" : 35,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 34,
            "columnNumber" : 35,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "indexOf",
              "resolvedMethod" : "value.indexOf",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 46,
              "columnNumber" : 11
            }
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "filter.call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program",
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 36,
              "columnNumber" : 11
            },
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 43,
              "columnNumber" : 7
            },
            {
              "callName" : "test",
              "resolvedMethod" : "filter.test",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 50,
              "columnNumber" : 11
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "filter",
            "typeFullName" : "ANY",
            "position" : 4,
            "lineNumber" : 34,
            "columnNumber" : 50,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "filter",
            "typeFullName" : "ANY",
            "position" : 4,
            "lineNumber" : 34,
            "columnNumber" : 50,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "filter.call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program",
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 36,
              "columnNumber" : 11
            },
            {
              "callName" : "test",
              "resolvedMethod" : "filter.test",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 50,
              "columnNumber" : 11
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isFunction",
              "resolvedMethod" : "../utils.js:utils:isFunction",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 35,
              "columnNumber" : 6
            },
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 45,
              "columnNumber" : 6
            },
            {
              "callName" : "indexOf",
              "resolvedMethod" : "value.indexOf",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 46,
              "columnNumber" : 11
            },
            {
              "callName" : "isRegExp",
              "resolvedMethod" : "../utils.js:utils:isRegExp",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 49,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 34,
            "columnNumber" : 42,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 34,
            "columnNumber" : 42,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "filter.call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program",
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 36,
              "columnNumber" : 11
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:normalizeHeader",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 8,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "normalizeHeader",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:normalizeHeader",
            "lineNumber" : 269,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "normalizeHeader",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:normalizeHeader",
            "lineNumber" : 269,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 8,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "header",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 8,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "String",
              "resolvedMethod" : "String",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 9,
              "columnNumber" : 19
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:normalizeValue",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 12,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "normalizeValue",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:normalizeValue",
            "lineNumber" : 214,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "normalizeValue",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:normalizeValue",
            "lineNumber" : 214,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 12,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 12,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "map",
              "resolvedMethod" : "value.map",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:normalizeValue",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 17,
              "columnNumber" : 32
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 17,
              "columnNumber" : 9
            },
            {
              "callName" : "String",
              "resolvedMethod" : "String",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 17,
              "columnNumber" : 60
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "map",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(separator?: __ecma.String) => __ecma.String:map",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "map",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(separator?: __ecma.String) => __ecma.String:map",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "map",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:map",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "map",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:map",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\AxiosHeaders.js::program:parseTokens",
      "signature" : "",
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 20,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "parseTokens",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:parseTokens",
            "lineNumber" : 124,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "parseTokens",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:parseTokens",
            "lineNumber" : 124,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "str",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 20,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "str",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 20,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "exec",
              "resolvedMethod" : "tokensRE.exec",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 25,
              "columnNumber" : 18
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\InterceptorManager.js::program",
      "signature" : "",
      "fileName" : "lib\\core\\InterceptorManager.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\InterceptorManager.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\InterceptorManager.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\InterceptorManager.js::program:InterceptorManager:<init>",
      "signature" : "",
      "fileName" : "lib\\core\\InterceptorManager.js",
      "lineNumber" : 6,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "constructor() {\n    this.handlers = [];\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 6,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "constructor() {\n    this.handlers = [];\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 6,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\InterceptorManager.js::program:InterceptorManager:clear",
      "signature" : "",
      "fileName" : "lib\\core\\InterceptorManager.js",
      "lineNumber" : 46,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 46,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 46,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\InterceptorManager.js::program:InterceptorManager:eject",
      "signature" : "",
      "fileName" : "lib\\core\\InterceptorManager.js",
      "lineNumber" : 35,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 35,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 35,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\InterceptorManager.js::program:InterceptorManager:forEach",
      "signature" : "",
      "fileName" : "lib\\core\\InterceptorManager.js",
      "lineNumber" : 62,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\InterceptorManager.js::program:InterceptorManager:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\InterceptorManager.js::program:InterceptorManager:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\InterceptorManager.js::program:InterceptorManager:forEach:forEachHandler",
      "signature" : "",
      "fileName" : "lib\\core\\InterceptorManager.js",
      "lineNumber" : 63,
      "columnNumber" : 33,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 63,
            "columnNumber" : 33,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 63,
            "columnNumber" : 33,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "h",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 63,
            "columnNumber" : 57,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "h",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 63,
            "columnNumber" : 57,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "fn",
              "resolvedMethod" : "lib\\core\\InterceptorManager.js::program:fn",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 65,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "fn",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\InterceptorManager.js::program:fn",
            "lineNumber" : 65,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "fn",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\InterceptorManager.js::program:fn",
            "lineNumber" : 65,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\InterceptorManager.js::program:InterceptorManager:use",
      "signature" : "",
      "fileName" : "lib\\core\\InterceptorManager.js",
      "lineNumber" : 18,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 18,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 18,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\buildFullPath.js::program",
      "signature" : "",
      "fileName" : "lib\\core\\buildFullPath.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\buildFullPath.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\buildFullPath.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\buildFullPath.js::program:buildFullPath",
      "signature" : "",
      "fileName" : "lib\\core\\buildFullPath.js",
      "lineNumber" : 16,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "buildFullPath",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\core\\buildFullPath.js::program:buildFullPath",
            "lineNumber" : 165,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "buildFullPath",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\core\\buildFullPath.js::program:buildFullPath",
            "lineNumber" : 165,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "baseURL",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 16,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "baseURL",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 16,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "combineURLs",
              "resolvedMethod" : "lib\\helpers\\combineURLs.js::program:combineURLs",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 18,
              "columnNumber" : 11
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "requestedURL",
            "typeFullName" : "__ecma.String",
            "position" : 2,
            "lineNumber" : 16,
            "columnNumber" : 47,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "requestedURL",
            "typeFullName" : "__ecma.String",
            "position" : 2,
            "lineNumber" : 16,
            "columnNumber" : 47,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isAbsoluteURL",
              "resolvedMethod" : "lib\\helpers\\isAbsoluteURL.js::program:isAbsoluteURL",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 17,
              "columnNumber" : 18
            },
            {
              "callName" : "combineURLs",
              "resolvedMethod" : "lib\\helpers\\combineURLs.js::program:combineURLs",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 18,
              "columnNumber" : 11
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\dispatchRequest.js::program",
      "signature" : "",
      "fileName" : "lib\\core\\dispatchRequest.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "transformData",
            "typeFullName" : "(fns: Function | ANY[], response: ANY) => ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\dispatchRequest.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "(fns: Function | ANY[], response: ANY) => ANY:call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 40,
              "columnNumber" : 16
            },
            {
              "callName" : "call",
              "resolvedMethod" : "(fns: Function | ANY[], response: ANY) => ANY:call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "ANY",
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "lineNumber" : 55,
              "columnNumber" : 20
            },
            {
              "callName" : "call",
              "resolvedMethod" : "(fns: Function | ANY[], response: ANY) => ANY:call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 70,
              "columnNumber" : 31
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "adapters",
            "typeFullName" : "../adapters/adapters.js:adapters",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\dispatchRequest.js::program:require",
            "lineNumber" : 8,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "getAdapter",
              "resolvedMethod" : "../adapters/adapters.js:adapters:getAdapter",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 49,
              "columnNumber" : 18
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "AxiosHeaders",
            "typeFullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\dispatchRequest.js::program:require",
            "lineNumber" : 7,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "from",
              "resolvedMethod" : "AxiosHeaders.from",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 37,
              "columnNumber" : 19
            },
            {
              "callName" : "from",
              "resolvedMethod" : "AxiosHeaders.from",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 61,
              "columnNumber" : 23
            },
            {
              "callName" : "from",
              "resolvedMethod" : "AxiosHeaders.from",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 75,
              "columnNumber" : 34
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\dispatchRequest.js::program:require",
            "lineNumber" : 8,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\dispatchRequest.js::program:require",
            "lineNumber" : 8,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\dispatchRequest.js::program:dispatchRequest",
      "signature" : "",
      "fileName" : "lib\\core\\dispatchRequest.js",
      "lineNumber" : 34,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n       ...",
            "typeFullName" : "ANY",
            "lineNumber" : 34,
            "columnNumber" : 15,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n       ...",
            "typeFullName" : "ANY",
            "lineNumber" : 34,
            "columnNumber" : 15,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "config",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 34,
            "columnNumber" : 40,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "config",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 34,
            "columnNumber" : 40,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "throwIfCancellationRequested",
              "resolvedMethod" : "lib\\core\\dispatchRequest.js::program:throwIfCancellationRequested",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 35,
              "columnNumber" : 2
            },
            {
              "callName" : "call",
              "resolvedMethod" : "(fns: Function | ANY[], response: ANY) => ANY:call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 40,
              "columnNumber" : 16
            },
            {
              "callName" : "adapter",
              "resolvedMethod" : "lib\\core\\dispatchRequest.js::program:adapter",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 51,
              "columnNumber" : 9
            },
            {
              "callName" : "throwIfCancellationRequested",
              "resolvedMethod" : "lib\\core\\dispatchRequest.js::program:throwIfCancellationRequested",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 52,
              "columnNumber" : 4
            },
            {
              "callName" : "call",
              "resolvedMethod" : "(fns: Function | ANY[], response: ANY) => ANY:call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "ANY",
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 55,
              "columnNumber" : 20
            },
            {
              "callName" : "throwIfCancellationRequested",
              "resolvedMethod" : "lib\\core\\dispatchRequest.js::program:throwIfCancellationRequested",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 66,
              "columnNumber" : 6
            },
            {
              "callName" : "call",
              "resolvedMethod" : "(fns: Function | ANY[], response: ANY) => ANY:call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 70,
              "columnNumber" : 31
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "getAdapter",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../adapters/adapters.js:adapters:getAdapter",
            "lineNumber" : 49,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getAdapter",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../adapters/adapters.js:adapters:getAdapter",
            "lineNumber" : 49,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "adapter",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\dispatchRequest.js::program:adapter",
            "lineNumber" : 51,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "adapter",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\dispatchRequest.js::program:adapter",
            "lineNumber" : 51,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\dispatchRequest.js::program:dispatchRequest:onAdapterRejection",
      "signature" : "",
      "fileName" : "lib\\core\\dispatchRequest.js",
      "lineNumber" : 64,
      "columnNumber" : 5,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 64,
            "columnNumber" : 5,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 64,
            "columnNumber" : 5,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "reason",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 64,
            "columnNumber" : 33,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "reason",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 64,
            "columnNumber" : 33,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isCancel",
              "resolvedMethod" : "lib\\cancel\\isCancel.js::program:isCancel",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 65,
              "columnNumber" : 9
            },
            {
              "callName" : "reject",
              "resolvedMethod" : "Promise.reject",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 79,
              "columnNumber" : 11
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\dispatchRequest.js::program:dispatchRequest:onAdapterResolution",
      "signature" : "",
      "fileName" : "lib\\core\\dispatchRequest.js",
      "lineNumber" : 51,
      "columnNumber" : 30,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 51,
            "columnNumber" : 30,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 51,
            "columnNumber" : 30,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "response",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 51,
            "columnNumber" : 59,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "response",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 51,
            "columnNumber" : 59,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "(fns: Function | ANY[], response: ANY) => ANY:call",
              "paramTypes" : [
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
                "ANY",
                "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 55,
              "columnNumber" : 20
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(fns: Function | ANY[], response: ANY) => ANY:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(fns: Function | ANY[], response: ANY) => ANY:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\dispatchRequest.js::program:throwIfCancellationRequested",
      "signature" : "",
      "fileName" : "lib\\core\\dispatchRequest.js",
      "lineNumber" : 17,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "throwIfCancellationRequested",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\core\\dispatchRequest.js::program:throwIfCancellationRequested",
            "lineNumber" : 35,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "throwIfCancellationRequested",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\core\\dispatchRequest.js::program:throwIfCancellationRequested",
            "lineNumber" : 35,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\mergeConfig.js::program",
      "signature" : "",
      "fileName" : "lib\\core\\mergeConfig.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\mergeConfig.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "isPlainObject",
              "resolvedMethod" : "../utils.js:utils:isPlainObject",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 23,
              "columnNumber" : 8
            },
            {
              "callName" : "isPlainObject",
              "resolvedMethod" : "../utils.js:utils:isPlainObject",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "lineNumber" : 23,
              "columnNumber" : 39
            },
            {
              "callName" : "isPlainObject",
              "resolvedMethod" : "../utils.js:utils:isPlainObject",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "lineNumber" : 25,
              "columnNumber" : 15
            },
            {
              "callName" : "merge",
              "resolvedMethod" : "../utils.js:utils:merge",
              "paramTypes" : [
                "ANY",
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "lineNumber" : 26,
              "columnNumber" : 13
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "lineNumber" : 27,
              "columnNumber" : 15
            },
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 35,
              "columnNumber" : 9
            },
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 37,
              "columnNumber" : 16
            },
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 44,
              "columnNumber" : 9
            },
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 51,
              "columnNumber" : 9
            },
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 53,
              "columnNumber" : 16
            },
            {
              "callName" : "forEach",
              "resolvedMethod" : "../utils.js:utils:forEach",
              "paramTypes" : [
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 98,
              "columnNumber" : 2
            },
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 101,
              "columnNumber" : 5
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\mergeConfig.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\mergeConfig.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\mergeConfig.js::program:headersToObject",
      "signature" : "",
      "fileName" : "lib\\core\\mergeConfig.js",
      "lineNumber" : 6,
      "columnNumber" : 24,
      "usages" : [
        {
          "targetObj" : {
            "name" : "headersToObject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\mergeConfig.js::program:headersToObject",
            "lineNumber" : 95,
            "columnNumber" : 63,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "headersToObject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\mergeConfig.js::program:headersToObject",
            "lineNumber" : 95,
            "columnNumber" : 63,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "thing",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 6,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "thing",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 6,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "toJSON",
              "resolvedMethod" : "thing.toJSON",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 6,
              "columnNumber" : 67
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\mergeConfig.js::program:mergeConfig",
      "signature" : "",
      "fileName" : "lib\\core\\mergeConfig.js",
      "lineNumber" : 17,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "mergeConfig",
            "typeFullName" : "object",
            "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig",
            "lineNumber" : 187,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "mergeConfig",
            "typeFullName" : "object",
            "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig",
            "lineNumber" : 187,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "config1",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 17,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "config1",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 17,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "assign",
              "resolvedMethod" : "Object.assign",
              "paramTypes" : [
                "ANY",
                "ANY",
                "object"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 98,
              "columnNumber" : 28
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "config2",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 17,
            "columnNumber" : 45,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "config2",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 17,
            "columnNumber" : 45,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "assign",
              "resolvedMethod" : "Object.assign",
              "paramTypes" : [
                "ANY",
                "ANY",
                "object"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 98,
              "columnNumber" : 28
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\mergeConfig.js::program:mergeConfig:anonymous",
      "signature" : "",
      "fileName" : "lib\\core\\mergeConfig.js",
      "lineNumber" : 95,
      "columnNumber" : 13,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)",
            "typeFullName" : "ANY",
            "lineNumber" : 95,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)",
            "typeFullName" : "ANY",
            "lineNumber" : 95,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "a",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 95,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "a",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 95,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "headersToObject",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:headersToObject",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 95,
              "columnNumber" : 43
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "b",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 95,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "b",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 95,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "headersToObject",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:headersToObject",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 95,
              "columnNumber" : 63
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\mergeConfig.js::program:mergeConfig:computeConfigValue",
      "signature" : "",
      "fileName" : "lib\\core\\mergeConfig.js",
      "lineNumber" : 98,
      "columnNumber" : 66,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 98,
            "columnNumber" : 66,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 98,
            "columnNumber" : 66,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "prop",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 98,
            "columnNumber" : 94,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "prop",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 98,
            "columnNumber" : 94,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "merge",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:merge",
              "paramTypes" : [
                "ANY",
                "ANY",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 100,
              "columnNumber" : 24
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "configValue",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "merge",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\mergeConfig.js::program:merge",
            "lineNumber" : 100,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 101,
              "columnNumber" : 5
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "merge",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\mergeConfig.js::program:merge",
            "lineNumber" : 100,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "merge",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\mergeConfig.js::program:merge",
            "lineNumber" : 100,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\mergeConfig.js::program:mergeConfig:defaultToConfig2",
      "signature" : "",
      "fileName" : "lib\\core\\mergeConfig.js",
      "lineNumber" : 50,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 50,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 50,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "a",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 50,
            "columnNumber" : 28,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "a",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 50,
            "columnNumber" : 28,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 53,
              "columnNumber" : 16
            },
            {
              "callName" : "getMergedValue",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig:getMergedValue",
              "paramTypes" : [
                "undefined",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 54,
              "columnNumber" : 13
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "b",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 50,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "b",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 50,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 51,
              "columnNumber" : 9
            },
            {
              "callName" : "getMergedValue",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig:getMergedValue",
              "paramTypes" : [
                "undefined",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 52,
              "columnNumber" : 13
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\mergeConfig.js::program:mergeConfig:getMergedValue",
      "signature" : "",
      "fileName" : "lib\\core\\mergeConfig.js",
      "lineNumber" : 22,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "getMergedValue",
            "typeFullName" : "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]",
            "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig:getMergedValue",
            "lineNumber" : 63,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getMergedValue",
            "typeFullName" : "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]",
            "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig:getMergedValue",
            "lineNumber" : 63,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "target",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 22,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "target",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 22,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isPlainObject",
              "resolvedMethod" : "../utils.js:utils:isPlainObject",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 23,
              "columnNumber" : 8
            },
            {
              "callName" : "call",
              "resolvedMethod" : "utils.merge.call",
              "paramTypes" : [
                "ANY",
                "ANY",
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 24,
              "columnNumber" : 13
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "source",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 22,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "source",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 22,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "slice",
              "resolvedMethod" : "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]:slice",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 28,
              "columnNumber" : 13
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isPlainObject",
              "resolvedMethod" : "../utils.js:utils:isPlainObject",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 23,
              "columnNumber" : 39
            },
            {
              "callName" : "call",
              "resolvedMethod" : "utils.merge.call",
              "paramTypes" : [
                "ANY",
                "ANY",
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 24,
              "columnNumber" : 13
            },
            {
              "callName" : "isPlainObject",
              "resolvedMethod" : "../utils.js:utils:isPlainObject",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 25,
              "columnNumber" : 15
            },
            {
              "callName" : "merge",
              "resolvedMethod" : "../utils.js:utils:merge",
              "paramTypes" : [
                "ANY",
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 26,
              "columnNumber" : 13
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 27,
              "columnNumber" : 15
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "slice",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]:slice",
            "lineNumber" : 6,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "slice",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]:slice",
            "lineNumber" : 6,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\mergeConfig.js::program:mergeConfig:mergeDeepProperties",
      "signature" : "",
      "fileName" : "lib\\core\\mergeConfig.js",
      "lineNumber" : 34,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "mergeDeepProperties",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig:mergeDeepProperties",
            "lineNumber" : 95,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "mergeDeepProperties",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig:mergeDeepProperties",
            "lineNumber" : 95,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "a",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 34,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "a",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 34,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "getMergedValue",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig:getMergedValue",
              "paramTypes" : [
                "ANY",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 36,
              "columnNumber" : 13
            },
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 37,
              "columnNumber" : 16
            },
            {
              "callName" : "getMergedValue",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig:getMergedValue",
              "paramTypes" : [
                "undefined",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 38,
              "columnNumber" : 13
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "b",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 34,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "b",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 34,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 35,
              "columnNumber" : 9
            },
            {
              "callName" : "getMergedValue",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig:getMergedValue",
              "paramTypes" : [
                "ANY",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 36,
              "columnNumber" : 13
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "caseless",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 34,
            "columnNumber" : 37,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "caseless",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 34,
            "columnNumber" : 37,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "getMergedValue",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig:getMergedValue",
              "paramTypes" : [
                "ANY",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 36,
              "columnNumber" : 13
            },
            {
              "callName" : "getMergedValue",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig:getMergedValue",
              "paramTypes" : [
                "undefined",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 38,
              "columnNumber" : 13
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\mergeConfig.js::program:mergeConfig:mergeDirectKeys",
      "signature" : "",
      "fileName" : "lib\\core\\mergeConfig.js",
      "lineNumber" : 59,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 59,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 59,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "a",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 59,
            "columnNumber" : 27,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "a",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 59,
            "columnNumber" : 27,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "getMergedValue",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig:getMergedValue",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 61,
              "columnNumber" : 13
            },
            {
              "callName" : "getMergedValue",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig:getMergedValue",
              "paramTypes" : [
                "undefined",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 63,
              "columnNumber" : 13
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "b",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 59,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "b",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 59,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "getMergedValue",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig:getMergedValue",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 61,
              "columnNumber" : 13
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\mergeConfig.js::program:mergeConfig:valueFromConfig2",
      "signature" : "",
      "fileName" : "lib\\core\\mergeConfig.js",
      "lineNumber" : 43,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 43,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 43,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "b",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 43,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "b",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 43,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 44,
              "columnNumber" : 9
            },
            {
              "callName" : "getMergedValue",
              "resolvedMethod" : "lib\\core\\mergeConfig.js::program:mergeConfig:getMergedValue",
              "paramTypes" : [
                "undefined",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 45,
              "columnNumber" : 13
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\settle.js::program",
      "signature" : "",
      "fileName" : "lib\\core\\settle.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\settle.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\settle.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\settle.js::program:settle",
      "signature" : "",
      "fileName" : "lib\\core\\settle.js",
      "lineNumber" : 14,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "floor",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Math:floor",
            "lineNumber" : 21,
            "columnNumber" : 64,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "floor",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Math:floor",
            "lineNumber" : 21,
            "columnNumber" : 64,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "reject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\settle.js::program:reject",
            "lineNumber" : 19,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "reject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\settle.js::program:reject",
            "lineNumber" : 19,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "validateStatus",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\settle.js::program:validateStatus",
            "lineNumber" : 16,
            "columnNumber" : 45,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "validateStatus",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\settle.js::program:validateStatus",
            "lineNumber" : 16,
            "columnNumber" : 45,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "resolve",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\settle.js::program:resolve",
            "lineNumber" : 17,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "resolve",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\settle.js::program:resolve",
            "lineNumber" : 17,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "response",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 14,
            "columnNumber" : 48,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "response",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 14,
            "columnNumber" : 48,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "resolve",
              "resolvedMethod" : "lib\\core\\settle.js::program:resolve",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 17,
              "columnNumber" : 4
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "settle",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\settle.js::program:settle",
            "lineNumber" : 107,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "settle",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\settle.js::program:settle",
            "lineNumber" : 107,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\transformData.js::program",
      "signature" : "",
      "fileName" : "lib\\core\\transformData.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\transformData.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "forEach",
              "resolvedMethod" : "../utils.js:utils:forEach",
              "paramTypes" : [
                "Function | ANY[]",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 21,
              "columnNumber" : 2
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "AxiosHeaders",
            "typeFullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\transformData.js::program:require",
            "lineNumber" : 5,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "from",
              "resolvedMethod" : "AxiosHeaders.from",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 18,
              "columnNumber" : 18
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\transformData.js::program:require",
            "lineNumber" : 5,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\core\\transformData.js::program:require",
            "lineNumber" : 5,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\transformData.js::program:transformData",
      "signature" : "",
      "fileName" : "lib\\core\\transformData.js",
      "lineNumber" : 15,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "config",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "this || defaults",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.logicalOr",
            "lineNumber" : 16,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "fn.call",
              "paramTypes" : [
                "ANY",
                "ANY",
                "(format: ANY) => this",
                "ANY"
              ],
              "returnType" : "(format: ANY) => this",
              "position" : 1,
              "lineNumber" : 22,
              "columnNumber" : 11
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "data",
            "typeFullName" : "data",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "context.data",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 19,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "fn.call",
              "paramTypes" : [
                "ANY",
                "ANY",
                "(format: ANY) => this",
                "ANY"
              ],
              "returnType" : "(format: ANY) => this",
              "position" : 2,
              "lineNumber" : 22,
              "columnNumber" : 11
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "headers",
            "typeFullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "AxiosHeaders.from",
            "typeFullName" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "resolvedMethod" : "AxiosHeaders.from",
            "lineNumber" : 18,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "normalize",
              "resolvedMethod" : "headers.normalize",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 22,
              "columnNumber" : 33
            },
            {
              "callName" : "normalize",
              "resolvedMethod" : "headers.normalize",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 25,
              "columnNumber" : 2
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 15,
            "columnNumber" : 15,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 15,
            "columnNumber" : 15,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "fns",
            "typeFullName" : "Function | ANY[]",
            "position" : 1,
            "lineNumber" : 15,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "fns",
            "typeFullName" : "Function | ANY[]",
            "position" : 1,
            "lineNumber" : 15,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "forEach",
              "resolvedMethod" : "../utils.js:utils:forEach",
              "paramTypes" : [
                "Function | ANY[]",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 21,
              "columnNumber" : 2
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\core\\transformData.js::program:transformData:transform",
      "signature" : "",
      "fileName" : "lib\\core\\transformData.js",
      "lineNumber" : 21,
      "columnNumber" : 21,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 21,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 21,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "fn",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 21,
            "columnNumber" : 40,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "fn",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 21,
            "columnNumber" : 40,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "fn.call",
              "paramTypes" : [
                "ANY",
                "ANY",
                "(format: ANY) => this",
                "ANY"
              ],
              "returnType" : "(format: ANY) => this",
              "lineNumber" : 22,
              "columnNumber" : 11
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "data",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "fn.call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fn.call",
            "lineNumber" : 22,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "fn.call",
              "paramTypes" : [
                "ANY",
                "ANY",
                "(format: ANY) => this",
                "ANY"
              ],
              "returnType" : "(format: ANY) => this",
              "position" : 2,
              "lineNumber" : 22,
              "columnNumber" : 11
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\defaults\\index.js::program",
      "signature" : "",
      "fileName" : "lib\\defaults\\index.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\defaults\\index.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 26,
              "columnNumber" : 6
            },
            {
              "callName" : "trim",
              "resolvedMethod" : "../utils.js:utils:trim",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 29,
              "columnNumber" : 13
            },
            {
              "callName" : "isObject",
              "resolvedMethod" : "../utils.js:utils:isObject",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 49,
              "columnNumber" : 28
            },
            {
              "callName" : "isHTMLForm",
              "resolvedMethod" : "../utils.js:utils:isHTMLForm",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 51,
              "columnNumber" : 27
            },
            {
              "callName" : "isFormData",
              "resolvedMethod" : "../utils.js:utils:isFormData",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 55,
              "columnNumber" : 23
            },
            {
              "callName" : "isArrayBuffer",
              "resolvedMethod" : "../utils.js:utils:isArrayBuffer",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 64,
              "columnNumber" : 8
            },
            {
              "callName" : "isBuffer",
              "resolvedMethod" : "../utils.js:utils:isBuffer",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 65,
              "columnNumber" : 6
            },
            {
              "callName" : "isStream",
              "resolvedMethod" : "../utils.js:utils:isStream",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 66,
              "columnNumber" : 6
            },
            {
              "callName" : "isFile",
              "resolvedMethod" : "../utils.js:utils:isFile",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 67,
              "columnNumber" : 6
            },
            {
              "callName" : "isBlob",
              "resolvedMethod" : "../utils.js:utils:isBlob",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 68,
              "columnNumber" : 6
            },
            {
              "callName" : "isArrayBufferView",
              "resolvedMethod" : "../utils.js:utils:isArrayBufferView",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 72,
              "columnNumber" : 8
            },
            {
              "callName" : "isURLSearchParams",
              "resolvedMethod" : "../utils.js:utils:isURLSearchParams",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 75,
              "columnNumber" : 8
            },
            {
              "callName" : "isFileList",
              "resolvedMethod" : "../utils.js:utils:isFileList",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 87,
              "columnNumber" : 24
            },
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 111,
              "columnNumber" : 16
            },
            {
              "callName" : "forEach",
              "resolvedMethod" : "../utils.js:utils:forEach",
              "paramTypes" : [
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 158,
              "columnNumber" : 0
            },
            {
              "callName" : "forEach",
              "resolvedMethod" : "../utils.js:utils:forEach",
              "paramTypes" : [
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 162,
              "columnNumber" : 0
            },
            {
              "callName" : "merge",
              "resolvedMethod" : "../utils.js:utils:merge",
              "paramTypes" : [
                "{ 'Content-Type': ANY; }"
              ],
              "returnType" : "ANY",
              "lineNumber" : 163,
              "columnNumber" : 29
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "AxiosError",
            "typeFullName" : "lib\\core\\AxiosError.js::program:AxiosError",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\defaults\\index.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "from",
              "resolvedMethod" : "lib\\core\\AxiosError.js::program:AxiosError:from",
              "paramTypes" : [
                "__ecma.Boolean",
                "ANY",
                "lib\\defaults\\index.js::program",
                "__ecma.Null",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 120,
              "columnNumber" : 18
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\defaults\\index.js::program:require",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\defaults\\index.js::program:require",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\defaults\\index.js::program:forEachMethodNoData",
      "signature" : "",
      "fileName" : "lib\\defaults\\index.js",
      "lineNumber" : 158,
      "columnNumber" : 41,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 158,
            "columnNumber" : 41,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 158,
            "columnNumber" : 41,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\defaults\\index.js::program:forEachMethodWithData",
      "signature" : "",
      "fileName" : "lib\\defaults\\index.js",
      "lineNumber" : 162,
      "columnNumber" : 40,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 162,
            "columnNumber" : 40,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 162,
            "columnNumber" : 40,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\defaults\\index.js::program:stringifySafely",
      "signature" : "",
      "fileName" : "lib\\defaults\\index.js",
      "lineNumber" : 25,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "rawValue",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 25,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "rawValue",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 25,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 26,
              "columnNumber" : 6
            },
            {
              "callName" : "parser || JSON.parse",
              "resolvedMethod" : "lib\\defaults\\index.js::program:parser || JSON.parse",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 28,
              "columnNumber" : 6
            },
            {
              "callName" : "trim",
              "resolvedMethod" : "../utils.js:utils:trim",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 29,
              "columnNumber" : 13
            },
            {
              "callName" : "encoder || JSON.stringify",
              "resolvedMethod" : "lib\\defaults\\index.js::program:encoder || JSON.stringify",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 37,
              "columnNumber" : 9
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "stringifySafely",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\defaults\\index.js::program:stringifySafely",
            "lineNumber" : 100,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "stringifySafely",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\defaults\\index.js::program:stringifySafely",
            "lineNumber" : 100,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "trim",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:trim",
            "lineNumber" : 37,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "trim",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:trim",
            "lineNumber" : 37,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "encoder || JSON.stringify",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\defaults\\index.js::program:encoder || JSON.stringify",
            "lineNumber" : 37,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "encoder || JSON.stringify",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\defaults\\index.js::program:encoder || JSON.stringify",
            "lineNumber" : 37,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "parser || JSON.parse",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\defaults\\index.js::program:parser || JSON.parse",
            "lineNumber" : 28,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "parser || JSON.parse",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\defaults\\index.js::program:parser || JSON.parse",
            "lineNumber" : 28,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\defaults\\index.js::program:transformRequest",
      "signature" : "",
      "fileName" : "lib\\defaults\\index.js",
      "lineNumber" : 46,
      "columnNumber" : 21,
      "usages" : [
        {
          "targetObj" : {
            "name" : "isHTMLForm",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isHTMLForm",
            "lineNumber" : 51,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isHTMLForm",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isHTMLForm",
            "lineNumber" : 51,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isFileList",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isFileList",
            "lineNumber" : 155,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isFileList",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isFileList",
            "lineNumber" : 155,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isArrayBufferView",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isArrayBufferView",
            "lineNumber" : 72,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isArrayBufferView",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isArrayBufferView",
            "lineNumber" : 72,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObject...",
            "typeFullName" : "ANY",
            "lineNumber" : 46,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObject...",
            "typeFullName" : "ANY",
            "lineNumber" : 46,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "toString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:toString",
            "lineNumber" : 11,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Boolean:toString",
            "lineNumber" : 11,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isObject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isObject",
            "lineNumber" : 210,
            "columnNumber" : 7,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isObject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isObject",
            "lineNumber" : 210,
            "columnNumber" : 7,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "data",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 46,
            "columnNumber" : 47,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "data",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 46,
            "columnNumber" : 47,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "toString",
              "resolvedMethod" : "__ecma.Boolean:toString",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 77,
              "columnNumber" : 13
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isObject",
              "resolvedMethod" : "../utils.js:utils:isObject",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 49,
              "columnNumber" : 28
            },
            {
              "callName" : "isHTMLForm",
              "resolvedMethod" : "../utils.js:utils:isHTMLForm",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 51,
              "columnNumber" : 27
            },
            {
              "callName" : "FormData",
              "resolvedMethod" : "FormData",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "FormData",
              "position" : 1,
              "lineNumber" : 52,
              "columnNumber" : 6
            },
            {
              "callName" : "isFormData",
              "resolvedMethod" : "../utils.js:utils:isFormData",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 55,
              "columnNumber" : 23
            },
            {
              "callName" : "formDataToJSON",
              "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:formDataToJSON",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 61,
              "columnNumber" : 49
            },
            {
              "callName" : "isArrayBuffer",
              "resolvedMethod" : "../utils.js:utils:isArrayBuffer",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 64,
              "columnNumber" : 8
            },
            {
              "callName" : "isBuffer",
              "resolvedMethod" : "../utils.js:utils:isBuffer",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 65,
              "columnNumber" : 6
            },
            {
              "callName" : "isStream",
              "resolvedMethod" : "../utils.js:utils:isStream",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 66,
              "columnNumber" : 6
            },
            {
              "callName" : "isFile",
              "resolvedMethod" : "../utils.js:utils:isFile",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 67,
              "columnNumber" : 6
            },
            {
              "callName" : "isBlob",
              "resolvedMethod" : "../utils.js:utils:isBlob",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 68,
              "columnNumber" : 6
            },
            {
              "callName" : "isArrayBufferView",
              "resolvedMethod" : "../utils.js:utils:isArrayBufferView",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 72,
              "columnNumber" : 8
            },
            {
              "callName" : "isURLSearchParams",
              "resolvedMethod" : "../utils.js:utils:isURLSearchParams",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 75,
              "columnNumber" : 8
            },
            {
              "callName" : "toURLEncodedForm",
              "resolvedMethod" : "lib\\helpers\\toURLEncodedForm.js::program:toURLEncodedForm",
              "paramTypes" : [
                "__ecma.Boolean",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 84,
              "columnNumber" : 15
            },
            {
              "callName" : "isFileList",
              "resolvedMethod" : "../utils.js:utils:isFileList",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 87,
              "columnNumber" : 24
            },
            {
              "callName" : "stringifySafely",
              "resolvedMethod" : "lib\\defaults\\index.js::program:stringifySafely",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 100,
              "columnNumber" : 13
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "contentType",
            "typeFullName" : "__ecma.Boolean",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "headers.getContentType",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.logicalOr",
            "lineNumber" : 47,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "indexOf",
              "resolvedMethod" : "__ecma.Boolean:indexOf",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 48,
              "columnNumber" : 31
            },
            {
              "callName" : "indexOf",
              "resolvedMethod" : "__ecma.Boolean:indexOf",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 83,
              "columnNumber" : 10
            },
            {
              "callName" : "indexOf",
              "resolvedMethod" : "__ecma.Boolean:indexOf",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 87,
              "columnNumber" : 51
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isBuffer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isBuffer",
            "lineNumber" : 49,
            "columnNumber" : 47,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isBuffer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isBuffer",
            "lineNumber" : 49,
            "columnNumber" : 47,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isFile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isFile",
            "lineNumber" : 67,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isFile",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isFile",
            "lineNumber" : 67,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "headers",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 46,
            "columnNumber" : 53,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "headers",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 46,
            "columnNumber" : 53,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "getContentType",
              "resolvedMethod" : "headers.getContentType",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 47,
              "columnNumber" : 24
            },
            {
              "callName" : "setContentType",
              "resolvedMethod" : "headers.setContentType",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 76,
              "columnNumber" : 6
            },
            {
              "callName" : "setContentType",
              "resolvedMethod" : "headers.setContentType",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 99,
              "columnNumber" : 6
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isURLSearchParams",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isURLSearchParams",
            "lineNumber" : 48,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isURLSearchParams",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isURLSearchParams",
            "lineNumber" : 48,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\defaults\\index.js::program:transformResponse",
      "signature" : "",
      "fileName" : "lib\\defaults\\index.js",
      "lineNumber" : 106,
      "columnNumber" : 22,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 106,
            "columnNumber" : 22,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 106,
            "columnNumber" : 22,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "data",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 106,
            "columnNumber" : 49,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "data",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 106,
            "columnNumber" : 49,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 111,
              "columnNumber" : 16
            },
            {
              "callName" : "parse",
              "resolvedMethod" : "JSON.parse",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 116,
              "columnNumber" : 15
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\defaults\\index.js::program:validateStatus",
      "signature" : "",
      "fileName" : "lib\\defaults\\index.js",
      "lineNumber" : 147,
      "columnNumber" : 18,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 147,
            "columnNumber" : 18,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 147,
            "columnNumber" : 18,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\defaults\\transitional.js::program",
      "signature" : "",
      "fileName" : "lib\\defaults\\transitional.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\env\\classes\\FormData.js::program",
      "signature" : "",
      "fileName" : "lib\\env\\classes\\FormData.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\env\\classes\\FormData.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\env\\classes\\FormData.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\env\\data.js::program",
      "signature" : "",
      "fileName" : "lib\\env\\data.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:require",
            "lineNumber" : 6,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:require",
            "lineNumber" : 6,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:<init>",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 11,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "now",
            "typeFullName" : "ANY",
            "resolvedMethod" : "DateConstructor:now",
            "lineNumber" : 14,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "now",
            "typeFullName" : "ANY",
            "resolvedMethod" : "DateConstructor:now",
            "lineNumber" : 14,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "super",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:super",
            "lineNumber" : 23,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "super",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:super",
            "lineNumber" : 23,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "constructor(options) {\n    options = utils.toFlatObject(options, {\n      maxRate: 0,\n      chunkSize: 64 * 1024,\n      minChunkSize: 100,\n      timeWindow: 500,\n      ticksRate: 2,\n      samplesCount: 15\n    }, null, (prop, source) => {\n      return !utils.isUndefined(source[prop]);\n    });\n\n    super({\n      readableHighWaterMark: options.chunkSize\n    });\n\n    const self = this;\n\n    const internals = this[kInternals] = {\n      length: options.length,\n      timeWindow: options.timeWindow,\n      ticksRate: options.ticksRate,\n      chunkSize: options.chunkSize,\n      maxRate: options.maxRate,\n      minChunkSize: options.minChunkSize,\n      bytesSeen: 0,\n      isCaptured: false,\n      notifiedBytesLoaded: 0,\n      ts: Date.now(),\n      bytes: 0,\n      onReadCallback: null\n    };\n\n    const _speedometer = speedometer(internals.ticksRate * options.samplesCount, internals.timeWindow);\n\n    this.on('newListener', event => {\n      if (event === 'progress') {\n        if (!internals.isCaptu...",
            "typeFullName" : "ANY",
            "lineNumber" : 11,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "constructor(options) {\n    options = utils.toFlatObject(options, {\n      maxRate: 0,\n      chunkSize: 64 * 1024,\n      minChunkSize: 100,\n      timeWindow: 500,\n      ticksRate: 2,\n      samplesCount: 15\n    }, null, (prop, source) => {\n      return !utils.isUndefined(source[prop]);\n    });\n\n    super({\n      readableHighWaterMark: options.chunkSize\n    });\n\n    const self = this;\n\n    const internals = this[kInternals] = {\n      length: options.length,\n      timeWindow: options.timeWindow,\n      ticksRate: options.ticksRate,\n      chunkSize: options.chunkSize,\n      maxRate: options.maxRate,\n      minChunkSize: options.minChunkSize,\n      bytesSeen: 0,\n      isCaptured: false,\n      notifiedBytesLoaded: 0,\n      ts: Date.now(),\n      bytes: 0,\n      onReadCallback: null\n    };\n\n    const _speedometer = speedometer(internals.ticksRate * options.samplesCount, internals.timeWindow);\n\n    this.on('newListener', event => {\n      if (event === 'progress') {\n        if (!internals.isCaptu...",
            "typeFullName" : "ANY",
            "lineNumber" : 11,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "once",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:once",
            "lineNumber" : 582,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "once",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:once",
            "lineNumber" : 582,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "on",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:on",
            "lineNumber" : 75,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "on",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:on",
            "lineNumber" : 75,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "internals",
            "typeFullName" : "{ length: ANY; timeWindow: ANY; ticksRate: ANY; chunkSize: ANY; maxRate: ANY; minChunkSize: ANY; bytesSeen: __ecma.Number; isCaptured: __ecma.Boolean; notifiedBytesLoaded: __ecma.Number; ts: __ecma.Number; bytes: __ecma.Number; onReadCallback: ANY; }",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "this[kInternals] = {\n      length: options.length,\n      timeWindow: options.timeWindow,\n      ticksRate: options.ticksRate,\n      chunkSize: options.chunkSize,\n      maxRate: options.maxRate,\n      minChunkSize: options.minChunkSize,\n      bytesSeen: 0,\n      isCaptured: false,\n      notifiedBytesLoaded: 0,\n      ts: Date.now",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.assignment",
            "lineNumber" : 29,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "updateProgress",
              "resolvedMethod" : "internals.updateProgress",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 80,
              "columnNumber" : 6
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "options",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 11,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "options",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 11,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "toFlatObject",
              "resolvedMethod" : "../utils.js:utils:toFlatObject",
              "paramTypes" : [
                "ANY",
                "ANY",
                "__ecma.Null",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 12,
              "columnNumber" : 14
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:<init>:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 19,
      "columnNumber" : 13,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(prop, source) => {\n      return !utils.isUndefined(source[prop]);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 19,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(prop, source) => {\n      return !utils.isUndefined(source[prop]);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 19,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:<init>:anonymous1",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 46,
      "columnNumber" : 27,
      "usages" : [
        {
          "targetObj" : {
            "name" : "event => {\n      if (event === 'progress') {\n        if (!internals.isCaptured) {\n          internals.isCaptured = true;\n        }\n      }\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 46,
            "columnNumber" : 27,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "event => {\n      if (event === 'progress') {\n        if (!internals.isCaptured) {\n          internals.isCaptured = true;\n        }\n      }\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 46,
            "columnNumber" : 27,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:<init>:onFinish",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 79,
      "columnNumber" : 21,
      "usages" : [
        {
          "targetObj" : {
            "name" : "() => {\n      internals.updateProgress(true);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 79,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "() => {\n      internals.updateProgress(true);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 79,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:<init>:throttledHandler",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 56,
      "columnNumber" : 40,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function throttledHandler() {\n      const totalBytes = internals.length;\n      const bytesTransferred = internals.bytesSeen;\n      const progressBytes = bytesTransferred - bytesNotified;\n      if (!progressBytes || self.destroyed) return;\n\n      const rate = _speedometer(progressBytes);\n\n      bytesNotified = bytesTransferred;\n\n      process.nextTick(() => {\n        self.emit('progress', {\n          'loaded': bytesTransferred,\n          'total': totalBytes,\n          'progress': totalBytes ? (bytesTransferred / totalBytes) : undefined,\n          'bytes': progressBytes,\n          'rate': rate ? rate : undefined,\n          'estimated': rate && totalBytes && bytesTransferred <= totalBytes ?\n            (totalBytes - bytesTransferred) / rate : undefined\n        });\n      });\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 56,
            "columnNumber" : 40,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function throttledHandler() {\n      const totalBytes = internals.length;\n      const bytesTransferred = internals.bytesSeen;\n      const progressBytes = bytesTransferred - bytesNotified;\n      if (!progressBytes || self.destroyed) return;\n\n      const rate = _speedometer(progressBytes);\n\n      bytesNotified = bytesTransferred;\n\n      process.nextTick(() => {\n        self.emit('progress', {\n          'loaded': bytesTransferred,\n          'total': totalBytes,\n          'progress': totalBytes ? (bytesTransferred / totalBytes) : undefined,\n          'bytes': progressBytes,\n          'rate': rate ? rate : undefined,\n          'estimated': rate && totalBytes && bytesTransferred <= totalBytes ?\n            (totalBytes - bytesTransferred) / rate : undefined\n        });\n      });\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 56,
            "columnNumber" : 40,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "progressBytes",
            "typeFullName" : "__ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "bytesTransferred - bytesNotified",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.subtraction",
            "lineNumber" : 59,
            "columnNumber" : 28,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "_speedometer",
              "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:_speedometer",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 62,
              "columnNumber" : 19
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "_speedometer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:_speedometer",
            "lineNumber" : 62,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "_speedometer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:_speedometer",
            "lineNumber" : 62,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "nextTick",
            "typeFullName" : "ANY",
            "resolvedMethod" : "NodeJS.Process:nextTick",
            "lineNumber" : 168,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "nextTick",
            "typeFullName" : "ANY",
            "resolvedMethod" : "NodeJS.Process:nextTick",
            "lineNumber" : 168,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:<init>:throttledHandler:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 66,
      "columnNumber" : 23,
      "usages" : [
        {
          "targetObj" : {
            "name" : "() => {\n        self.emit('progress', {\n          'loaded': bytesTransferred,\n          'total': totalBytes,\n          'progress': totalBytes ? (bytesTransferred / totalBytes) : undefined,\n          'bytes': progressBytes,\n          'rate': rate ? rate : undefined,\n          'estimated': rate && totalBytes && bytesTransferred <= totalBytes ?\n            (totalBytes - bytesTransferred) / rate : undefined\n        });\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 66,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "() => {\n        self.emit('progress', {\n          'loaded': bytesTransferred,\n          'total': totalBytes,\n          'progress': totalBytes ? (bytesTransferred / totalBytes) : undefined,\n          'bytes': progressBytes,\n          'rate': rate ? rate : undefined,\n          'estimated': rate && totalBytes && bytesTransferred <= totalBytes ?\n            (totalBytes - bytesTransferred) / rate : undefined\n        });\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 66,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "emit",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:emit",
            "lineNumber" : 192,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "emit",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:emit",
            "lineNumber" : 192,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_read",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 87,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "_read",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_read",
            "lineNumber" : 94,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "_read",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_read",
            "lineNumber" : 94,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "size",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 87,
            "columnNumber" : 8,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "size",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 87,
            "columnNumber" : 8,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "_read",
              "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_read",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 94,
              "columnNumber" : 11
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "internals",
            "typeFullName" : "{ length: ANY; timeWindow: ANY; ticksRate: ANY; chunkSize: ANY; maxRate: ANY; minChunkSize: ANY; bytesSeen: __ecma.Number; isCaptured: __ecma.Boolean; notifiedBytesLoaded: __ecma.Number; ts: __ecma.Number; bytes: __ecma.Number; onReadCallback: ANY; }",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "this[kInternals]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 88,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "onReadCallback",
              "resolvedMethod" : "internals.onReadCallback",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 91,
              "columnNumber" : 6
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_transform",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 97,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "_transform(chunk, encoding, callback) {\n    const self = this;\n    const internals = this[kInternals];\n    const maxRate = internals.maxRate;\n\n    const readableHighWaterMark = this.readableHighWaterMark;\n\n    const timeWindow = internals.timeWindow;\n\n    const divider = 1000 / timeWindow;\n    const bytesThreshold = (maxRate / divider);\n    const minChunkSize = internals.minChunkSize !== false ? Math.max(internals.minChunkSize, bytesThreshold * 0.01) : 0;\n\n    function pushChunk(_chunk, _callback) {\n      const bytes = Buffer.byteLength(_chunk);\n      internals.bytesSeen += bytes;\n      internals.bytes += bytes;\n\n      if (internals.isCaptured) {\n        internals.updateProgress();\n      }\n\n      if (self.push(_chunk)) {\n        process.nextTick(_callback);\n      } else {\n        internals.onReadCallback = () => {\n          internals.onReadCallback = null;\n          process.nextTick(_callback);\n        };\n      }\n    }\n\n    const transformChunk = (_chunk, _callback) => {\n      const...",
            "typeFullName" : "ANY",
            "lineNumber" : 97,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "_transform(chunk, encoding, callback) {\n    const self = this;\n    const internals = this[kInternals];\n    const maxRate = internals.maxRate;\n\n    const readableHighWaterMark = this.readableHighWaterMark;\n\n    const timeWindow = internals.timeWindow;\n\n    const divider = 1000 / timeWindow;\n    const bytesThreshold = (maxRate / divider);\n    const minChunkSize = internals.minChunkSize !== false ? Math.max(internals.minChunkSize, bytesThreshold * 0.01) : 0;\n\n    function pushChunk(_chunk, _callback) {\n      const bytes = Buffer.byteLength(_chunk);\n      internals.bytesSeen += bytes;\n      internals.bytes += bytes;\n\n      if (internals.isCaptured) {\n        internals.updateProgress();\n      }\n\n      if (self.push(_chunk)) {\n        process.nextTick(_callback);\n      } else {\n        internals.onReadCallback = () => {\n          internals.onReadCallback = null;\n          process.nextTick(_callback);\n        };\n      }\n    }\n\n    const transformChunk = (_chunk, _callback) => {\n      const...",
            "typeFullName" : "ANY",
            "lineNumber" : 97,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "chunk",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 97,
            "columnNumber" : 13,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "chunk",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 97,
            "columnNumber" : 13,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "transformChunk",
              "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_transform:transformChunk",
              "paramTypes" : [
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 172,
              "columnNumber" : 4
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "internals",
            "typeFullName" : "{ length: ANY; timeWindow: ANY; ticksRate: ANY; chunkSize: ANY; maxRate: ANY; minChunkSize: ANY; bytesSeen: __ecma.Number; isCaptured: __ecma.Boolean; notifiedBytesLoaded: __ecma.Number; ts: __ecma.Number; bytes: __ecma.Number; onReadCallback: ANY; }",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "this[kInternals]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 99,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "updateProgress",
              "resolvedMethod" : "internals.updateProgress",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 116,
              "columnNumber" : 8
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "max",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Math:max",
            "lineNumber" : 108,
            "columnNumber" : 60,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "max",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Math:max",
            "lineNumber" : 108,
            "columnNumber" : 60,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_transform:anonymous:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 152,
      "columnNumber" : 28,
      "usages" : [
        {
          "targetObj" : {
            "name" : "() => {\n            _callback(null, _chunk);\n          }",
            "typeFullName" : "ANY",
            "lineNumber" : 152,
            "columnNumber" : 28,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "() => {\n            _callback(null, _chunk);\n          }",
            "typeFullName" : "ANY",
            "lineNumber" : 152,
            "columnNumber" : 28,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "_callback",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:_callback",
            "lineNumber" : 153,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "_callback",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:_callback",
            "lineNumber" : 153,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_transform:anonymous:anonymous1",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 167,
      "columnNumber" : 41,
      "usages" : [
        {
          "targetObj" : {
            "name" : "() => {\n        process.nextTick(_callback, null, chunkRemainder);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 167,
            "columnNumber" : 41,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "() => {\n        process.nextTick(_callback, null, chunkRemainder);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 167,
            "columnNumber" : 41,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_transform:pushChunk",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 110,
      "columnNumber" : 4,
      "usages" : [
        {
          "targetObj" : {
            "name" : "byteLength",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Buffer:byteLength",
            "lineNumber" : 130,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "byteLength",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Buffer:byteLength",
            "lineNumber" : 130,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "push",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:push",
            "lineNumber" : 45,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "push",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:push",
            "lineNumber" : 45,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "pushChunk",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_transform:pushChunk",
            "lineNumber" : 167,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "pushChunk",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_transform:pushChunk",
            "lineNumber" : 167,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "_chunk",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 110,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "_chunk",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 110,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "byteLength",
              "resolvedMethod" : "Buffer:byteLength",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 111,
              "columnNumber" : 20
            },
            {
              "callName" : "push",
              "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 119,
              "columnNumber" : 10
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "_callback",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 110,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "_callback",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 110,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "nextTick",
              "resolvedMethod" : "NodeJS.Process:nextTick",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 120,
              "columnNumber" : 8
            },
            {
              "callName" : "nextTick",
              "resolvedMethod" : "NodeJS.Process:nextTick",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 124,
              "columnNumber" : 10
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_transform:pushChunk:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 122,
      "columnNumber" : 35,
      "usages" : [
        {
          "targetObj" : {
            "name" : "() => {\n          internals.onReadCallback = null;\n          process.nextTick(_callback);\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 122,
            "columnNumber" : 35,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "() => {\n          internals.onReadCallback = null;\n          process.nextTick(_callback);\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 122,
            "columnNumber" : 35,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_transform:transformChunk",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 129,
      "columnNumber" : 27,
      "usages" : [
        {
          "targetObj" : {
            "name" : "transformChunk",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_transform:transformChunk",
            "lineNumber" : 172,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "transformChunk",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_transform:transformChunk",
            "lineNumber" : 172,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "chunkRemainder",
            "typeFullName" : "__ecma.Null",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "_chunk.subarray",
            "typeFullName" : "ANY",
            "resolvedMethod" : "_chunk.subarray",
            "lineNumber" : 163,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "nextTick",
              "resolvedMethod" : "NodeJS.Process:nextTick",
              "paramTypes" : [
                "ANY",
                "__ecma.Null",
                "__ecma.Null"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 168,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "setTimeout",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:setTimeout",
            "lineNumber" : 621,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "setTimeout",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:setTimeout",
            "lineNumber" : 621,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "_chunk",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 129,
            "columnNumber" : 28,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "_chunk",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 129,
            "columnNumber" : 28,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "subarray",
              "resolvedMethod" : "_chunk.subarray",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 163,
              "columnNumber" : 25
            },
            {
              "callName" : "subarray",
              "resolvedMethod" : "_chunk.subarray",
              "paramTypes" : [
                "__ecma.Number",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 164,
              "columnNumber" : 17
            }
          ],
          "argToCalls" : [
            {
              "callName" : "byteLength",
              "resolvedMethod" : "Buffer:byteLength",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 130,
              "columnNumber" : 24
            },
            {
              "callName" : "_callback",
              "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:_callback",
              "paramTypes" : [
                "__ecma.Null",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 153,
              "columnNumber" : 12
            },
            {
              "callName" : "pushChunk",
              "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_transform:pushChunk",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 167,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "_callback",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 129,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "_callback",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 129,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "nextTick",
              "resolvedMethod" : "NodeJS.Process:nextTick",
              "paramTypes" : [
                "ANY",
                "__ecma.Null",
                "__ecma.Null"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 168,
              "columnNumber" : 8
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_transform:transformNextChunk",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 172,
      "columnNumber" : 26,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function transformNextChunk(err, _chunk) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (_chunk) {\n        transformChunk(_chunk, transformNextChunk);\n      } else {\n        callback(null);\n      }\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 172,
            "columnNumber" : 26,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function transformNextChunk(err, _chunk) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (_chunk) {\n        transformChunk(_chunk, transformNextChunk);\n      } else {\n        callback(null);\n      }\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 172,
            "columnNumber" : 26,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "err",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 172,
            "columnNumber" : 54,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "err",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 172,
            "columnNumber" : 54,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "callback",
              "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:callback",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 174,
              "columnNumber" : 15
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "_chunk",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 172,
            "columnNumber" : 59,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "_chunk",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 172,
            "columnNumber" : 59,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "transformChunk",
              "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_transform:transformChunk",
              "paramTypes" : [
                "ANY",
                "(err: ANY, _chunk: ANY) => ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 178,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "callback",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:callback",
            "lineNumber" : 180,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "callback",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:callback",
            "lineNumber" : 180,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:setLength",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 185,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "setLength(length) {\n    this[kInternals].length = +length;\n    return this;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 185,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "setLength(length) {\n    this[kInternals].length = +length;\n    return this;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 185,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosURLSearchParams.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosURLSearchParams.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosURLSearchParams.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosURLSearchParams.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosURLSearchParams.js::program:AxiosURLSearchParams",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosURLSearchParams.js",
      "lineNumber" : 36,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 36,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 36,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "params",
            "typeFullName" : "{ [x: __ecma.String]: ANY; }",
            "position" : 1,
            "lineNumber" : 36,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "params",
            "typeFullName" : "{ [x: __ecma.String]: ANY; }",
            "position" : 1,
            "lineNumber" : 36,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "toFormData",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:toFormData",
              "paramTypes" : [
                "{ [x: __ecma.String]: ANY; }",
                "lib\\helpers\\AxiosURLSearchParams.js::program",
                "{ [x: __ecma.String]: ANY; }"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 39,
              "columnNumber" : 12
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "options",
            "typeFullName" : "{ [x: __ecma.String]: ANY; }",
            "position" : 2,
            "lineNumber" : 36,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "options",
            "typeFullName" : "{ [x: __ecma.String]: ANY; }",
            "position" : 2,
            "lineNumber" : 36,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "toFormData",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:toFormData",
              "paramTypes" : [
                "{ [x: __ecma.String]: ANY; }",
                "lib\\helpers\\AxiosURLSearchParams.js::program",
                "{ [x: __ecma.String]: ANY; }"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 39,
              "columnNumber" : 12
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosURLSearchParams.js::program:append",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosURLSearchParams.js",
      "lineNumber" : 44,
      "columnNumber" : 19,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function append(name, value) {\n  this._pairs.push([name, value]);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 44,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function append(name, value) {\n  this._pairs.push([name, value]);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 44,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "name",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 44,
            "columnNumber" : 35,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "name",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 44,
            "columnNumber" : 35,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "",
              "resolvedMethod" : "_tmp_3.push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 45,
              "columnNumber" : 20
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 44,
            "columnNumber" : 41,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 44,
            "columnNumber" : 41,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "",
              "resolvedMethod" : "_tmp_3.push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 45,
              "columnNumber" : 26
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosURLSearchParams.js::program:encode",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosURLSearchParams.js",
      "lineNumber" : 13,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 13,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 13,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "str",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 13,
            "columnNumber" : 16,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "str",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 13,
            "columnNumber" : 16,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "encodeURIComponent",
              "resolvedMethod" : "encodeURIComponent",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 23,
              "columnNumber" : 9
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosURLSearchParams.js::program:encode:replacer",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosURLSearchParams.js",
      "lineNumber" : 23,
      "columnNumber" : 61,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function replacer(match) {\n    return charMap[match];\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 23,
            "columnNumber" : 61,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function replacer(match) {\n    return charMap[match];\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 23,
            "columnNumber" : 61,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosURLSearchParams.js::program:toString",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosURLSearchParams.js",
      "lineNumber" : 48,
      "columnNumber" : 21,
      "usages" : [
        {
          "targetObj" : {
            "name" : "toString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosURLSearchParams.js::program:toString",
            "lineNumber" : 11,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosURLSearchParams.js::program:toString",
            "lineNumber" : 11,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "encoder",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 48,
            "columnNumber" : 39,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "encoder",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 48,
            "columnNumber" : 39,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "(value: ANY) => ANY:call",
              "paramTypes" : [
                "lib\\helpers\\AxiosURLSearchParams.js::program",
                "ANY",
                "lib\\helpers\\AxiosURLSearchParams.js::program:encode",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 50,
              "columnNumber" : 11
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosURLSearchParams.js::program:toString:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosURLSearchParams.js",
      "lineNumber" : 49,
      "columnNumber" : 28,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function(value) {\n    return encoder.call(this, value, encode);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 49,
            "columnNumber" : 28,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function(value) {\n    return encoder.call(this, value, encode);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 49,
            "columnNumber" : 28,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 49,
            "columnNumber" : 37,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 49,
            "columnNumber" : 37,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "(value: ANY) => ANY:call",
              "paramTypes" : [
                "lib\\helpers\\AxiosURLSearchParams.js::program",
                "ANY",
                "lib\\helpers\\AxiosURLSearchParams.js::program:encode",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 50,
              "columnNumber" : 11
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(value: ANY) => ANY:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(value: ANY) => ANY:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\AxiosURLSearchParams.js::program:toString:each",
      "signature" : "",
      "fileName" : "lib\\helpers\\AxiosURLSearchParams.js",
      "lineNumber" : 53,
      "columnNumber" : 25,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 53,
            "columnNumber" : 25,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 53,
            "columnNumber" : 25,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "_encode",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosURLSearchParams.js::program:_encode",
            "lineNumber" : 54,
            "columnNumber" : 36,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "_encode",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\AxiosURLSearchParams.js::program:_encode",
            "lineNumber" : 54,
            "columnNumber" : 36,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\HttpStatusCode.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\HttpStatusCode.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\HttpStatusCode.js::program:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\HttpStatusCode.js",
      "lineNumber" : 67,
      "columnNumber" : 39,
      "usages" : [
        {
          "targetObj" : {
            "name" : "([key, value]) => {\n  HttpStatusCode[value] = key;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 67,
            "columnNumber" : 39,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "([key, value]) => {\n  HttpStatusCode[value] = key;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 67,
            "columnNumber" : 39,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\ZlibHeaderTransformStream.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\ZlibHeaderTransformStream.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:<init>",
      "signature" : "",
      "fileName" : "lib\\helpers\\ZlibHeaderTransformStream.js",
      "lineNumber" : null,
      "columnNumber" : null,
      "usages" : [
        {
          "targetObj" : {
            "name" : "constructor() {}",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "constructor() {}",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:__transform",
      "signature" : "",
      "fileName" : "lib\\helpers\\ZlibHeaderTransformStream.js",
      "lineNumber" : 6,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "__transform",
            "typeFullName" : "(chunk: ANY, encoding: ANY, callback: ANY) => void",
            "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:__transform",
            "lineNumber" : 24,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "__transform",
            "typeFullName" : "(chunk: ANY, encoding: ANY, callback: ANY) => void",
            "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:__transform",
            "lineNumber" : 24,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "chunk",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 6,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "chunk",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 6,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "push",
              "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:push",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 7,
              "columnNumber" : 4
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "push",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:push",
            "lineNumber" : 45,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "push",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:push",
            "lineNumber" : 45,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "callback",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:callback",
            "lineNumber" : 8,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "callback",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:callback",
            "lineNumber" : 8,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:_transform",
      "signature" : "",
      "fileName" : "lib\\helpers\\ZlibHeaderTransformStream.js",
      "lineNumber" : 11,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "alloc",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Buffer:alloc",
            "lineNumber" : 17,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "alloc",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Buffer:alloc",
            "lineNumber" : 17,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "chunk",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 11,
            "columnNumber" : 13,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "chunk",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 11,
            "columnNumber" : 13,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "__transform",
              "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:__transform",
              "paramTypes" : [
                "__ecma.Boolean",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 24,
              "columnNumber" : 4
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "header",
            "typeFullName" : "Buffer",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "Buffer.alloc",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Buffer:alloc",
            "lineNumber" : 17,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "push",
              "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:push",
              "paramTypes" : [
                "Buffer",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 20,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "callback",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 11,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "callback",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 11,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "__transform",
              "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:__transform",
              "paramTypes" : [
                "__ecma.Boolean",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 24,
              "columnNumber" : 4
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "_transform(chunk, encoding, callback) {\n    if (chunk.length !== 0) {\n      this._transform = this.__transform;\n\n      // Add Default Compression headers if no zlib headers are present\n      if (chunk[0] !== 120) { // Hex: 78\n        const header = Buffer.alloc(2);\n        header[0] = 120; // Hex: 78\n        header[1] = 156; // Hex: 9C \n        this.push(header, encoding);\n      }\n    }\n\n    this.__transform(chunk, encoding, callback);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 11,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "_transform(chunk, encoding, callback) {\n    if (chunk.length !== 0) {\n      this._transform = this.__transform;\n\n      // Add Default Compression headers if no zlib headers are present\n      if (chunk[0] !== 120) { // Hex: 78\n        const header = Buffer.alloc(2);\n        header[0] = 120; // Hex: 78\n        header[1] = 156; // Hex: 9C \n        this.push(header, encoding);\n      }\n    }\n\n    this.__transform(chunk, encoding, callback);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 11,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "encoding",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 11,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "encoding",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 11,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "push",
              "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:push",
              "paramTypes" : [
                "Buffer",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 20,
              "columnNumber" : 8
            },
            {
              "callName" : "__transform",
              "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:__transform",
              "paramTypes" : [
                "__ecma.Boolean",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 24,
              "columnNumber" : 4
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\bind.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\bind.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\bind.js::program:bind",
      "signature" : "",
      "fileName" : "lib\\helpers\\bind.js",
      "lineNumber" : 3,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "bind",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\bind.js::program:bind",
            "lineNumber" : 345,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "bind",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\bind.js::program:bind",
            "lineNumber" : 345,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "fn",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 3,
            "columnNumber" : 29,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "fn",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 3,
            "columnNumber" : 29,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "apply",
              "resolvedMethod" : "Function:apply",
              "paramTypes" : [
                "ANY",
                "IArguments"
              ],
              "returnType" : "ANY",
              "lineNumber" : 5,
              "columnNumber" : 11
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "thisArg",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 3,
            "columnNumber" : 33,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "thisArg",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 3,
            "columnNumber" : 33,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "apply",
              "resolvedMethod" : "Function:apply",
              "paramTypes" : [
                "ANY",
                "IArguments"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 5,
              "columnNumber" : 11
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\bind.js::program:bind:wrap",
      "signature" : "",
      "fileName" : "lib\\helpers\\bind.js",
      "lineNumber" : 4,
      "columnNumber" : 9,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function wrap() {\n    return fn.apply(thisArg, arguments);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 4,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function wrap() {\n    return fn.apply(thisArg, arguments);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 4,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\buildURL.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\buildURL.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\buildURL.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "isURLSearchParams",
              "resolvedMethod" : "../utils.js:utils:isURLSearchParams",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 48,
              "columnNumber" : 23
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\buildURL.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\buildURL.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\buildURL.js::program:buildURL",
      "signature" : "",
      "fileName" : "lib\\helpers\\buildURL.js",
      "lineNumber" : 33,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "options",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 33,
            "columnNumber" : 46,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "options",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 33,
            "columnNumber" : 46,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "serializeFn",
              "resolvedMethod" : "lib\\helpers\\buildURL.js::program:serializeFn",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 46,
              "columnNumber" : 23
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "_encode",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "options && options.encode || encode",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.logicalOr",
            "lineNumber" : 39,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "AxiosURLSearchParams",
              "resolvedMethod" : "lib\\helpers\\AxiosURLSearchParams.js::program:AxiosURLSearchParams",
              "paramTypes" : [
                "ANY",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "lib\\helpers\\AxiosURLSearchParams.js::program:AxiosURLSearchParams",
              "position" : 1,
              "lineNumber" : 50,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "serializeFn",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\buildURL.js::program:serializeFn",
            "lineNumber" : 46,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "serializeFn",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\buildURL.js::program:serializeFn",
            "lineNumber" : 46,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "serializedParams",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "utils.isURLSearchParams",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.conditional",
            "lineNumber" : 48,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "AxiosURLSearchParams",
              "resolvedMethod" : "lib\\helpers\\AxiosURLSearchParams.js::program:AxiosURLSearchParams",
              "paramTypes" : [
                "ANY",
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "lib\\helpers\\AxiosURLSearchParams.js::program:AxiosURLSearchParams",
              "position" : 1,
              "lineNumber" : 48,
              "columnNumber" : 4
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "url",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 33,
            "columnNumber" : 33,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "url",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 33,
            "columnNumber" : 33,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "indexOf",
              "resolvedMethod" : "__ecma.String:indexOf",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 54,
              "columnNumber" : 26
            },
            {
              "callName" : "slice",
              "resolvedMethod" : "__ecma.String:slice",
              "paramTypes" : [
                "__ecma.Number",
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "lineNumber" : 57,
              "columnNumber" : 12
            },
            {
              "callName" : "indexOf",
              "resolvedMethod" : "__ecma.String:indexOf",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 59,
              "columnNumber" : 12
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "params",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 33,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "params",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 33,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "toString",
              "resolvedMethod" : "params.toString",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 49,
              "columnNumber" : 6
            }
          ],
          "argToCalls" : [
            {
              "callName" : "serializeFn",
              "resolvedMethod" : "lib\\helpers\\buildURL.js::program:serializeFn",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 46,
              "columnNumber" : 23
            },
            {
              "callName" : "isURLSearchParams",
              "resolvedMethod" : "../utils.js:utils:isURLSearchParams",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 48,
              "columnNumber" : 23
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "buildURL",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\buildURL.js::program:buildURL",
            "lineNumber" : 166,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "buildURL",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\buildURL.js::program:buildURL",
            "lineNumber" : 166,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "hashmarkIndex",
            "typeFullName" : "__ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "url.indexOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:indexOf",
            "lineNumber" : 54,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "slice",
              "resolvedMethod" : "__ecma.String:slice",
              "paramTypes" : [
                "__ecma.Number",
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 57,
              "columnNumber" : 12
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\buildURL.js::program:encode",
      "signature" : "",
      "fileName" : "lib\\helpers\\buildURL.js",
      "lineNumber" : 14,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 14,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 14,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "val",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 14,
            "columnNumber" : 16,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "val",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 14,
            "columnNumber" : 16,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "encodeURIComponent",
              "resolvedMethod" : "encodeURIComponent",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 15,
              "columnNumber" : 9
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\callbackify.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\callbackify.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\callbackify.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "isAsyncFn",
              "resolvedMethod" : "../utils.js:utils:isAsyncFn",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 4,
              "columnNumber" : 9
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\callbackify.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\callbackify.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\callbackify.js::program:anonymous:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\callbackify.js",
      "lineNumber" : 4,
      "columnNumber" : 31,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function (...args) {\n    const cb = args.pop();\n    fn.apply(this, args).then((value) => {\n      try {\n        reducer ? cb(null, ...reducer(value)) : cb(null, value);\n      } catch (err) {\n        cb(err);\n      }\n    }, cb);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 4,
            "columnNumber" : 31,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function (...args) {\n    const cb = args.pop();\n    fn.apply(this, args).then((value) => {\n      try {\n        reducer ? cb(null, ...reducer(value)) : cb(null, value);\n      } catch (err) {\n        cb(err);\n      }\n    }, cb);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 4,
            "columnNumber" : 31,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "cb",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "args.pop",
            "typeFullName" : "ANY",
            "resolvedMethod" : "() => ANY:pop",
            "lineNumber" : 5,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "then",
              "resolvedMethod" : "Promise<any>:then",
              "paramTypes" : [
                "LAMBDA",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 6,
              "columnNumber" : 4
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "pop",
            "typeFullName" : "ANY",
            "resolvedMethod" : "() => ANY:pop",
            "lineNumber" : 207,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "pop",
            "typeFullName" : "ANY",
            "resolvedMethod" : "() => ANY:pop",
            "lineNumber" : 207,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\callbackify.js::program:anonymous:anonymous:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\callbackify.js",
      "lineNumber" : 6,
      "columnNumber" : 30,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(value) => {\n      try {\n        reducer ? cb(null, ...reducer(value)) : cb(null, value);\n      } catch (err) {\n        cb(err);\n      }\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 6,
            "columnNumber" : 30,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(value) => {\n      try {\n        reducer ? cb(null, ...reducer(value)) : cb(null, value);\n      } catch (err) {\n        cb(err);\n      }\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 6,
            "columnNumber" : 30,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 6,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 6,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "reducer",
              "resolvedMethod" : "lib\\helpers\\callbackify.js::program:reducer",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 8,
              "columnNumber" : 30
            },
            {
              "callName" : "cb",
              "resolvedMethod" : "lib\\helpers\\callbackify.js::program:cb",
              "paramTypes" : [
                "__ecma.Null",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 8,
              "columnNumber" : 48
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "cb",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\callbackify.js::program:cb",
            "lineNumber" : 10,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "cb",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\callbackify.js::program:cb",
            "lineNumber" : 10,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "reducer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\callbackify.js::program:reducer",
            "lineNumber" : 8,
            "columnNumber" : 30,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "reducer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\callbackify.js::program:reducer",
            "lineNumber" : 8,
            "columnNumber" : 30,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\callbackify.js::program:callbackify",
      "signature" : "",
      "fileName" : "lib\\helpers\\callbackify.js",
      "lineNumber" : 3,
      "columnNumber" : 20,
      "usages" : [
        {
          "targetObj" : {
            "name" : "callbackify",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\callbackify.js::program:callbackify",
            "lineNumber" : 158,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "callbackify",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\callbackify.js::program:callbackify",
            "lineNumber" : 158,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "fn",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 3,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "fn",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 3,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "apply",
              "resolvedMethod" : "Function:apply",
              "paramTypes" : [
                "lib\\helpers\\callbackify.js::program",
                "() => ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 6,
              "columnNumber" : 4
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isAsyncFn",
              "resolvedMethod" : "../utils.js:utils:isAsyncFn",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 4,
              "columnNumber" : 9
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\combineURLs.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\combineURLs.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\combineURLs.js::program:combineURLs",
      "signature" : "",
      "fileName" : "lib\\helpers\\combineURLs.js",
      "lineNumber" : 11,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "combineURLs",
            "typeFullName" : "__ecma.String:<operator>.conditional:<returnValue>",
            "resolvedMethod" : "lib\\helpers\\combineURLs.js::program:combineURLs",
            "lineNumber" : 18,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "combineURLs",
            "typeFullName" : "__ecma.String:<operator>.conditional:<returnValue>",
            "resolvedMethod" : "lib\\helpers\\combineURLs.js::program:combineURLs",
            "lineNumber" : 18,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "baseURL",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 11,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "baseURL",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 11,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "replace",
              "resolvedMethod" : "__ecma.String:replace",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 13,
              "columnNumber" : 6
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "relativeURL",
            "typeFullName" : "__ecma.String",
            "position" : 2,
            "lineNumber" : 11,
            "columnNumber" : 45,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "relativeURL",
            "typeFullName" : "__ecma.String",
            "position" : 2,
            "lineNumber" : 11,
            "columnNumber" : 45,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "replace",
              "resolvedMethod" : "__ecma.String:replace",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 13,
              "columnNumber" : 42
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "replace",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:replace",
            "lineNumber" : 519,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "replace",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:replace",
            "lineNumber" : 519,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\cookies.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\cookies.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\cookies.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "isNumber",
              "resolvedMethod" : "../utils.js:utils:isNumber",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 15,
              "columnNumber" : 12
            },
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 19,
              "columnNumber" : 12
            },
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 23,
              "columnNumber" : 12
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\cookies.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\cookies.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\cookies.js::program:nonStandardBrowserEnv",
      "signature" : "",
      "fileName" : "lib\\helpers\\cookies.js",
      "lineNumber" : 46,
      "columnNumber" : 3,
      "usages" : [
        {
          "targetObj" : {
            "name" : "nonStandardBrowserEnv",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\cookies.js::program:nonStandardBrowserEnv",
            "lineNumber" : 46,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "nonStandardBrowserEnv",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\cookies.js::program:nonStandardBrowserEnv",
            "lineNumber" : 46,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\cookies.js::program:nonStandardBrowserEnv:read",
      "signature" : "",
      "fileName" : "lib\\helpers\\cookies.js",
      "lineNumber" : 49,
      "columnNumber" : 12,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function read() { return null; }",
            "typeFullName" : "ANY",
            "lineNumber" : 49,
            "columnNumber" : 12,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function read() { return null; }",
            "typeFullName" : "ANY",
            "lineNumber" : 49,
            "columnNumber" : 12,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\cookies.js::program:nonStandardBrowserEnv:remove",
      "signature" : "",
      "fileName" : "lib\\helpers\\cookies.js",
      "lineNumber" : 50,
      "columnNumber" : 14,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function remove() {}",
            "typeFullName" : "ANY",
            "lineNumber" : 50,
            "columnNumber" : 14,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function remove() {}",
            "typeFullName" : "ANY",
            "lineNumber" : 50,
            "columnNumber" : 14,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\cookies.js::program:nonStandardBrowserEnv:write",
      "signature" : "",
      "fileName" : "lib\\helpers\\cookies.js",
      "lineNumber" : 48,
      "columnNumber" : 13,
      "usages" : [
        {
          "targetObj" : {
            "name" : "write",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\helpers\\cookies.js::program:nonStandardBrowserEnv:write",
            "lineNumber" : 40,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "write",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\helpers\\cookies.js::program:nonStandardBrowserEnv:write",
            "lineNumber" : 40,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\cookies.js::program:standardBrowserEnv",
      "signature" : "",
      "fileName" : "lib\\helpers\\cookies.js",
      "lineNumber" : 9,
      "columnNumber" : 3,
      "usages" : [
        {
          "targetObj" : {
            "name" : "standardBrowserEnv",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\cookies.js::program:standardBrowserEnv",
            "lineNumber" : 9,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "standardBrowserEnv",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\cookies.js::program:standardBrowserEnv",
            "lineNumber" : 9,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\cookies.js::program:standardBrowserEnv:read",
      "signature" : "",
      "fileName" : "lib\\helpers\\cookies.js",
      "lineNumber" : 34,
      "columnNumber" : 12,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 34,
            "columnNumber" : 12,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 34,
            "columnNumber" : 12,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "match",
            "typeFullName" : "RegExpMatchArray",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "document.cookie.match",
            "typeFullName" : "ANY",
            "resolvedMethod" : "document.cookie.match",
            "lineNumber" : 35,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "RegExp",
              "resolvedMethod" : "RegExp",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "RegExp",
              "position" : 1,
              "lineNumber" : 35,
              "columnNumber" : 14
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "decodeURIComponent",
            "typeFullName" : "ANY",
            "resolvedMethod" : "decodeURIComponent",
            "lineNumber" : 39,
            "columnNumber" : 31,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "decodeURIComponent",
            "typeFullName" : "ANY",
            "resolvedMethod" : "decodeURIComponent",
            "lineNumber" : 39,
            "columnNumber" : 31,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\cookies.js::program:standardBrowserEnv:remove",
      "signature" : "",
      "fileName" : "lib\\helpers\\cookies.js",
      "lineNumber" : 39,
      "columnNumber" : 14,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 39,
            "columnNumber" : 14,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 39,
            "columnNumber" : 14,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "name",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 39,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "name",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 39,
            "columnNumber" : 30,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "write",
              "resolvedMethod" : "lib\\helpers\\cookies.js::program:nonStandardBrowserEnv:write",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 40,
              "columnNumber" : 8
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\cookies.js::program:standardBrowserEnv:write",
      "signature" : "",
      "fileName" : "lib\\helpers\\cookies.js",
      "lineNumber" : 11,
      "columnNumber" : 13,
      "usages" : [
        {
          "targetObj" : {
            "name" : "path",
            "typeFullName" : "ANY",
            "position" : 4,
            "lineNumber" : 11,
            "columnNumber" : 50,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "path",
            "typeFullName" : "ANY",
            "position" : 4,
            "lineNumber" : 11,
            "columnNumber" : 50,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 19,
              "columnNumber" : 12
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "isNumber",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isNumber",
            "lineNumber" : 15,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isNumber",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isNumber",
            "lineNumber" : 15,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "cookie",
            "typeFullName" : "__ecma.String[]",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "__ecma.Array.factory",
            "typeFullName" : "__ecma.Array.factory",
            "resolvedMethod" : "__ecma.Array.factory",
            "lineNumber" : 12,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "push",
              "resolvedMethod" : "__ecma.String[]:push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 13,
              "columnNumber" : 8
            },
            {
              "callName" : "Date",
              "resolvedMethod" : "cookie.push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 16,
              "columnNumber" : 10
            },
            {
              "callName" : "push",
              "resolvedMethod" : "__ecma.String[]:push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 20,
              "columnNumber" : 10
            },
            {
              "callName" : "push",
              "resolvedMethod" : "__ecma.String[]:push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 24,
              "columnNumber" : 10
            },
            {
              "callName" : "push",
              "resolvedMethod" : "__ecma.String[]:push",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 28,
              "columnNumber" : 10
            },
            {
              "callName" : "join",
              "resolvedMethod" : "__ecma.String[]:join",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 31,
              "columnNumber" : 26
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "push",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String[]:push",
            "lineNumber" : 45,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "push",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String[]:push",
            "lineNumber" : 45,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 11,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 11,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "encodeURIComponent",
              "resolvedMethod" : "encodeURIComponent",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 13,
              "columnNumber" : 33
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "expires",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 11,
            "columnNumber" : 41,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "expires",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 11,
            "columnNumber" : 41,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isNumber",
              "resolvedMethod" : "../utils.js:utils:isNumber",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 15,
              "columnNumber" : 12
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 11,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 11,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "domain",
            "typeFullName" : "ANY",
            "position" : 5,
            "lineNumber" : 11,
            "columnNumber" : 56,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "domain",
            "typeFullName" : "ANY",
            "position" : 5,
            "lineNumber" : 11,
            "columnNumber" : 56,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 23,
              "columnNumber" : 12
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\deprecatedMethod.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\deprecatedMethod.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\deprecatedMethod.js::program:deprecatedMethod",
      "signature" : "",
      "fileName" : "lib\\helpers\\deprecatedMethod.js",
      "lineNumber" : 15,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function deprecatedMethod(method, instead, docs) {\n  try {\n    console.warn(\n      'DEPRECATED method `' + method + '`.' +\n      (instead ? ' Use `' + instead + '` instead.' : '') +\n      ' This method will be removed in a future release.');\n\n    if (docs) {\n      console.warn('For more information about usage see ' + docs);\n    }\n  } catch (e) { /* Ignore */ }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 15,
            "columnNumber" : 15,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function deprecatedMethod(method, instead, docs) {\n  try {\n    console.warn(\n      'DEPRECATED method `' + method + '`.' +\n      (instead ? ' Use `' + instead + '` instead.' : '') +\n      ' This method will be removed in a future release.');\n\n    if (docs) {\n      console.warn('For more information about usage see ' + docs);\n    }\n  } catch (e) { /* Ignore */ }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 15,
            "columnNumber" : 15,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\formDataToJSON.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\formDataToJSON.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "matchAll",
              "resolvedMethod" : "../utils.js:utils:matchAll",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 17,
              "columnNumber" : 9
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "object"
              ],
              "returnType" : "ANY",
              "lineNumber" : 54,
              "columnNumber" : 20
            },
            {
              "callName" : "hasOwnProp",
              "resolvedMethod" : "../utils.js:utils:hasOwnProp",
              "paramTypes" : [
                "object",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 57,
              "columnNumber" : 10
            },
            {
              "callName" : "isObject",
              "resolvedMethod" : "../utils.js:utils:isObject",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 66,
              "columnNumber" : 26
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 72,
              "columnNumber" : 18
            },
            {
              "callName" : "isFormData",
              "resolvedMethod" : "../utils.js:utils:isFormData",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 79,
              "columnNumber" : 6
            },
            {
              "callName" : "isFunction",
              "resolvedMethod" : "../utils.js:utils:isFunction",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 79,
              "columnNumber" : 36
            },
            {
              "callName" : "forEachEntry",
              "resolvedMethod" : "../utils.js:utils:forEachEntry",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 82,
              "columnNumber" : 4
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\formDataToJSON.js::program:arrayToObject",
      "signature" : "",
      "fileName" : "lib\\helpers\\formDataToJSON.js",
      "lineNumber" : 29,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "arrayToObject",
            "typeFullName" : "object",
            "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:arrayToObject",
            "lineNumber" : 73,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "arrayToObject",
            "typeFullName" : "object",
            "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:arrayToObject",
            "lineNumber" : 73,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "arr",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 29,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "arr",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 29,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "keys",
              "resolvedMethod" : "Object.keys",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 31,
              "columnNumber" : 15
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\formDataToJSON.js::program:formDataToJSON",
      "signature" : "",
      "fileName" : "lib\\helpers\\formDataToJSON.js",
      "lineNumber" : 49,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "formDataToJSON",
            "typeFullName" : "{ [x: __ecma.String]: ANY; }",
            "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:formDataToJSON",
            "lineNumber" : 61,
            "columnNumber" : 49,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "formDataToJSON",
            "typeFullName" : "{ [x: __ecma.String]: ANY; }",
            "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:formDataToJSON",
            "lineNumber" : 61,
            "columnNumber" : 49,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "formData",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 49,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "formData",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 49,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isFormData",
              "resolvedMethod" : "../utils.js:utils:isFormData",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 79,
              "columnNumber" : 6
            },
            {
              "callName" : "forEachEntry",
              "resolvedMethod" : "../utils.js:utils:forEachEntry",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 82,
              "columnNumber" : 4
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "forEachEntry",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:forEachEntry",
            "lineNumber" : 82,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "forEachEntry",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:forEachEntry",
            "lineNumber" : 82,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\formDataToJSON.js::program:formDataToJSON:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\formDataToJSON.js",
      "lineNumber" : 82,
      "columnNumber" : 33,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 82,
            "columnNumber" : 33,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 82,
            "columnNumber" : 33,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "name",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 82,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "name",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 82,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "parsePropPath",
              "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:parsePropPath",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 83,
              "columnNumber" : 16
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 82,
            "columnNumber" : 40,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 82,
            "columnNumber" : 40,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "buildPath",
              "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:formDataToJSON:buildPath",
              "paramTypes" : [
                "ANY",
                "ANY",
                "object",
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 83,
              "columnNumber" : 6
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\formDataToJSON.js::program:formDataToJSON:buildPath",
      "signature" : "",
      "fileName" : "lib\\helpers\\formDataToJSON.js",
      "lineNumber" : 50,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "index",
            "typeFullName" : "ANY",
            "position" : 4,
            "lineNumber" : 50,
            "columnNumber" : 42,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "index",
            "typeFullName" : "ANY",
            "position" : 4,
            "lineNumber" : 50,
            "columnNumber" : 42,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "buildPath",
              "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:formDataToJSON:buildPath",
              "paramTypes" : [
                "ANY",
                "ANY",
                "ANY",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 4,
              "lineNumber" : 70,
              "columnNumber" : 19
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "buildPath",
            "typeFullName" : "__ecma.Boolean",
            "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:formDataToJSON:buildPath",
            "lineNumber" : 83,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "buildPath",
            "typeFullName" : "__ecma.Boolean",
            "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:formDataToJSON:buildPath",
            "lineNumber" : 83,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "name",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "!name && utils.isArray",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.conditional",
            "lineNumber" : 54,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "hasOwnProp",
              "resolvedMethod" : "../utils.js:utils:hasOwnProp",
              "paramTypes" : [
                "object",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 57,
              "columnNumber" : 10
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "target",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 50,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "target",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 50,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "object"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 54,
              "columnNumber" : 20
            },
            {
              "callName" : "hasOwnProp",
              "resolvedMethod" : "../utils.js:utils:hasOwnProp",
              "paramTypes" : [
                "object",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 57,
              "columnNumber" : 10
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "path",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 50,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "path",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 50,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "buildPath",
              "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:formDataToJSON:buildPath",
              "paramTypes" : [
                "ANY",
                "ANY",
                "ANY",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 70,
              "columnNumber" : 19
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 50,
            "columnNumber" : 27,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 50,
            "columnNumber" : 27,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "",
              "resolvedMethod" : "_tmp_2.push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 58,
              "columnNumber" : 38
            },
            {
              "callName" : "buildPath",
              "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:formDataToJSON:buildPath",
              "paramTypes" : [
                "ANY",
                "ANY",
                "ANY",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 70,
              "columnNumber" : 19
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\formDataToJSON.js::program:parsePropPath",
      "signature" : "",
      "fileName" : "lib\\helpers\\formDataToJSON.js",
      "lineNumber" : 12,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "parsePropPath",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:parsePropPath",
            "lineNumber" : 83,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "parsePropPath",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\formDataToJSON.js::program:parsePropPath",
            "lineNumber" : 83,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "name",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 12,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "name",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 12,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "matchAll",
              "resolvedMethod" : "../utils.js:utils:matchAll",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 17,
              "columnNumber" : 9
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "matchAll",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:matchAll",
            "lineNumber" : 17,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "matchAll",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:matchAll",
            "lineNumber" : 17,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\formDataToJSON.js::program:parsePropPath:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\formDataToJSON.js",
      "lineNumber" : 17,
      "columnNumber" : 51,
      "usages" : [
        {
          "targetObj" : {
            "name" : "match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 17,
            "columnNumber" : 51,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 17,
            "columnNumber" : 51,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\formDataToStream.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\formDataToStream.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "textEncoder",
            "typeFullName" : "util:TextEncoder",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new TextEncoder",
            "typeFullName" : "TextEncoder",
            "resolvedMethod" : "TextEncoder",
            "lineNumber" : 8,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "encode",
              "resolvedMethod" : "util:TextEncoder:encode",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 11,
              "columnNumber" : 19
            },
            {
              "callName" : "encode",
              "resolvedMethod" : "util:TextEncoder:encode",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 77,
              "columnNumber" : 24
            },
            {
              "callName" : "encode",
              "resolvedMethod" : "util:TextEncoder:encode",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 78,
              "columnNumber" : 22
            }
          ],
          "argToCalls" : [
            {
              "callName" : "TextEncoder",
              "resolvedMethod" : "TextEncoder",
              "paramTypes" : [
              ],
              "returnType" : "TextEncoder",
              "position" : 1,
              "lineNumber" : 8,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "BOUNDARY_ALPHABET",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "utils.ALPHABET.ALPHA_DIGIT + '-_'",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.addition",
            "lineNumber" : 6,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "generateString",
              "resolvedMethod" : "../utils.js:utils:generateString",
              "paramTypes" : [
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 66,
              "columnNumber" : 27
            }
          ]
        },
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "generateString",
              "resolvedMethod" : "../utils.js:utils:generateString",
              "paramTypes" : [
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 66,
              "columnNumber" : 27
            },
            {
              "callName" : "isFormData",
              "resolvedMethod" : "../utils.js:utils:isFormData",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 69,
              "columnNumber" : 6
            },
            {
              "callName" : "toFiniteNumber",
              "resolvedMethod" : "../utils.js:utils:toFiniteNumber",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "lineNumber" : 89,
              "columnNumber" : 18
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "Readable",
            "typeFullName" : "stream:Readable",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "require(\"stream\").Readable",
            "lineNumber" : 2,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "from",
              "resolvedMethod" : "stream:Readable:from",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "AsyncGenerator<any, void, ANY>",
              "lineNumber" : 101,
              "columnNumber" : 9
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\formDataToStream.js::program:FormDataPart:<init>",
      "signature" : "",
      "fileName" : "lib\\helpers\\formDataToStream.js",
      "lineNumber" : 15,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "constructor(name, value) {\n    const {escapeName} = this.constructor;\n    const isStringValue = utils.isString(value);\n\n    let headers = `Content-Disposition: form-data; name=\"${escapeName(name)}\"${\n      !isStringValue && value.name ? `; filename=\"${escapeName(value.name)}\"` : ''\n    }${CRLF}`;\n\n    if (isStringValue) {\n      value = textEncoder.encode(String(value).replace(/\\r?\\n|\\r\\n?/g, CRLF));\n    } else {\n      headers += `Content-Type: ${value.type || \"application/octet-stream\"}${CRLF}`\n    }\n\n    this.headers = textEncoder.encode(headers + CRLF);\n\n    this.contentLength = isStringValue ? value.byteLength : value.size;\n\n    this.size = this.headers.byteLength + this.contentLength + CRLF_BYTES_COUNT;\n\n    this.name = name;\n    this.value = value;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 15,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "constructor(name, value) {\n    const {escapeName} = this.constructor;\n    const isStringValue = utils.isString(value);\n\n    let headers = `Content-Disposition: form-data; name=\"${escapeName(name)}\"${\n      !isStringValue && value.name ? `; filename=\"${escapeName(value.name)}\"` : ''\n    }${CRLF}`;\n\n    if (isStringValue) {\n      value = textEncoder.encode(String(value).replace(/\\r?\\n|\\r\\n?/g, CRLF));\n    } else {\n      headers += `Content-Type: ${value.type || \"application/octet-stream\"}${CRLF}`\n    }\n\n    this.headers = textEncoder.encode(headers + CRLF);\n\n    this.contentLength = isStringValue ? value.byteLength : value.size;\n\n    this.size = this.headers.byteLength + this.contentLength + CRLF_BYTES_COUNT;\n\n    this.name = name;\n    this.value = value;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 15,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "name",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 15,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "name",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 15,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "escapeName",
              "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:FormDataPart:escapeName",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 19,
              "columnNumber" : 59
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 15,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 15,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "Uint8Array"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 17,
              "columnNumber" : 26
            },
            {
              "callName" : "String",
              "resolvedMethod" : "String",
              "paramTypes" : [
                "Uint8Array"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 24,
              "columnNumber" : 33
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "encode",
            "typeFullName" : "ANY",
            "resolvedMethod" : "util:TextEncoder:encode",
            "lineNumber" : 11,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "encode",
            "typeFullName" : "ANY",
            "resolvedMethod" : "util:TextEncoder:encode",
            "lineNumber" : 11,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\formDataToStream.js::program:FormDataPart:encode",
      "signature" : "",
      "fileName" : "lib\\helpers\\formDataToStream.js",
      "lineNumber" : 39,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "encode",
            "typeFullName" : "AsyncGenerator<any, void, ANY>",
            "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:FormDataPart:encode",
            "lineNumber" : 104,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "encode",
            "typeFullName" : "AsyncGenerator<any, void, ANY>",
            "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:FormDataPart:encode",
            "lineNumber" : 104,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "Uint8Array",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "_tmp_3.value",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 42,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isTypedArray",
              "resolvedMethod" : "../utils.js:utils:isTypedArray",
              "paramTypes" : [
                "Uint8Array"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 44,
              "columnNumber" : 7
            },
            {
              "callName" : "readBlob",
              "resolvedMethod" : "lib\\helpers\\readBlob.js::program:readBlob",
              "paramTypes" : [
                "Uint8Array"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 47,
              "columnNumber" : 13
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "isTypedArray",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isTypedArray",
            "lineNumber" : 127,
            "columnNumber" : 38,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isTypedArray",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isTypedArray",
            "lineNumber" : 127,
            "columnNumber" : 38,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\formDataToStream.js::program:FormDataPart:escapeName",
      "signature" : "",
      "fileName" : "lib\\helpers\\formDataToStream.js",
      "lineNumber" : 53,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "escapeName",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:FormDataPart:escapeName",
            "lineNumber" : 20,
            "columnNumber" : 52,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "escapeName",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:FormDataPart:escapeName",
            "lineNumber" : 20,
            "columnNumber" : 52,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "name",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 53,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "name",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 53,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "String",
              "resolvedMethod" : "String",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 54,
              "columnNumber" : 13
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\formDataToStream.js::program:FormDataPart:escapeName:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\formDataToStream.js",
      "lineNumber" : 54,
      "columnNumber" : 46,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(match) => ({\n        '\\r' : '%0D',\n        '\\n' : '%0A',\n        '\"' : '%22',\n      }[match])",
            "typeFullName" : "ANY",
            "lineNumber" : 54,
            "columnNumber" : 46,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(match) => ({\n        '\\r' : '%0D',\n        '\\n' : '%0A',\n        '\"' : '%22',\n      }[match])",
            "typeFullName" : "ANY",
            "lineNumber" : 54,
            "columnNumber" : 46,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\formDataToStream.js::program:anonymous:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\formDataToStream.js",
      "lineNumber" : 81,
      "columnNumber" : 47,
      "usages" : [
        {
          "targetObj" : {
            "name" : "([name, value]) => {\n    const part = new FormDataPart(name, value);\n    contentLength += part.size;\n    return part;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 81,
            "columnNumber" : 47,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "([name, value]) => {\n    const part = new FormDataPart(name, value);\n    contentLength += part.size;\n    return part;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 81,
            "columnNumber" : 47,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "part",
            "typeFullName" : "lib\\helpers\\formDataToStream.js::program:FormDataPart",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new FormDataPart",
            "typeFullName" : "lib\\helpers\\formDataToStream.js::program:FormDataPart",
            "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:FormDataPart",
            "lineNumber" : 82,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "FormDataPart",
              "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:FormDataPart",
              "paramTypes" : [
                "ANY",
                "Uint8Array"
              ],
              "returnType" : "lib\\helpers\\formDataToStream.js::program:FormDataPart",
              "position" : 1,
              "lineNumber" : 82,
              "columnNumber" : 10
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\formDataToStream.js::program:anonymous:anonymous1",
      "signature" : "",
      "fileName" : "lib\\helpers\\formDataToStream.js",
      "lineNumber" : 101,
      "columnNumber" : 24,
      "usages" : [
        {
          "targetObj" : {
            "name" : "anonymous1",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:anonymous:anonymous1",
            "lineNumber" : 101,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "anonymous1",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:anonymous:anonymous1",
            "lineNumber" : 101,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\formDataToStream.js::program:formDataToStream",
      "signature" : "",
      "fileName" : "lib\\helpers\\formDataToStream.js",
      "lineNumber" : 62,
      "columnNumber" : 25,
      "usages" : [
        {
          "targetObj" : {
            "name" : "generateString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:generateString",
            "lineNumber" : 66,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "generateString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:generateString",
            "lineNumber" : 66,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "ArrayConstructor:from",
            "lineNumber" : 334,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "ArrayConstructor:from",
            "lineNumber" : 334,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "stream:Readable:from",
            "lineNumber" : 334,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "from",
            "typeFullName" : "ANY",
            "resolvedMethod" : "stream:Readable:from",
            "lineNumber" : 334,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "formDataToStream",
            "typeFullName" : "stream:Readable:from:<returnValue>",
            "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:formDataToStream",
            "lineNumber" : 274,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "formDataToStream",
            "typeFullName" : "stream:Readable:from:<returnValue>",
            "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:formDataToStream",
            "lineNumber" : 274,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "form",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 62,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "form",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 62,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "entries",
              "resolvedMethod" : "Object.entries",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 81,
              "columnNumber" : 27
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isFormData",
              "resolvedMethod" : "../utils.js:utils:isFormData",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 69,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "contentLength",
            "typeFullName" : "__ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "utils.toFiniteNumber",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:toFiniteNumber",
            "lineNumber" : 89,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "toFiniteNumber",
              "resolvedMethod" : "../utils.js:utils:toFiniteNumber",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 89,
              "columnNumber" : 18
            },
            {
              "callName" : "isFinite",
              "resolvedMethod" : "Number.isFinite",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 95,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "TypeError",
            "typeFullName" : "ANY",
            "resolvedMethod" : "TypeError",
            "lineNumber" : 70,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "TypeError",
            "typeFullName" : "ANY",
            "resolvedMethod" : "TypeError",
            "lineNumber" : 70,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "headersHandler",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:headersHandler",
            "lineNumber" : 99,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "headersHandler",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:headersHandler",
            "lineNumber" : 99,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "size",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "_tmp_7.size === void 0 ? 25 : _tmp_7.size",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.conditional",
            "lineNumber" : 65,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "generateString",
              "resolvedMethod" : "../utils.js:utils:generateString",
              "paramTypes" : [
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 66,
              "columnNumber" : 27
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\fromDataURI.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\fromDataURI.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\fromDataURI.js::program:require",
            "lineNumber" : 5,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\fromDataURI.js::program:require",
            "lineNumber" : 5,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\fromDataURI.js::program:fromDataURI",
      "signature" : "",
      "fileName" : "lib\\helpers\\fromDataURI.js",
      "lineNumber" : 19,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "fromDataURI",
            "typeFullName" : "Buffer",
            "resolvedMethod" : "lib\\helpers\\fromDataURI.js::program:fromDataURI",
            "lineNumber" : 222,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "fromDataURI",
            "typeFullName" : "Buffer",
            "resolvedMethod" : "lib\\helpers\\fromDataURI.js::program:fromDataURI",
            "lineNumber" : 222,
            "columnNumber" : 24,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "uri",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 19,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "uri",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 19,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "slice",
              "resolvedMethod" : "__ecma.String:slice",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 28,
              "columnNumber" : 28
            }
          ],
          "argToCalls" : [
            {
              "callName" : "parseProtocol",
              "resolvedMethod" : "lib\\helpers\\parseProtocol.js::program:parseProtocol",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 21,
              "columnNumber" : 19
            },
            {
              "callName" : "exec",
              "resolvedMethod" : "DATA_URL_PATTERN.exec",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 30,
              "columnNumber" : 18
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "body",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "match[3]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 38,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "decodeURIComponent",
              "resolvedMethod" : "decodeURIComponent",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 39,
              "columnNumber" : 31
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "buffer",
            "typeFullName" : "Buffer",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "Buffer.from",
            "typeFullName" : "Buffer.from",
            "resolvedMethod" : "Buffer.from",
            "lineNumber" : 39,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "",
              "resolvedMethod" : "_tmp_3.push",
              "paramTypes" : [
                "Buffer"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 46,
              "columnNumber" : 24
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\isAbsoluteURL.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\isAbsoluteURL.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\isAbsoluteURL.js::program:isAbsoluteURL",
      "signature" : "",
      "fileName" : "lib\\helpers\\isAbsoluteURL.js",
      "lineNumber" : 10,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "isAbsoluteURL",
            "typeFullName" : "__ecma.String:test:<returnValue>",
            "resolvedMethod" : "lib\\helpers\\isAbsoluteURL.js::program:isAbsoluteURL",
            "lineNumber" : 17,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isAbsoluteURL",
            "typeFullName" : "__ecma.String:test:<returnValue>",
            "resolvedMethod" : "lib\\helpers\\isAbsoluteURL.js::program:isAbsoluteURL",
            "lineNumber" : 17,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "url",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 10,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "url",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 10,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "test",
              "resolvedMethod" : "__ecma.String:test",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 14,
              "columnNumber" : 9
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\isAxiosError.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\isAxiosError.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\isAxiosError.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "isObject",
              "resolvedMethod" : "../utils.js:utils:isObject",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 13,
              "columnNumber" : 9
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\isAxiosError.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\isAxiosError.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\isAxiosError.js::program:isAxiosError",
      "signature" : "",
      "fileName" : "lib\\helpers\\isAxiosError.js",
      "lineNumber" : 12,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 12,
            "columnNumber" : 15,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 12,
            "columnNumber" : 15,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "payload",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 12,
            "columnNumber" : 37,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "payload",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 12,
            "columnNumber" : 37,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isObject",
              "resolvedMethod" : "../utils.js:utils:isObject",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 13,
              "columnNumber" : 9
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\isURLSameOrigin.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\isURLSameOrigin.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\isURLSameOrigin.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 56,
              "columnNumber" : 22
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\isURLSameOrigin.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\isURLSameOrigin.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\isURLSameOrigin.js::program:nonStandardBrowserEnv",
      "signature" : "",
      "fileName" : "lib\\helpers\\isURLSameOrigin.js",
      "lineNumber" : 63,
      "columnNumber" : 3,
      "usages" : [
        {
          "targetObj" : {
            "name" : "nonStandardBrowserEnv",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\isURLSameOrigin.js::program:nonStandardBrowserEnv",
            "lineNumber" : 63,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "nonStandardBrowserEnv",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\isURLSameOrigin.js::program:nonStandardBrowserEnv",
            "lineNumber" : 63,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\isURLSameOrigin.js::program:nonStandardBrowserEnv:isURLSameOrigin",
      "signature" : "",
      "fileName" : "lib\\helpers\\isURLSameOrigin.js",
      "lineNumber" : 64,
      "columnNumber" : 11,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function isURLSameOrigin() {\n      return true;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 64,
            "columnNumber" : 11,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function isURLSameOrigin() {\n      return true;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 64,
            "columnNumber" : 11,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\isURLSameOrigin.js::program:standardBrowserEnv",
      "signature" : "",
      "fileName" : "lib\\helpers\\isURLSameOrigin.js",
      "lineNumber" : 10,
      "columnNumber" : 3,
      "usages" : [
        {
          "targetObj" : {
            "name" : "standardBrowserEnv",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\isURLSameOrigin.js::program:standardBrowserEnv",
            "lineNumber" : 10,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "standardBrowserEnv",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\isURLSameOrigin.js::program:standardBrowserEnv",
            "lineNumber" : 10,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "urlParsingNode",
            "typeFullName" : "HTMLAnchorElement",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "document.createElement",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Document:createElement",
            "lineNumber" : 12,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "setAttribute",
              "resolvedMethod" : "HTMLAnchorElement:setAttribute",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 26,
              "columnNumber" : 8
            },
            {
              "callName" : "setAttribute",
              "resolvedMethod" : "HTMLAnchorElement:setAttribute",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 30,
              "columnNumber" : 6
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "createElement",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Document:createElement",
            "lineNumber" : 12,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "createElement",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Document:createElement",
            "lineNumber" : 12,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\isURLSameOrigin.js::program:standardBrowserEnv:isURLSameOrigin",
      "signature" : "",
      "fileName" : "lib\\helpers\\isURLSameOrigin.js",
      "lineNumber" : 55,
      "columnNumber" : 11,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 55,
            "columnNumber" : 11,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 55,
            "columnNumber" : 11,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "requestURL",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 55,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "requestURL",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 55,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 56,
              "columnNumber" : 22
            },
            {
              "callName" : "resolveURL",
              "resolvedMethod" : "lib\\helpers\\isURLSameOrigin.js::program:standardBrowserEnv:resolveURL",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 56,
              "columnNumber" : 52
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\isURLSameOrigin.js::program:standardBrowserEnv:resolveURL",
      "signature" : "",
      "fileName" : "lib\\helpers\\isURLSameOrigin.js",
      "lineNumber" : 21,
      "columnNumber" : 4,
      "usages" : [
        {
          "targetObj" : {
            "name" : "resolveURL",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\isURLSameOrigin.js::program:standardBrowserEnv:resolveURL",
            "lineNumber" : 47,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "resolveURL",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\isURLSameOrigin.js::program:standardBrowserEnv:resolveURL",
            "lineNumber" : 47,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "setAttribute",
            "typeFullName" : "ANY",
            "resolvedMethod" : "HTMLAnchorElement:setAttribute",
            "lineNumber" : 30,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "setAttribute",
            "typeFullName" : "ANY",
            "resolvedMethod" : "HTMLAnchorElement:setAttribute",
            "lineNumber" : 30,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\null.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\null.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\parseHeaders.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\parseHeaders.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\parseHeaders.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "toObjectSet",
              "resolvedMethod" : "../utils.js:utils:toObjectSet",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 7,
              "columnNumber" : 26
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\parseHeaders.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\parseHeaders.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "toObjectSet",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:toObjectSet",
            "lineNumber" : 7,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toObjectSet",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:toObjectSet",
            "lineNumber" : 7,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\parseHeaders.js::program:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\parseHeaders.js",
      "lineNumber" : 28,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 28,
            "columnNumber" : 15,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 28,
            "columnNumber" : 15,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "rawHeaders",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 28,
            "columnNumber" : 15,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "rawHeaders",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 28,
            "columnNumber" : 15,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "split",
              "resolvedMethod" : "__ecma.String:split",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 34,
              "columnNumber" : 16
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "split",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:split",
            "lineNumber" : 591,
            "columnNumber" : 58,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "split",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:split",
            "lineNumber" : 591,
            "columnNumber" : 58,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\parseHeaders.js::program:anonymous:parser",
      "signature" : "",
      "fileName" : "lib\\helpers\\parseHeaders.js",
      "lineNumber" : 34,
      "columnNumber" : 47,
      "usages" : [
        {
          "targetObj" : {
            "name" : "substring",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:substring",
            "lineNumber" : 37,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "substring",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:substring",
            "lineNumber" : 37,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "val",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "line.substring",
            "typeFullName" : "ANY",
            "resolvedMethod" : "line.substring",
            "lineNumber" : 37,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "push",
              "resolvedMethod" : "parsed[key].push",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 45,
              "columnNumber" : 8
            },
            {
              "callName" : "",
              "resolvedMethod" : "_tmp_7.push",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 47,
              "columnNumber" : 23
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "i",
            "typeFullName" : "__ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "line.indexOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:indexOf",
            "lineNumber" : 35,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "substring",
              "resolvedMethod" : "__ecma.String:substring",
              "paramTypes" : [
                "__ecma.Number",
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 36,
              "columnNumber" : 10
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "line",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 34,
            "columnNumber" : 63,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "line",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 34,
            "columnNumber" : 63,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "indexOf",
              "resolvedMethod" : "__ecma.String:indexOf",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 35,
              "columnNumber" : 8
            },
            {
              "callName" : "substring",
              "resolvedMethod" : "__ecma.String:substring",
              "paramTypes" : [
                "__ecma.Number",
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "lineNumber" : 36,
              "columnNumber" : 10
            },
            {
              "callName" : "substring",
              "resolvedMethod" : "__ecma.String:substring",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 37,
              "columnNumber" : 10
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 34,
            "columnNumber" : 47,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 34,
            "columnNumber" : 47,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\parseProtocol.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\parseProtocol.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\parseProtocol.js::program:parseProtocol",
      "signature" : "",
      "fileName" : "lib\\helpers\\parseProtocol.js",
      "lineNumber" : 3,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "parseProtocol",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\parseProtocol.js::program:parseProtocol",
            "lineNumber" : 21,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "parseProtocol",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\parseProtocol.js::program:parseProtocol",
            "lineNumber" : 21,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "url",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 3,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "url",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 3,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "exec",
              "resolvedMethod" : "__ecma.String:exec",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 4,
              "columnNumber" : 16
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\readBlob.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\readBlob.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\readBlob.js::program:readBlob",
      "signature" : "",
      "fileName" : "lib\\helpers\\readBlob.js",
      "lineNumber" : 3,
      "columnNumber" : 17,
      "usages" : [
        {
          "targetObj" : {
            "name" : "readBlob",
            "typeFullName" : "AsyncGenerator<any, void, ANY>",
            "resolvedMethod" : "lib\\helpers\\readBlob.js::program:readBlob",
            "lineNumber" : 47,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "readBlob",
            "typeFullName" : "AsyncGenerator<any, void, ANY>",
            "resolvedMethod" : "lib\\helpers\\readBlob.js::program:readBlob",
            "lineNumber" : 47,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "blob",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 3,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "blob",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 3,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "stream",
              "resolvedMethod" : "blob.stream",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 5,
              "columnNumber" : 11
            },
            {
              "callName" : "arrayBuffer",
              "resolvedMethod" : "blob.arrayBuffer",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 7,
              "columnNumber" : 16
            },
            {
              "callName" : "asyncIterator",
              "resolvedMethod" : "blob[asyncIterator]",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 9,
              "columnNumber" : 11
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\speedometer.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\speedometer.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\speedometer.js::program:speedometer",
      "signature" : "",
      "fileName" : "lib\\helpers\\speedometer.js",
      "lineNumber" : 9,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "speedometer",
            "typeFullName" : "Function",
            "resolvedMethod" : "lib\\helpers\\speedometer.js::program:speedometer",
            "lineNumber" : 44,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "speedometer",
            "typeFullName" : "Function",
            "resolvedMethod" : "lib\\helpers\\speedometer.js::program:speedometer",
            "lineNumber" : 44,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "bytes",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new Array",
            "typeFullName" : "ANY",
            "resolvedMethod" : null,
            "lineNumber" : 11,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "Array",
              "resolvedMethod" : "Array",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 11,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "timestamps",
            "typeFullName" : "__ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new Array",
            "typeFullName" : "ANY",
            "resolvedMethod" : null,
            "lineNumber" : 12,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "Array",
              "resolvedMethod" : "Array",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 12,
              "columnNumber" : 8
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\speedometer.js::program:speedometer:push",
      "signature" : "",
      "fileName" : "lib\\helpers\\speedometer.js",
      "lineNumber" : 19,
      "columnNumber" : 9,
      "usages" : [
        {
          "targetObj" : {
            "name" : "push",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\speedometer.js::program:speedometer:push",
            "lineNumber" : 45,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "push",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\speedometer.js::program:speedometer:push",
            "lineNumber" : 45,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "round",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Math:round",
            "lineNumber" : 51,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "round",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Math:round",
            "lineNumber" : 51,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\spread.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\spread.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\spread.js::program:spread",
      "signature" : "",
      "fileName" : "lib\\helpers\\spread.js",
      "lineNumber" : 24,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 24,
            "columnNumber" : 15,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 24,
            "columnNumber" : 15,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "callback",
            "typeFullName" : "Function",
            "position" : 1,
            "lineNumber" : 24,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "callback",
            "typeFullName" : "Function",
            "position" : 1,
            "lineNumber" : 24,
            "columnNumber" : 31,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "apply",
              "resolvedMethod" : "Function:apply",
              "paramTypes" : [
                "__ecma.Null",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 26,
              "columnNumber" : 11
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\spread.js::program:spread:wrap",
      "signature" : "",
      "fileName" : "lib\\helpers\\spread.js",
      "lineNumber" : 25,
      "columnNumber" : 9,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function wrap(arr) {\n    return callback.apply(null, arr);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 25,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function wrap(arr) {\n    return callback.apply(null, arr);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 25,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "arr",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 25,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "arr",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 25,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "apply",
              "resolvedMethod" : "Function:apply",
              "paramTypes" : [
                "__ecma.Null",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 26,
              "columnNumber" : 11
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "apply",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Function:apply",
            "lineNumber" : 15,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "apply",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Function:apply",
            "lineNumber" : 15,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\throttle.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\throttle.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\throttle.js::program:throttle",
      "signature" : "",
      "fileName" : "lib\\helpers\\throttle.js",
      "lineNumber" : 9,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "throttle",
            "typeFullName" : "Function",
            "resolvedMethod" : "lib\\helpers\\throttle.js::program:throttle",
            "lineNumber" : 56,
            "columnNumber" : 31,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "throttle",
            "typeFullName" : "Function",
            "resolvedMethod" : "lib\\helpers\\throttle.js::program:throttle",
            "lineNumber" : 56,
            "columnNumber" : 31,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "fn",
            "typeFullName" : "Function",
            "position" : 1,
            "lineNumber" : 9,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "fn",
            "typeFullName" : "Function",
            "position" : 1,
            "lineNumber" : 9,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "apply",
              "resolvedMethod" : "Function:apply",
              "paramTypes" : [
                "__ecma.Null",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 21,
              "columnNumber" : 13
            },
            {
              "callName" : "apply",
              "resolvedMethod" : "Function:apply",
              "paramTypes" : [
                "__ecma.Null",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 27,
              "columnNumber" : 15
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\throttle.js::program:throttle:throttled",
      "signature" : "",
      "fileName" : "lib\\helpers\\throttle.js",
      "lineNumber" : 13,
      "columnNumber" : 9,
      "usages" : [
        {
          "targetObj" : {
            "name" : "args",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 13,
            "columnNumber" : 35,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "args",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 13,
            "columnNumber" : 35,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "apply",
              "resolvedMethod" : "Function:apply",
              "paramTypes" : [
                "__ecma.Null",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 21,
              "columnNumber" : 13
            },
            {
              "callName" : "apply",
              "resolvedMethod" : "Function:apply",
              "paramTypes" : [
                "__ecma.Null",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 27,
              "columnNumber" : 15
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "timer",
            "typeFullName" : "NodeJS.Timeout",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "setTimeout",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\throttle.js::program:setTimeout",
            "lineNumber" : 24,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "clearTimeout",
              "resolvedMethod" : "lib\\helpers\\throttle.js::program:clearTimeout",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 17,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "setTimeout",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\throttle.js::program:setTimeout",
            "lineNumber" : 621,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "setTimeout",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\throttle.js::program:setTimeout",
            "lineNumber" : 621,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "clearTimeout",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\throttle.js::program:clearTimeout",
            "lineNumber" : 17,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "clearTimeout",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\throttle.js::program:clearTimeout",
            "lineNumber" : 17,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "function throttled(force, args) {\n    const now = Date.now();\n    if (force || now - timestamp > threshold) {\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n      timestamp = now;\n      return fn.apply(null, args);\n    }\n    if (!timer) {\n      timer = setTimeout(() => {\n        timer = null;\n        timestamp = Date.now();\n        return fn.apply(null, args);\n      }, threshold - (now - timestamp));\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 13,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function throttled(force, args) {\n    const now = Date.now();\n    if (force || now - timestamp > threshold) {\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n      timestamp = now;\n      return fn.apply(null, args);\n    }\n    if (!timer) {\n      timer = setTimeout(() => {\n        timer = null;\n        timestamp = Date.now();\n        return fn.apply(null, args);\n      }, threshold - (now - timestamp));\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 13,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\throttle.js::program:throttle:throttled:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\throttle.js",
      "lineNumber" : 24,
      "columnNumber" : 25,
      "usages" : [
        {
          "targetObj" : {
            "name" : "() => {\n        timer = null;\n        timestamp = Date.now();\n        return fn.apply(null, args);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 24,
            "columnNumber" : 25,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "() => {\n        timer = null;\n        timestamp = Date.now();\n        return fn.apply(null, args);\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 24,
            "columnNumber" : 25,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toFormData.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\toFormData.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "isPlainObject",
              "resolvedMethod" : "../utils.js:utils:isPlainObject",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 16,
              "columnNumber" : 9
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 16,
              "columnNumber" : 39
            },
            {
              "callName" : "endsWith",
              "resolvedMethod" : "../utils.js:utils:endsWith",
              "paramTypes" : [
                "string | __ecma.Number",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 27,
              "columnNumber" : 9
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 56,
              "columnNumber" : 9
            },
            {
              "callName" : "toFlatObject",
              "resolvedMethod" : "../utils.js:utils:toFlatObject",
              "paramTypes" : [
                "../utils.js:utils",
                "ANY",
                "__ecma.Null",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 59,
              "columnNumber" : 19
            },
            {
              "callName" : "isObject",
              "resolvedMethod" : "../utils.js:utils:isObject",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 87,
              "columnNumber" : 7
            },
            {
              "callName" : "toFlatObject",
              "resolvedMethod" : "../utils.js:utils:toFlatObject",
              "paramTypes" : [
                "{ [x: __ecma.String]: ANY; }",
                "ANY",
                "__ecma.Boolean",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 95,
              "columnNumber" : 12
            },
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 101,
              "columnNumber" : 12
            },
            {
              "callName" : "isSpecCompliantForm",
              "resolvedMethod" : "../utils.js:utils:isSpecCompliantForm",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 110,
              "columnNumber" : 27
            },
            {
              "callName" : "isFunction",
              "resolvedMethod" : "../utils.js:utils:isFunction",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 112,
              "columnNumber" : 7
            },
            {
              "callName" : "isDate",
              "resolvedMethod" : "../utils.js:utils:isDate",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 119,
              "columnNumber" : 8
            },
            {
              "callName" : "isBlob",
              "resolvedMethod" : "../utils.js:utils:isBlob",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 123,
              "columnNumber" : 20
            },
            {
              "callName" : "isArrayBuffer",
              "resolvedMethod" : "../utils.js:utils:isArrayBuffer",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 127,
              "columnNumber" : 8
            },
            {
              "callName" : "isTypedArray",
              "resolvedMethod" : "../utils.js:utils:isTypedArray",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 127,
              "columnNumber" : 38
            },
            {
              "callName" : "endsWith",
              "resolvedMethod" : "../utils.js:utils:endsWith",
              "paramTypes" : [
                "string | __ecma.Number",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 148,
              "columnNumber" : 10
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 154,
              "columnNumber" : 9
            },
            {
              "callName" : "isFileList",
              "resolvedMethod" : "../utils.js:utils:isFileList",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 155,
              "columnNumber" : 10
            },
            {
              "callName" : "endsWith",
              "resolvedMethod" : "../utils.js:utils:endsWith",
              "paramTypes" : [
                "string | __ecma.Number",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 155,
              "columnNumber" : 37
            },
            {
              "callName" : "toArray",
              "resolvedMethod" : "../utils.js:utils:toArray",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 155,
              "columnNumber" : 74
            },
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 161,
              "columnNumber" : 12
            },
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 189,
              "columnNumber" : 8
            },
            {
              "callName" : "forEach",
              "resolvedMethod" : "../utils.js:utils:forEach",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 197,
              "columnNumber" : 4
            },
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 198,
              "columnNumber" : 23
            },
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "string | __ecma.Number"
              ],
              "returnType" : "ANY",
              "lineNumber" : 199,
              "columnNumber" : 22
            },
            {
              "callName" : "isObject",
              "resolvedMethod" : "../utils.js:utils:isObject",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 210,
              "columnNumber" : 7
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "predicates",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "utils.toFlatObject",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:toFlatObject",
            "lineNumber" : 59,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "assign",
              "resolvedMethod" : "Object.assign",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 182,
              "columnNumber" : 25
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:require",
            "lineNumber" : 6,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:require",
            "lineNumber" : 6,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toFormData.js::program:filter",
      "signature" : "",
      "fileName" : "lib\\helpers\\toFormData.js",
      "lineNumber" : 59,
      "columnNumber" : 55,
      "usages" : [
        {
          "targetObj" : {
            "name" : "filter",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:filter",
            "lineNumber" : 58,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "filter",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:filter",
            "lineNumber" : 58,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "prop",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 59,
            "columnNumber" : 71,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "prop",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 59,
            "columnNumber" : 71,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "test",
              "resolvedMethod" : "__ecma.String:test",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 60,
              "columnNumber" : 9
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toFormData.js::program:isFlatArray",
      "signature" : "",
      "fileName" : "lib\\helpers\\toFormData.js",
      "lineNumber" : 55,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "isFlatArray",
            "typeFullName" : "__ecma.Boolean",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:isFlatArray",
            "lineNumber" : 154,
            "columnNumber" : 33,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isFlatArray",
            "typeFullName" : "__ecma.Boolean",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:isFlatArray",
            "lineNumber" : 154,
            "columnNumber" : 33,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "arr",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 55,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "arr",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 55,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "some",
              "resolvedMethod" : "arr.some",
              "paramTypes" : [
                "lib\\helpers\\toFormData.js::program:isVisitable",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 56,
              "columnNumber" : 32
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 56,
              "columnNumber" : 9
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "some",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(predicate: (value: ANY, index: __ecma.Number, array: ANY[]) => unknown, thisArg?: ANY) => __ecma.Boolean:some",
            "lineNumber" : 56,
            "columnNumber" : 32,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "some",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(predicate: (value: ANY, index: __ecma.Number, array: ANY[]) => unknown, thisArg?: ANY) => __ecma.Boolean:some",
            "lineNumber" : 56,
            "columnNumber" : 32,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "some",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:some",
            "lineNumber" : 56,
            "columnNumber" : 32,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "some",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:some",
            "lineNumber" : 56,
            "columnNumber" : 32,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toFormData.js::program:isVisitable",
      "signature" : "",
      "fileName" : "lib\\helpers\\toFormData.js",
      "lineNumber" : 15,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "isVisitable",
            "typeFullName" : "__ecma.Boolean",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:isVisitable",
            "lineNumber" : 171,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isVisitable",
            "typeFullName" : "__ecma.Boolean",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:isVisitable",
            "lineNumber" : 171,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "thing",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 15,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "thing",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 15,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isPlainObject",
              "resolvedMethod" : "../utils.js:utils:isPlainObject",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 16,
              "columnNumber" : 9
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 16,
              "columnNumber" : 39
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toFormData.js::program:removeBrackets",
      "signature" : "",
      "fileName" : "lib\\helpers\\toFormData.js",
      "lineNumber" : 26,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "removeBrackets",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:removeBrackets",
            "lineNumber" : 158,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "removeBrackets",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:removeBrackets",
            "lineNumber" : 158,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "key",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 26,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "key",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 26,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "slice",
              "resolvedMethod" : "string | __ecma.Number:slice",
              "paramTypes" : [
                "__ecma.Number",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 27,
              "columnNumber" : 37
            }
          ],
          "argToCalls" : [
            {
              "callName" : "endsWith",
              "resolvedMethod" : "../utils.js:utils:endsWith",
              "paramTypes" : [
                "string | __ecma.Number",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 27,
              "columnNumber" : 9
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "endsWith",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:endsWith",
            "lineNumber" : 155,
            "columnNumber" : 37,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "endsWith",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:endsWith",
            "lineNumber" : 155,
            "columnNumber" : 37,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "slice",
            "typeFullName" : "ANY",
            "resolvedMethod" : "string | __ecma.Number:slice",
            "lineNumber" : 6,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "slice",
            "typeFullName" : "ANY",
            "resolvedMethod" : "string | __ecma.Number:slice",
            "lineNumber" : 6,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toFormData.js::program:renderKey",
      "signature" : "",
      "fileName" : "lib\\helpers\\toFormData.js",
      "lineNumber" : 39,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "renderKey",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:renderKey",
            "lineNumber" : 175,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "renderKey",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:renderKey",
            "lineNumber" : 175,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "path",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 39,
            "columnNumber" : 19,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "path",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 39,
            "columnNumber" : 19,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "concat",
              "resolvedMethod" : "(string | __ecma.Number)[]:concat",
              "paramTypes" : [
                "string | __ecma.Number"
              ],
              "returnType" : "ANY",
              "lineNumber" : 41,
              "columnNumber" : 9
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "key",
            "typeFullName" : "__ecma.String",
            "position" : 2,
            "lineNumber" : 39,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "key",
            "typeFullName" : "__ecma.String",
            "position" : 2,
            "lineNumber" : 39,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "concat",
              "resolvedMethod" : "(string | __ecma.Number)[]:concat",
              "paramTypes" : [
                "string | __ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 41,
              "columnNumber" : 9
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "concat",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(string | __ecma.Number)[]:concat",
            "lineNumber" : 223,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "concat",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(string | __ecma.Number)[]:concat",
            "lineNumber" : 223,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toFormData.js::program:renderKey:each",
      "signature" : "",
      "fileName" : "lib\\helpers\\toFormData.js",
      "lineNumber" : 41,
      "columnNumber" : 30,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 41,
            "columnNumber" : 30,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 41,
            "columnNumber" : 30,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "token",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 41,
            "columnNumber" : 44,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "token",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 41,
            "columnNumber" : 44,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "removeBrackets",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:removeBrackets",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 43,
              "columnNumber" : 12
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toFormData.js::program:toFormData",
      "signature" : "",
      "fileName" : "lib\\helpers\\toFormData.js",
      "lineNumber" : 86,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "stack",
            "typeFullName" : "() => ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "__ecma.Array.factory",
            "typeFullName" : "__ecma.Array.factory",
            "resolvedMethod" : "__ecma.Array.factory",
            "lineNumber" : 180,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "indexOf",
              "resolvedMethod" : "() => ANY:indexOf",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 191,
              "columnNumber" : 8
            },
            {
              "callName" : "push",
              "resolvedMethod" : "() => ANY:push",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 195,
              "columnNumber" : 4
            },
            {
              "callName" : "pop",
              "resolvedMethod" : "() => ANY:pop",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 207,
              "columnNumber" : 4
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "toFormData",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:toFormData",
            "lineNumber" : 8,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toFormData",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:toFormData",
            "lineNumber" : 8,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 86,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 86,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isObject",
              "resolvedMethod" : "../utils.js:utils:isObject",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 87,
              "columnNumber" : 7
            },
            {
              "callName" : "isObject",
              "resolvedMethod" : "../utils.js:utils:isObject",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 210,
              "columnNumber" : 7
            },
            {
              "callName" : "build",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:toFormData:build",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 214,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "formData",
            "typeFullName" : "__ecma.String",
            "position" : 2,
            "lineNumber" : 86,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "formData",
            "typeFullName" : "__ecma.String",
            "position" : 2,
            "lineNumber" : 86,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "append",
              "resolvedMethod" : "__ecma.String:append",
              "paramTypes" : [
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 161,
              "columnNumber" : 53
            },
            {
              "callName" : "append",
              "resolvedMethod" : "__ecma.String:append",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "__ecma.String",
              "lineNumber" : 175,
              "columnNumber" : 4
            }
          ],
          "argToCalls" : [
            {
              "callName" : "formData = formData || new ",
              "resolvedMethod" : "new",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 92,
              "columnNumber" : 2
            },
            {
              "callName" : "isSpecCompliantForm",
              "resolvedMethod" : "../utils.js:utils:isSpecCompliantForm",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 110,
              "columnNumber" : 27
            },
            {
              "callName" : "call",
              "resolvedMethod" : "visitor.call",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.Boolean",
                "ANY",
                "(string | __ecma.Number)[]",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 198,
              "columnNumber" : 64
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "options",
            "typeFullName" : "{ [x: __ecma.String]: ANY; }",
            "position" : 3,
            "lineNumber" : 86,
            "columnNumber" : 35,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "options",
            "typeFullName" : "{ [x: __ecma.String]: ANY; }",
            "position" : 3,
            "lineNumber" : 86,
            "columnNumber" : 35,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "toFlatObject",
              "resolvedMethod" : "../utils.js:utils:toFlatObject",
              "paramTypes" : [
                "{ [x: __ecma.String]: ANY; }",
                "ANY",
                "__ecma.Boolean",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 95,
              "columnNumber" : 12
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "exposedHelpers",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "Object.assign",
            "typeFullName" : "Object.assign",
            "resolvedMethod" : "Object.assign",
            "lineNumber" : 182,
            "columnNumber" : 25,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "visitor.call",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.Boolean",
                "ANY",
                "(string | __ecma.Number)[]",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 5,
              "lineNumber" : 198,
              "columnNumber" : 64
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "dots",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "options.dots",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 107,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "renderKey",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:renderKey",
              "paramTypes" : [
                "ANY",
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 163,
              "columnNumber" : 31
            },
            {
              "callName" : "renderKey",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:renderKey",
              "paramTypes" : [
                "(string | __ecma.Number)[]",
                "string | __ecma.Number",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 175,
              "columnNumber" : 20
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "visitor",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "options.visitor || defaultVisitor",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.logicalOr",
            "lineNumber" : 106,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "visitor.call",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.Boolean",
                "ANY",
                "(string | __ecma.Number)[]",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 198,
              "columnNumber" : 64
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isFunction",
              "resolvedMethod" : "../utils.js:utils:isFunction",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 112,
              "columnNumber" : 7
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toFormData.js::program:toFormData:build",
      "signature" : "",
      "fileName" : "lib\\helpers\\toFormData.js",
      "lineNumber" : 188,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "indexOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "() => ANY:indexOf",
            "lineNumber" : 559,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "indexOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "() => ANY:indexOf",
            "lineNumber" : 559,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 188,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 188,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 189,
              "columnNumber" : 8
            },
            {
              "callName" : "indexOf",
              "resolvedMethod" : "() => ANY:indexOf",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 191,
              "columnNumber" : 8
            },
            {
              "callName" : "push",
              "resolvedMethod" : "() => ANY:push",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 195,
              "columnNumber" : 4
            },
            {
              "callName" : "forEach",
              "resolvedMethod" : "../utils.js:utils:forEach",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 197,
              "columnNumber" : 4
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "push",
            "typeFullName" : "ANY",
            "resolvedMethod" : "() => ANY:push",
            "lineNumber" : 45,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "push",
            "typeFullName" : "ANY",
            "resolvedMethod" : "() => ANY:push",
            "lineNumber" : 45,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "join",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(string | __ecma.Number)[]:join",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "join",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(string | __ecma.Number)[]:join",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "path",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 188,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "path",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 188,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "join",
              "resolvedMethod" : "(string | __ecma.Number)[]:join",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 192,
              "columnNumber" : 54
            },
            {
              "callName" : "concat",
              "resolvedMethod" : "(string | __ecma.Number)[]:concat",
              "paramTypes" : [
                "string | __ecma.Number"
              ],
              "returnType" : "ANY",
              "lineNumber" : 203,
              "columnNumber" : 25
            }
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "visitor.call",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.Boolean",
                "ANY",
                "(string | __ecma.Number)[]",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 4,
              "lineNumber" : 198,
              "columnNumber" : 64
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "build",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:toFormData:build",
            "lineNumber" : 214,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "build",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:toFormData:build",
            "lineNumber" : 214,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toFormData.js::program:toFormData:build:each",
      "signature" : "",
      "fileName" : "lib\\helpers\\toFormData.js",
      "lineNumber" : 197,
      "columnNumber" : 25,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 197,
            "columnNumber" : 25,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 197,
            "columnNumber" : 25,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "el",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 197,
            "columnNumber" : 39,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "el",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 197,
            "columnNumber" : 39,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 198,
              "columnNumber" : 23
            },
            {
              "callName" : "call",
              "resolvedMethod" : "visitor.call",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.Boolean",
                "ANY",
                "(string | __ecma.Number)[]",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 198,
              "columnNumber" : 64
            },
            {
              "callName" : "build",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:toFormData:build",
              "paramTypes" : [
                "__ecma.Boolean",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 203,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "key",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 197,
            "columnNumber" : 43,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "key",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 197,
            "columnNumber" : 43,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "trim",
              "resolvedMethod" : "string | __ecma.Number:trim",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 199,
              "columnNumber" : 44
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isString",
              "resolvedMethod" : "../utils.js:utils:isString",
              "paramTypes" : [
                "string | __ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 199,
              "columnNumber" : 22
            },
            {
              "callName" : "concat",
              "resolvedMethod" : "(string | __ecma.Number)[]:concat",
              "paramTypes" : [
                "string | __ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 203,
              "columnNumber" : 25
            },
            {
              "callName" : "",
              "resolvedMethod" : "_tmp_6.push",
              "paramTypes" : [
                "string | __ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 203,
              "columnNumber" : 45
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "trim",
            "typeFullName" : "ANY",
            "resolvedMethod" : "string | __ecma.Number:trim",
            "lineNumber" : 37,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "trim",
            "typeFullName" : "ANY",
            "resolvedMethod" : "string | __ecma.Number:trim",
            "lineNumber" : 37,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toFormData.js::program:toFormData:convertValue",
      "signature" : "",
      "fileName" : "lib\\helpers\\toFormData.js",
      "lineNumber" : 116,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "convertValue",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:toFormData:convertValue",
            "lineNumber" : 175,
            "columnNumber" : 48,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "convertValue",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\toFormData.js::program:toFormData:convertValue",
            "lineNumber" : 175,
            "columnNumber" : 48,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 116,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 116,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "toISOString",
              "resolvedMethod" : "__ecma.String:toISOString",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 120,
              "columnNumber" : 13
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isDate",
              "resolvedMethod" : "../utils.js:utils:isDate",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 119,
              "columnNumber" : 8
            },
            {
              "callName" : "isBlob",
              "resolvedMethod" : "../utils.js:utils:isBlob",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 123,
              "columnNumber" : 20
            },
            {
              "callName" : "isArrayBuffer",
              "resolvedMethod" : "../utils.js:utils:isArrayBuffer",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 127,
              "columnNumber" : 8
            },
            {
              "callName" : "isTypedArray",
              "resolvedMethod" : "../utils.js:utils:isTypedArray",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 127,
              "columnNumber" : 38
            },
            {
              "callName" : "",
              "resolvedMethod" : "_tmp_4.push",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 128,
              "columnNumber" : 63
            },
            {
              "callName" : "from",
              "resolvedMethod" : "Buffer.from",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 128,
              "columnNumber" : 73
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "isDate",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isDate",
            "lineNumber" : 119,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isDate",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:isDate",
            "lineNumber" : 119,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "toISOString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:toISOString",
            "lineNumber" : 120,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toISOString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:toISOString",
            "lineNumber" : 120,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toFormData.js::program:toFormData:defaultVisitor",
      "signature" : "",
      "fileName" : "lib\\helpers\\toFormData.js",
      "lineNumber" : 144,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }...",
            "typeFullName" : "ANY",
            "lineNumber" : 144,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }...",
            "typeFullName" : "ANY",
            "lineNumber" : 144,
            "columnNumber" : 2,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(predicate: (value: ANY, index: __ecma.Number, array: ANY[]) => unknown, thisArg?: ANY) => __ecma.Boolean:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(predicate: (value: ANY, index: __ecma.Number, array: ANY[]) => unknown, thisArg?: ANY) => __ecma.Boolean:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "path",
            "typeFullName" : "(string | __ecma.Number)[]",
            "position" : 3,
            "lineNumber" : 144,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "path",
            "typeFullName" : "(string | __ecma.Number)[]",
            "position" : 3,
            "lineNumber" : 144,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "renderKey",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:renderKey",
              "paramTypes" : [
                "(string | __ecma.Number)[]",
                "string | __ecma.Number",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 175,
              "columnNumber" : 20
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 144,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 144,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "stringify",
              "resolvedMethod" : "JSON.stringify",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 152,
              "columnNumber" : 16
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "../utils.js:utils:isArray",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 154,
              "columnNumber" : 9
            },
            {
              "callName" : "isFlatArray",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:isFlatArray",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 154,
              "columnNumber" : 33
            },
            {
              "callName" : "isFileList",
              "resolvedMethod" : "../utils.js:utils:isFileList",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 155,
              "columnNumber" : 10
            },
            {
              "callName" : "toArray",
              "resolvedMethod" : "../utils.js:utils:toArray",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 155,
              "columnNumber" : 74
            },
            {
              "callName" : "isVisitable",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:isVisitable",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 171,
              "columnNumber" : 8
            },
            {
              "callName" : "convertValue",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:toFormData:convertValue",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 175,
              "columnNumber" : 48
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "toArray",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:toArray",
            "lineNumber" : 155,
            "columnNumber" : 74,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toArray",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:toArray",
            "lineNumber" : 155,
            "columnNumber" : 74,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "key",
            "typeFullName" : "string | __ecma.Number",
            "position" : 2,
            "lineNumber" : 144,
            "columnNumber" : 33,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "key",
            "typeFullName" : "string | __ecma.Number",
            "position" : 2,
            "lineNumber" : 144,
            "columnNumber" : 33,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "slice",
              "resolvedMethod" : "string | __ecma.Number:slice",
              "paramTypes" : [
                "__ecma.Number",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 150,
              "columnNumber" : 33
            }
          ],
          "argToCalls" : [
            {
              "callName" : "endsWith",
              "resolvedMethod" : "../utils.js:utils:endsWith",
              "paramTypes" : [
                "string | __ecma.Number",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 148,
              "columnNumber" : 10
            },
            {
              "callName" : "endsWith",
              "resolvedMethod" : "../utils.js:utils:endsWith",
              "paramTypes" : [
                "string | __ecma.Number",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 155,
              "columnNumber" : 37
            },
            {
              "callName" : "removeBrackets",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:removeBrackets",
              "paramTypes" : [
                "string | __ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 158,
              "columnNumber" : 14
            },
            {
              "callName" : "",
              "resolvedMethod" : "_tmp_5.push",
              "paramTypes" : [
                "string | __ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 163,
              "columnNumber" : 42
            },
            {
              "callName" : "renderKey",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:renderKey",
              "paramTypes" : [
                "(string | __ecma.Number)[]",
                "string | __ecma.Number",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 175,
              "columnNumber" : 20
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "arr",
            "typeFullName" : "(predicate: (value: ANY, index: __ecma.Number, array: ANY[]) => unknown, thisArg?: ANY) => __ecma.Boolean",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "utils.toArray",
            "typeFullName" : "ANY",
            "resolvedMethod" : "../utils.js:utils:toArray",
            "lineNumber" : 155,
            "columnNumber" : 74,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "forEach",
              "resolvedMethod" : "arr.forEach",
              "paramTypes" : [
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 160,
              "columnNumber" : 8
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toFormData.js::program:toFormData:defaultVisitor:each",
      "signature" : "",
      "fileName" : "lib\\helpers\\toFormData.js",
      "lineNumber" : 160,
      "columnNumber" : 20,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 160,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 160,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "el",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 160,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "el",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 160,
            "columnNumber" : 34,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "../utils.js:utils:isUndefined",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 161,
              "columnNumber" : 12
            },
            {
              "callName" : "convertValue",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:toFormData:convertValue",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 164,
              "columnNumber" : 12
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "index",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 160,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "index",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 160,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "renderKey",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:renderKey",
              "paramTypes" : [
                "ANY",
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 163,
              "columnNumber" : 31
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "append",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:append",
            "lineNumber" : 175,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "append",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:append",
            "lineNumber" : 175,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toFormData.js::program:toFormData:defined",
      "signature" : "",
      "fileName" : "lib\\helpers\\toFormData.js",
      "lineNumber" : 99,
      "columnNumber" : 12,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 99,
            "columnNumber" : 12,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 99,
            "columnNumber" : 12,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toURLEncodedForm.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\toURLEncodedForm.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "utils",
            "typeFullName" : "../utils.js:utils",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\toURLEncodedForm.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "isBuffer",
              "resolvedMethod" : "../utils.js:utils:isBuffer",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 10,
              "columnNumber" : 29
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\toURLEncodedForm.js::program:require",
            "lineNumber" : 5,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\toURLEncodedForm.js::program:require",
            "lineNumber" : 5,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toURLEncodedForm.js::program:toURLEncodedForm",
      "signature" : "",
      "fileName" : "lib\\helpers\\toURLEncodedForm.js",
      "lineNumber" : 7,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "toURLEncodedForm",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\toURLEncodedForm.js::program:toURLEncodedForm",
            "lineNumber" : 84,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toURLEncodedForm",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\toURLEncodedForm.js::program:toURLEncodedForm",
            "lineNumber" : 84,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "data",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 7,
            "columnNumber" : 41,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "data",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 7,
            "columnNumber" : 41,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "toFormData",
              "resolvedMethod" : "lib\\helpers\\toFormData.js::program:toFormData",
              "paramTypes" : [
              ],
              "returnType" : "lib\\helpers\\toFormData.js::program:toFormData",
              "position" : 1,
              "lineNumber" : 8,
              "columnNumber" : 9
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "options",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 7,
            "columnNumber" : 47,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "options",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 7,
            "columnNumber" : 47,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "assign",
              "resolvedMethod" : "Object.assign",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 8,
              "columnNumber" : 66
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\toURLEncodedForm.js::program:toURLEncodedForm:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\toURLEncodedForm.js",
      "lineNumber" : 9,
      "columnNumber" : 13,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 9,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 9,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 9,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 9,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "toString",
              "resolvedMethod" : "value.toString",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 11,
              "columnNumber" : 25
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isBuffer",
              "resolvedMethod" : "../utils.js:utils:isBuffer",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 10,
              "columnNumber" : 29
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "key",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 9,
            "columnNumber" : 29,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "key",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 9,
            "columnNumber" : 29,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "append",
              "resolvedMethod" : "lib\\helpers\\toURLEncodedForm.js::program:append",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "() => __ecma.String",
              "position" : 1,
              "lineNumber" : 11,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "append",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\toURLEncodedForm.js::program:append",
            "lineNumber" : 11,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "append",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\toURLEncodedForm.js::program:append",
            "lineNumber" : 11,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\validator.js::program",
      "signature" : "",
      "fileName" : "lib\\helpers\\validator.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\validator.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\helpers\\validator.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\validator.js::program:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\validator.js",
      "lineNumber" : 9,
      "columnNumber" : 72,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 9,
            "columnNumber" : 72,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 9,
            "columnNumber" : 72,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\validator.js::program:anonymous:validator",
      "signature" : "",
      "fileName" : "lib\\helpers\\validator.js",
      "lineNumber" : 10,
      "columnNumber" : 21,
      "usages" : [
        {
          "targetObj" : {
            "name" : "validator",
            "typeFullName" : "string | true",
            "resolvedMethod" : "lib\\helpers\\validator.js::program:anonymous:validator",
            "lineNumber" : 51,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "validator",
            "typeFullName" : "string | true",
            "resolvedMethod" : "lib\\helpers\\validator.js::program:anonymous:validator",
            "lineNumber" : 51,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\validator.js::program:assertOptions",
      "signature" : "",
      "fileName" : "lib\\helpers\\validator.js",
      "lineNumber" : 65,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 65,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 65,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "options",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 65,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "options",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 65,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "keys",
              "resolvedMethod" : "Object.keys",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 69,
              "columnNumber" : 15
            },
            {
              "callName" : "validator",
              "resolvedMethod" : "lib\\helpers\\validator.js::program:anonymous:validator",
              "paramTypes" : [
                "__ecma.Boolean",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 76,
              "columnNumber" : 44
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "opt",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "keys[i]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 72,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "validator",
              "resolvedMethod" : "lib\\helpers\\validator.js::program:anonymous:validator",
              "paramTypes" : [
                "__ecma.Boolean",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 76,
              "columnNumber" : 44
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "__ecma.Boolean",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "options[opt]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 75,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "validator",
              "resolvedMethod" : "lib\\helpers\\validator.js::program:anonymous:validator",
              "paramTypes" : [
                "__ecma.Boolean",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 76,
              "columnNumber" : 44
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\validator.js::program:transitional",
      "signature" : "",
      "fileName" : "lib\\helpers\\validator.js",
      "lineNumber" : 26,
      "columnNumber" : 26,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 26,
            "columnNumber" : 26,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 26,
            "columnNumber" : 26,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\validator.js::program:transitional:anonymous",
      "signature" : "",
      "fileName" : "lib\\helpers\\validator.js",
      "lineNumber" : 32,
      "columnNumber" : 9,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 32,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 32,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 32,
            "columnNumber" : 10,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 32,
            "columnNumber" : 10,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "validator",
              "resolvedMethod" : "lib\\helpers\\validator.js::program:anonymous:validator",
              "paramTypes" : [
                "__ecma.Boolean",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 51,
              "columnNumber" : 23
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "opt",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 32,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "opt",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 32,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "formatMessage",
              "resolvedMethod" : "lib\\helpers\\validator.js::program:transitional:formatMessage",
              "paramTypes" : [
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 35,
              "columnNumber" : 8
            },
            {
              "callName" : "formatMessage",
              "resolvedMethod" : "lib\\helpers\\validator.js::program:transitional:formatMessage",
              "paramTypes" : [
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 44,
              "columnNumber" : 8
            },
            {
              "callName" : "validator",
              "resolvedMethod" : "lib\\helpers\\validator.js::program:anonymous:validator",
              "paramTypes" : [
                "__ecma.Boolean",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 51,
              "columnNumber" : 23
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "opts",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 32,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "opts",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 32,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "validator",
              "resolvedMethod" : "lib\\helpers\\validator.js::program:anonymous:validator",
              "paramTypes" : [
                "__ecma.Boolean",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 51,
              "columnNumber" : 23
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\helpers\\validator.js::program:transitional:formatMessage",
      "signature" : "",
      "fileName" : "lib\\helpers\\validator.js",
      "lineNumber" : 27,
      "columnNumber" : 2,
      "usages" : [
        {
          "targetObj" : {
            "name" : "formatMessage",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\validator.js::program:transitional:formatMessage",
            "lineNumber" : 44,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "formatMessage",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\helpers\\validator.js::program:transitional:formatMessage",
            "lineNumber" : 44,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\platform\\browser\\classes\\Blob.js::program",
      "signature" : "",
      "fileName" : "lib\\platform\\browser\\classes\\Blob.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\platform\\browser\\classes\\FormData.js::program",
      "signature" : "",
      "fileName" : "lib\\platform\\browser\\classes\\FormData.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\platform\\browser\\classes\\URLSearchParams.js::program",
      "signature" : "",
      "fileName" : "lib\\platform\\browser\\classes\\URLSearchParams.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\browser\\classes\\URLSearchParams.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\browser\\classes\\URLSearchParams.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\platform\\browser\\index.js::program",
      "signature" : "",
      "fileName" : "lib\\platform\\browser\\index.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\browser\\index.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\browser\\index.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\platform\\browser\\index.js::program:anonymous",
      "signature" : "",
      "fileName" : "lib\\platform\\browser\\index.js",
      "lineNumber" : 22,
      "columnNumber" : 30,
      "usages" : [
        {
          "targetObj" : {
            "name" : "anonymous",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\browser\\index.js::program:anonymous",
            "lineNumber" : 22,
            "columnNumber" : 29,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "anonymous",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\browser\\index.js::program:anonymous",
            "lineNumber" : 22,
            "columnNumber" : 29,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\platform\\browser\\index.js::program:anonymous1",
      "signature" : "",
      "fileName" : "lib\\platform\\browser\\index.js",
      "lineNumber" : 44,
      "columnNumber" : 40,
      "usages" : [
        {
          "targetObj" : {
            "name" : "anonymous1",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\browser\\index.js::program:anonymous1",
            "lineNumber" : 44,
            "columnNumber" : 39,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "anonymous1",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\browser\\index.js::program:anonymous1",
            "lineNumber" : 44,
            "columnNumber" : 39,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\platform\\index.js::program",
      "signature" : "",
      "fileName" : "lib\\platform\\index.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\index.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\index.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\platform\\node\\classes\\FormData.js::program",
      "signature" : "",
      "fileName" : "lib\\platform\\node\\classes\\FormData.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\node\\classes\\FormData.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\node\\classes\\FormData.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\platform\\node\\classes\\URLSearchParams.js::program",
      "signature" : "",
      "fileName" : "lib\\platform\\node\\classes\\URLSearchParams.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\node\\classes\\URLSearchParams.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\node\\classes\\URLSearchParams.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\platform\\node\\index.js::program",
      "signature" : "",
      "fileName" : "lib\\platform\\node\\index.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\node\\index.js::program:require",
            "lineNumber" : 2,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\platform\\node\\index.js::program:require",
            "lineNumber" : 2,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "toString",
            "typeFullName" : "() => __ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "_tmp_8.toString",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 7,
            "columnNumber" : 7,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "() => __ecma.String:call",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 11,
              "columnNumber" : 16
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "toUpperCase",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:toUpperCase",
            "lineNumber" : 521,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toUpperCase",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:toUpperCase",
            "lineNumber" : 521,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 10,
      "columnNumber" : 16,
      "usages" : [
        {
          "targetObj" : {
            "name" : "anonymous",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:anonymous",
            "lineNumber" : 10,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "anonymous",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:anonymous",
            "lineNumber" : 10,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous11:anonymous",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 343,
      "columnNumber" : 13,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 343,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 343,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "val",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 343,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "val",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 343,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isFunction",
              "resolvedMethod" : "lib\\utils.js::program:isFunction",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 344,
              "columnNumber" : 19
            },
            {
              "callName" : "bind",
              "resolvedMethod" : "lib\\helpers\\bind.js::program:bind",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 345,
              "columnNumber" : 15
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous17",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 468,
      "columnNumber" : 22,
      "usages" : [
        {
          "targetObj" : {
            "name" : "anonymous17",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:anonymous17",
            "lineNumber" : 468,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "anonymous17",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:anonymous17",
            "lineNumber" : 468,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous17:anonymous",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 470,
      "columnNumber" : 9,
      "usages" : [
        {
          "targetObj" : {
            "name" : "thing => {\n    return TypedArray && thing instanceof TypedArray;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 470,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "thing => {\n    return TypedArray && thing instanceof TypedArray;\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 470,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous1:anonymous",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 17,
      "columnNumber" : 9,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(thing) => kindOf(thing) === type",
            "typeFullName" : "ANY",
            "lineNumber" : 17,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(thing) => kindOf(thing) === type",
            "typeFullName" : "ANY",
            "lineNumber" : 17,
            "columnNumber" : 9,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "thing",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 17,
            "columnNumber" : 10,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "thing",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 17,
            "columnNumber" : 10,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "kindOf",
              "resolvedMethod" : "lib\\utils.js::program:kindOf",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 17,
              "columnNumber" : 20
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "kindOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:kindOf",
            "lineNumber" : 195,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "kindOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:kindOf",
            "lineNumber" : 195,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous20:replacer",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 520,
      "columnNumber" : 4,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 520,
            "columnNumber" : 4,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 520,
            "columnNumber" : 4,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "p1",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 520,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "p1",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 520,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "toUpperCase",
              "resolvedMethod" : "__ecma.String:toUpperCase",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 521,
              "columnNumber" : 13
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous21",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 527,
      "columnNumber" : 24,
      "usages" : [
        {
          "targetObj" : {
            "name" : "anonymous21",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:anonymous21",
            "lineNumber" : 527,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "anonymous21",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:anonymous21",
            "lineNumber" : 527,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "hasOwnProperty",
            "typeFullName" : "(obj: ANY, prop: ANY) => ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "param1_0.hasOwnProperty",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 527,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "(obj: ANY, prop: ANY) => ANY:call",
              "paramTypes" : [
                "object",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 527,
              "columnNumber" : 61
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous21:anonymous",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 527,
      "columnNumber" : 46,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(obj, prop) => hasOwnProperty.call(obj, prop)",
            "typeFullName" : "ANY",
            "lineNumber" : 527,
            "columnNumber" : 46,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(obj, prop) => hasOwnProperty.call(obj, prop)",
            "typeFullName" : "ANY",
            "lineNumber" : 527,
            "columnNumber" : 46,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 527,
            "columnNumber" : 47,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 527,
            "columnNumber" : 47,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "(obj: ANY, prop: ANY) => ANY:call",
              "paramTypes" : [
                "object",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 527,
              "columnNumber" : 61
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "prop",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 527,
            "columnNumber" : 52,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "prop",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 527,
            "columnNumber" : 52,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "(obj: ANY, prop: ANY) => ANY:call",
              "paramTypes" : [
                "object",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 527,
              "columnNumber" : 61
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(obj: ANY, prop: ANY) => ANY:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(obj: ANY, prop: ANY) => ANY:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous22:anonymous",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 542,
      "columnNumber" : 23,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 542,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 542,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "descriptor",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 542,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "descriptor",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 542,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "reducer",
              "resolvedMethod" : "lib\\utils.js::program:reducer",
              "paramTypes" : [
                "() => never",
                "ANY",
                "object"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 543,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "name",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 542,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "name",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 542,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "reducer",
              "resolvedMethod" : "lib\\utils.js::program:reducer",
              "paramTypes" : [
                "() => never",
                "ANY",
                "object"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 543,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "reducer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:reducer",
            "lineNumber" : 543,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "reducer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:reducer",
            "lineNumber" : 543,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous23:anonymous",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 557,
      "columnNumber" : 25,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 557,
            "columnNumber" : 25,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 557,
            "columnNumber" : 25,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "name",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 557,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "name",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 557,
            "columnNumber" : 38,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "indexOf",
              "resolvedMethod" : "'callee'].indexOf",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 559,
              "columnNumber" : 27
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "void",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "obj[name]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 563,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isFunction",
              "resolvedMethod" : "lib\\utils.js::program:isFunction",
              "paramTypes" : [
                "void"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 565,
              "columnNumber" : 9
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous23:anonymous:anonymous",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 575,
      "columnNumber" : 23,
      "usages" : [
        {
          "targetObj" : {
            "name" : "() => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 575,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "() => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      }",
            "typeFullName" : "ANY",
            "lineNumber" : 575,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous24:anonymous:anonymous",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 586,
      "columnNumber" : 16,
      "usages" : [
        {
          "targetObj" : {
            "name" : "value => {\n      obj[value] = true;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 586,
            "columnNumber" : 16,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "value => {\n      obj[value] = true;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 586,
            "columnNumber" : 16,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous24:define",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 585,
      "columnNumber" : 17,
      "usages" : [
        {
          "targetObj" : {
            "name" : "define",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\utils.js::program:anonymous24:define",
            "lineNumber" : 591,
            "columnNumber" : 51,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "define",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\utils.js::program:anonymous24:define",
            "lineNumber" : 591,
            "columnNumber" : 51,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "arr",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 585,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "arr",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 585,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "forEach",
              "resolvedMethod" : "(...items: ANY[]) => __ecma.Number:forEach",
              "paramTypes" : [
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 586,
              "columnNumber" : 4
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(...items: ANY[]) => __ecma.Number:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "(...items: ANY[]) => __ecma.Number:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous28:anonymous:anonymous",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 648,
      "columnNumber" : 24,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 648,
            "columnNumber" : 24,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        }",
            "typeFullName" : "ANY",
            "lineNumber" : 648,
            "columnNumber" : 24,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 648,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 648,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "visit",
              "resolvedMethod" : "lib\\utils.js::program:anonymous28:visit",
              "paramTypes" : [
                "void",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 649,
              "columnNumber" : 31
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "reducedValue",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "visit",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:anonymous28:visit",
            "lineNumber" : 649,
            "columnNumber" : 31,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "lib\\utils.js::program:isUndefined",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 650,
              "columnNumber" : 11
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous28:visit",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 637,
      "columnNumber" : 16,
      "usages" : [
        {
          "targetObj" : {
            "name" : "visit",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:anonymous28:visit",
            "lineNumber" : 662,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "visit",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:anonymous28:visit",
            "lineNumber" : 662,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "source",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 637,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "source",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 637,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isObject",
              "resolvedMethod" : "lib\\utils.js::program:isObject",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 639,
              "columnNumber" : 8
            },
            {
              "callName" : "indexOf",
              "resolvedMethod" : "undefined:indexOf",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 640,
              "columnNumber" : 10
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "lib\\utils.js::program:isArray",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 646,
              "columnNumber" : 23
            },
            {
              "callName" : "forEach",
              "resolvedMethod" : "lib\\utils.js::program:forEach",
              "paramTypes" : [
                "ANY",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 648,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "indexOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "undefined:indexOf",
            "lineNumber" : 559,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "indexOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "undefined:indexOf",
            "lineNumber" : 559,
            "columnNumber" : 27,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous2:anonymous",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 20,
      "columnNumber" : 27,
      "usages" : [
        {
          "targetObj" : {
            "name" : "thing => typeof thing === type",
            "typeFullName" : "ANY",
            "lineNumber" : 20,
            "columnNumber" : 27,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "thing => typeof thing === type",
            "typeFullName" : "ANY",
            "lineNumber" : 20,
            "columnNumber" : 27,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous9",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 284,
      "columnNumber" : 17,
      "usages" : [
        {
          "targetObj" : {
            "name" : "anonymous9",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:anonymous9",
            "lineNumber" : 284,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "anonymous9",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:anonymous9",
            "lineNumber" : 284,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:anonymous:anonymous",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 10,
      "columnNumber" : 25,
      "usages" : [
        {
          "targetObj" : {
            "name" : "thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 10,
            "columnNumber" : 25,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 10,
            "columnNumber" : 25,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "thing",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 10,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "thing",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 10,
            "columnNumber" : 25,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "() => __ecma.String:call",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 11,
              "columnNumber" : 16
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "str",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "toString.call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "() => __ecma.String:call",
            "lineNumber" : 11,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "slice",
              "resolvedMethod" : "__ecma.String:slice",
              "paramTypes" : [
                "__ecma.Number",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 12,
              "columnNumber" : 39
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "() => __ecma.String:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "() => __ecma.String:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:endsWith",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 429,
      "columnNumber" : 17,
      "usages" : [
        {
          "targetObj" : {
            "name" : "str",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 429,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "str",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 429,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "indexOf",
              "resolvedMethod" : "__ecma.String:indexOf",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "lineNumber" : 435,
              "columnNumber" : 20
            }
          ],
          "argToCalls" : [
            {
              "callName" : "String",
              "resolvedMethod" : "String",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 430,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.assignmentMinus",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.assignmentMinus",
            "lineNumber" : 434,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.assignmentMinus",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.assignmentMinus",
            "lineNumber" : 434,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "searchString",
            "typeFullName" : "__ecma.String",
            "position" : 2,
            "lineNumber" : 429,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "searchString",
            "typeFullName" : "__ecma.String",
            "position" : 2,
            "lineNumber" : 429,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "indexOf",
              "resolvedMethod" : "__ecma.String:indexOf",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 435,
              "columnNumber" : 20
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "position",
            "typeFullName" : "__ecma.Number",
            "position" : 3,
            "lineNumber" : 429,
            "columnNumber" : 37,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "position",
            "typeFullName" : "__ecma.Number",
            "position" : 3,
            "lineNumber" : 429,
            "columnNumber" : 37,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "indexOf",
              "resolvedMethod" : "__ecma.String:indexOf",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 435,
              "columnNumber" : 20
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "(str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 429,
            "columnNumber" : 17,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 429,
            "columnNumber" : 17,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:extend",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 342,
      "columnNumber" : 15,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 342,
            "columnNumber" : 15,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 342,
            "columnNumber" : 15,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "b",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 342,
            "columnNumber" : 19,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "b",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 342,
            "columnNumber" : 19,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "forEach",
              "resolvedMethod" : "lib\\utils.js::program:forEach",
              "paramTypes" : [
                "ANY",
                "LAMBDA",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 343,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "thisArg",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 342,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "thisArg",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 342,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "bind",
              "resolvedMethod" : "lib\\helpers\\bind.js::program:bind",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 345,
              "columnNumber" : 15
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:findKey",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 270,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "_key",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "keys[i]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 276,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "toLowerCase",
              "resolvedMethod" : "__ecma.String:toLowerCase",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 277,
              "columnNumber" : 16
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "key",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 270,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "key",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 270,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "toLowerCase",
              "resolvedMethod" : "__ecma.Boolean:toLowerCase",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 271,
              "columnNumber" : 8
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "findKey",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\utils.js::program:findKey",
            "lineNumber" : 314,
            "columnNumber" : 34,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "findKey",
            "typeFullName" : "__ecma.String",
            "resolvedMethod" : "lib\\utils.js::program:findKey",
            "lineNumber" : 314,
            "columnNumber" : 34,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "toLowerCase",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:toLowerCase",
            "lineNumber" : 16,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "toLowerCase",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:toLowerCase",
            "lineNumber" : 16,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 270,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 270,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "keys",
              "resolvedMethod" : "Object.keys",
              "paramTypes" : [
                "object"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 272,
              "columnNumber" : 15
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:forEach",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 237,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "getOwnPropertyNames",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.getOwnPropertyNames",
            "lineNumber" : 405,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getOwnPropertyNames",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.getOwnPropertyNames",
            "lineNumber" : 405,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 237,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 237,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "",
              "resolvedMethod" : "_tmp_3.push",
              "paramTypes" : [
                "object"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 249,
              "columnNumber" : 11
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "lib\\utils.js::program:isArray",
              "paramTypes" : [
                "object"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 252,
              "columnNumber" : 6
            },
            {
              "callName" : "call",
              "resolvedMethod" : "Function:call",
              "paramTypes" : [
                "__ecma.Null",
                "ANY",
                "__ecma.Number",
                "object"
              ],
              "returnType" : "ANY",
              "position" : 4,
              "lineNumber" : 255,
              "columnNumber" : 6
            },
            {
              "callName" : "getOwnPropertyNames",
              "resolvedMethod" : "Object.getOwnPropertyNames",
              "paramTypes" : [
                "object"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 259,
              "columnNumber" : 30
            },
            {
              "callName" : "keys",
              "resolvedMethod" : "Object.keys",
              "paramTypes" : [
                "object"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 259,
              "columnNumber" : 64
            },
            {
              "callName" : "call",
              "resolvedMethod" : "Function:call",
              "paramTypes" : [
                "__ecma.Null",
                "ANY",
                "__ecma.Boolean",
                "object"
              ],
              "returnType" : "ANY",
              "position" : 4,
              "lineNumber" : 265,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "key",
            "typeFullName" : "__ecma.Boolean",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "keys[i]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 264,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "Function:call",
              "paramTypes" : [
                "__ecma.Null",
                "ANY",
                "__ecma.Boolean",
                "object"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 265,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "fn",
            "typeFullName" : "Function",
            "position" : 2,
            "lineNumber" : 237,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "fn",
            "typeFullName" : "Function",
            "position" : 2,
            "lineNumber" : 237,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "Function:call",
              "paramTypes" : [
                "__ecma.Null",
                "ANY",
                "__ecma.Number",
                "object"
              ],
              "returnType" : "ANY",
              "lineNumber" : 255,
              "columnNumber" : 6
            },
            {
              "callName" : "call",
              "resolvedMethod" : "Function:call",
              "paramTypes" : [
                "__ecma.Null",
                "ANY",
                "__ecma.Boolean",
                "object"
              ],
              "returnType" : "ANY",
              "lineNumber" : 265,
              "columnNumber" : 6
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Function:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Function:call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "forEach",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:forEach",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isArray",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:isArray",
            "lineNumber" : 646,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isArray",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:isArray",
            "lineNumber" : 646,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:forEachEntry",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 483,
      "columnNumber" : 21,
      "usages" : [
        {
          "targetObj" : {
            "name" : "generator",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "obj && obj[Symbol.iterator]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.logicalAnd",
            "lineNumber" : 484,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "generator.call",
              "paramTypes" : [
                "object"
              ],
              "returnType" : "ANY",
              "lineNumber" : 486,
              "columnNumber" : 19
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "(obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 483,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 483,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "fn",
            "typeFullName" : "Function",
            "position" : 2,
            "lineNumber" : 483,
            "columnNumber" : 27,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "fn",
            "typeFullName" : "Function",
            "position" : 2,
            "lineNumber" : 483,
            "columnNumber" : 27,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "Function:call",
              "paramTypes" : [
                "object",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 492,
              "columnNumber" : 4
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "iterator",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "generator.call",
            "typeFullName" : "ANY",
            "resolvedMethod" : "generator.call",
            "lineNumber" : 486,
            "columnNumber" : 19,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "next",
              "resolvedMethod" : "iterator.next",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 490,
              "columnNumber" : 19
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 483,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 483,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "call",
              "resolvedMethod" : "generator.call",
              "paramTypes" : [
                "object"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 486,
              "columnNumber" : 19
            },
            {
              "callName" : "call",
              "resolvedMethod" : "Function:call",
              "paramTypes" : [
                "object",
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 492,
              "columnNumber" : 4
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:freezeMethods",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 556,
      "columnNumber" : 22,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 556,
            "columnNumber" : 22,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 556,
            "columnNumber" : 22,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 556,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 556,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "reduceDescriptors",
              "resolvedMethod" : "lib\\utils.js::program:reduceDescriptors",
              "paramTypes" : [
                "object",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 557,
              "columnNumber" : 2
            },
            {
              "callName" : "isFunction",
              "resolvedMethod" : "lib\\utils.js::program:isFunction",
              "paramTypes" : [
                "object"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 559,
              "columnNumber" : 8
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:generateString",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 613,
      "columnNumber" : 23,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 613,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 613,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "<operator>.or",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.or",
            "lineNumber" : 617,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "<operator>.or",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.or",
            "lineNumber" : 617,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "random",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Math:random",
            "lineNumber" : 617,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "random",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.Math:random",
            "lineNumber" : 617,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:inherits",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 376,
      "columnNumber" : 17,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 376,
            "columnNumber" : 17,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 376,
            "columnNumber" : 17,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "constructor",
            "typeFullName" : "Function",
            "position" : 1,
            "lineNumber" : 376,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "constructor",
            "typeFullName" : "Function",
            "position" : 1,
            "lineNumber" : 376,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "defineProperty",
              "resolvedMethod" : "Object.defineProperty",
              "paramTypes" : [
                "Function",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 379,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "props",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 376,
            "columnNumber" : 49,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "props",
            "typeFullName" : "ANY",
            "position" : 3,
            "lineNumber" : 376,
            "columnNumber" : 49,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "assign",
              "resolvedMethod" : "Object.assign",
              "paramTypes" : [
                "ANY",
                "__ecma.String[]"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 382,
              "columnNumber" : 11
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "descriptors",
            "typeFullName" : "ANY",
            "position" : 4,
            "lineNumber" : 376,
            "columnNumber" : 56,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "descriptors",
            "typeFullName" : "ANY",
            "position" : 4,
            "lineNumber" : 376,
            "columnNumber" : 56,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "create",
              "resolvedMethod" : "Object.create",
              "paramTypes" : [
                "ANY",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 377,
              "columnNumber" : 26
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:isArrayBufferView",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 69,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 69,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 69,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "val",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 69,
            "columnNumber" : 27,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "val",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 69,
            "columnNumber" : 27,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isView",
              "resolvedMethod" : "ArrayBufferConstructor:isView",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 72,
              "columnNumber" : 13
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "isView",
            "typeFullName" : "ANY",
            "resolvedMethod" : "ArrayBufferConstructor:isView",
            "lineNumber" : 72,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isView",
            "typeFullName" : "ANY",
            "resolvedMethod" : "ArrayBufferConstructor:isView",
            "lineNumber" : 72,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isArrayBuffer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:isArrayBuffer",
            "lineNumber" : 74,
            "columnNumber" : 39,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isArrayBuffer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:isArrayBuffer",
            "lineNumber" : 74,
            "columnNumber" : 39,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:isBoolean",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 120,
      "columnNumber" : 18,
      "usages" : [
        {
          "targetObj" : {
            "name" : "thing => thing === true || thing === false",
            "typeFullName" : "ANY",
            "lineNumber" : 120,
            "columnNumber" : 18,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "thing => thing === true || thing === false",
            "typeFullName" : "ANY",
            "lineNumber" : 120,
            "columnNumber" : 18,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:isBuffer",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 47,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "isBuffer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:isBuffer",
            "lineNumber" : 49,
            "columnNumber" : 47,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isBuffer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:isBuffer",
            "lineNumber" : 49,
            "columnNumber" : 47,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "val",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 47,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "val",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 47,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "lib\\utils.js::program:isUndefined",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 48,
              "columnNumber" : 26
            },
            {
              "callName" : "isBuffer",
              "resolvedMethod" : "val.constructor.isBuffer",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 49,
              "columnNumber" : 47
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "isUndefined",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:isUndefined",
            "lineNumber" : 650,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isUndefined",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:isUndefined",
            "lineNumber" : 650,
            "columnNumber" : 11,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isFunction",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:isFunction",
            "lineNumber" : 668,
            "columnNumber" : 79,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isFunction",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:isFunction",
            "lineNumber" : 668,
            "columnNumber" : 79,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:isContextDefined",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 290,
      "columnNumber" : 25,
      "usages" : [
        {
          "targetObj" : {
            "name" : "isContextDefined",
            "typeFullName" : "__ecma.Boolean",
            "resolvedMethod" : "lib\\utils.js::program:isContextDefined",
            "lineNumber" : 311,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isContextDefined",
            "typeFullName" : "__ecma.Boolean",
            "resolvedMethod" : "lib\\utils.js::program:isContextDefined",
            "lineNumber" : 311,
            "columnNumber" : 21,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "context",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 290,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "context",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 290,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isUndefined",
              "resolvedMethod" : "lib\\utils.js::program:isUndefined",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 290,
              "columnNumber" : 39
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:isFormData",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 190,
      "columnNumber" : 19,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 190,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 190,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "thing",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 190,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "thing",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 190,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "toString",
              "resolvedMethod" : "__ecma.Boolean:toString",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 197,
              "columnNumber" : 60
            }
          ],
          "argToCalls" : [
            {
              "callName" : "kindOf",
              "resolvedMethod" : "lib\\utils.js::program:kindOf",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 195,
              "columnNumber" : 16
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:isObject",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 112,
      "columnNumber" : 17,
      "usages" : [
        {
          "targetObj" : {
            "name" : "isObject",
            "typeFullName" : "__ecma.Boolean",
            "resolvedMethod" : "lib\\utils.js::program:isObject",
            "lineNumber" : 668,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isObject",
            "typeFullName" : "__ecma.Boolean",
            "resolvedMethod" : "lib\\utils.js::program:isObject",
            "lineNumber" : 668,
            "columnNumber" : 12,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:isPlainObject",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 129,
      "columnNumber" : 22,
      "usages" : [
        {
          "targetObj" : {
            "name" : "getPrototypeOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:getPrototypeOf",
            "lineNumber" : 473,
            "columnNumber" : 40,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getPrototypeOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:getPrototypeOf",
            "lineNumber" : 473,
            "columnNumber" : 40,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "prototype",
            "typeFullName" : "__ecma.Boolean",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "getPrototypeOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:getPrototypeOf",
            "lineNumber" : 134,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "getPrototypeOf",
              "resolvedMethod" : "Object.getPrototypeOf",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 135,
              "columnNumber" : 66
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "val",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 129,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "val",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 129,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "kindOf",
              "resolvedMethod" : "lib\\utils.js::program:kindOf",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 130,
              "columnNumber" : 6
            },
            {
              "callName" : "getPrototypeOf",
              "resolvedMethod" : "lib\\utils.js::program:getPrototypeOf",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 134,
              "columnNumber" : 20
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "isPlainObject",
            "typeFullName" : "__ecma.Boolean",
            "resolvedMethod" : "lib\\utils.js::program:isPlainObject",
            "lineNumber" : 317,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isPlainObject",
            "typeFullName" : "__ecma.Boolean",
            "resolvedMethod" : "lib\\utils.js::program:isPlainObject",
            "lineNumber" : 317,
            "columnNumber" : 15,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "getPrototypeOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.getPrototypeOf",
            "lineNumber" : 135,
            "columnNumber" : 66,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getPrototypeOf",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.getPrototypeOf",
            "lineNumber" : 135,
            "columnNumber" : 66,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:isSpecCompliantForm",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 630,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 630,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 630,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:isStream",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 181,
      "columnNumber" : 17,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(val) => isObject(val) && isFunction(val.pipe)",
            "typeFullName" : "ANY",
            "lineNumber" : 181,
            "columnNumber" : 17,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(val) => isObject(val) && isFunction(val.pipe)",
            "typeFullName" : "ANY",
            "lineNumber" : 181,
            "columnNumber" : 17,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "val",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 181,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "val",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 181,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isObject",
              "resolvedMethod" : "lib\\utils.js::program:isObject",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 181,
              "columnNumber" : 26
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:isThenable",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 667,
      "columnNumber" : 19,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch)",
            "typeFullName" : "ANY",
            "lineNumber" : 667,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch)",
            "typeFullName" : "ANY",
            "lineNumber" : 667,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "thing",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 667,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "thing",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 667,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isObject",
              "resolvedMethod" : "lib\\utils.js::program:isObject",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 668,
              "columnNumber" : 12
            },
            {
              "callName" : "isFunction",
              "resolvedMethod" : "lib\\utils.js::program:isFunction",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 668,
              "columnNumber" : 31
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:kindOfTest",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 15,
      "columnNumber" : 19,
      "usages" : [
        {
          "targetObj" : {
            "name" : "kindOfTest",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:kindOfTest",
            "lineNumber" : 665,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "kindOfTest",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:kindOfTest",
            "lineNumber" : 665,
            "columnNumber" : 18,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "type",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 15,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "type",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 15,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "toLowerCase",
              "resolvedMethod" : "type.toLowerCase",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 16,
              "columnNumber" : 9
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:matchAll",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 504,
      "columnNumber" : 17,
      "usages" : [
        {
          "targetObj" : {
            "name" : "matches",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "regExp.exec",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:exec",
            "lineNumber" : 508,
            "columnNumber" : 20,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "push",
              "resolvedMethod" : "(...items: ANY[]) => __ecma.Number:push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 509,
              "columnNumber" : 4
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "arr",
            "typeFullName" : "(...items: ANY[]) => __ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "__ecma.Array.factory",
            "typeFullName" : "__ecma.Array.factory",
            "resolvedMethod" : "__ecma.Array.factory",
            "lineNumber" : 506,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "push",
              "resolvedMethod" : "(...items: ANY[]) => __ecma.Number:push",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 509,
              "columnNumber" : 4
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "str",
            "typeFullName" : "__ecma.String",
            "position" : 2,
            "lineNumber" : 504,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "str",
            "typeFullName" : "__ecma.String",
            "position" : 2,
            "lineNumber" : 504,
            "columnNumber" : 26,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "exec",
              "resolvedMethod" : "__ecma.String:exec",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 508,
              "columnNumber" : 20
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "(regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 504,
            "columnNumber" : 17,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 504,
            "columnNumber" : 17,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "regExp",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 504,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "regExp",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 504,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "exec",
              "resolvedMethod" : "__ecma.String:exec",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 508,
              "columnNumber" : 20
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:merge",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 310,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "merge",
            "typeFullName" : "object",
            "resolvedMethod" : "lib\\utils.js::program:merge",
            "lineNumber" : 318,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "merge",
            "typeFullName" : "object",
            "resolvedMethod" : "lib\\utils.js::program:merge",
            "lineNumber" : 318,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:merge:assignValue",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 313,
      "columnNumber" : 22,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 313,
            "columnNumber" : 22,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }",
            "typeFullName" : "ANY",
            "lineNumber" : 313,
            "columnNumber" : 22,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "val",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 313,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "val",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 313,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "slice",
              "resolvedMethod" : "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]:slice",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 320,
              "columnNumber" : 26
            }
          ],
          "argToCalls" : [
            {
              "callName" : "isPlainObject",
              "resolvedMethod" : "lib\\utils.js::program:isPlainObject",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 315,
              "columnNumber" : 44
            },
            {
              "callName" : "merge",
              "resolvedMethod" : "lib\\utils.js::program:merge",
              "paramTypes" : [
                "ANY",
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 316,
              "columnNumber" : 26
            },
            {
              "callName" : "isPlainObject",
              "resolvedMethod" : "lib\\utils.js::program:isPlainObject",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 317,
              "columnNumber" : 15
            },
            {
              "callName" : "merge",
              "resolvedMethod" : "lib\\utils.js::program:merge",
              "paramTypes" : [
                "ANY",
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 318,
              "columnNumber" : 26
            },
            {
              "callName" : "isArray",
              "resolvedMethod" : "lib\\utils.js::program:isArray",
              "paramTypes" : [
                "(start?: __ecma.Number, end?: __ecma.Number) => ANY[]"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 319,
              "columnNumber" : 15
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "key",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 313,
            "columnNumber" : 28,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "key",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 313,
            "columnNumber" : 28,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "findKey",
              "resolvedMethod" : "lib\\utils.js::program:findKey",
              "paramTypes" : [
                "object",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 314,
              "columnNumber" : 34
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:noop",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 596,
      "columnNumber" : 13,
      "usages" : [
        {
          "targetObj" : {
            "name" : "() => {}",
            "typeFullName" : "ANY",
            "lineNumber" : 596,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "() => {}",
            "typeFullName" : "ANY",
            "lineNumber" : 596,
            "columnNumber" : 13,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:reduceDescriptors",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 538,
      "columnNumber" : 26,
      "usages" : [
        {
          "targetObj" : {
            "name" : "reduceDescriptors",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\utils.js::program:reduceDescriptors",
            "lineNumber" : 557,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "reduceDescriptors",
            "typeFullName" : "void",
            "resolvedMethod" : "lib\\utils.js::program:reduceDescriptors",
            "lineNumber" : 557,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 538,
            "columnNumber" : 27,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 538,
            "columnNumber" : 27,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "getOwnPropertyDescriptors",
              "resolvedMethod" : "Object.getOwnPropertyDescriptors",
              "paramTypes" : [
                "object"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 539,
              "columnNumber" : 22
            },
            {
              "callName" : "reducer",
              "resolvedMethod" : "lib\\utils.js::program:reducer",
              "paramTypes" : [
                "() => never",
                "ANY",
                "object"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 543,
              "columnNumber" : 8
            },
            {
              "callName" : "defineProperties",
              "resolvedMethod" : "Object.defineProperties",
              "paramTypes" : [
                "object",
                "object"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 548,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "descriptors",
            "typeFullName" : "{ [x: __ecma.String]: TypedPropertyDescriptor<any>; } & { [x: __ecma.String]: PropertyDescriptor; }",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "Object.getOwnPropertyDescriptors",
            "typeFullName" : "Object.getOwnPropertyDescriptors",
            "resolvedMethod" : "Object.getOwnPropertyDescriptors",
            "lineNumber" : 539,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "forEach",
              "resolvedMethod" : "lib\\utils.js::program:forEach",
              "paramTypes" : [
                "{ [x: __ecma.String]: TypedPropertyDescriptor<any>; } & { [x: __ecma.String]: PropertyDescriptor; }",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 542,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "getOwnPropertyDescriptors",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.getOwnPropertyDescriptors",
            "lineNumber" : 539,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "getOwnPropertyDescriptors",
            "typeFullName" : "ANY",
            "resolvedMethod" : "Object.getOwnPropertyDescriptors",
            "lineNumber" : 539,
            "columnNumber" : 22,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:stripBOM",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 360,
      "columnNumber" : 17,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 360,
            "columnNumber" : 17,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 360,
            "columnNumber" : 17,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "content",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 360,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "content",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 360,
            "columnNumber" : 18,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "charCodeAt",
              "resolvedMethod" : "__ecma.String:charCodeAt",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "lineNumber" : 361,
              "columnNumber" : 6
            },
            {
              "callName" : "slice",
              "resolvedMethod" : "__ecma.String:slice",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "lineNumber" : 362,
              "columnNumber" : 14
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "charCodeAt",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:charCodeAt",
            "lineNumber" : 361,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "charCodeAt",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__ecma.String:charCodeAt",
            "lineNumber" : 361,
            "columnNumber" : 6,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:toArray",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 447,
      "columnNumber" : 16,
      "usages" : [
        {
          "targetObj" : {
            "name" : "i",
            "typeFullName" : "__ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "thing.length",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.fieldAccess",
            "lineNumber" : 450,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isNumber",
              "resolvedMethod" : "lib\\utils.js::program:isNumber",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 451,
              "columnNumber" : 7
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "thing",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 447,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "thing",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 447,
            "columnNumber" : 17,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isArray",
              "resolvedMethod" : "lib\\utils.js::program:isArray",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 449,
              "columnNumber" : 6
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "arr",
            "typeFullName" : "(...items: ANY[]) => __ecma.Number",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new Array",
            "typeFullName" : "ANY",
            "resolvedMethod" : null,
            "lineNumber" : 452,
            "columnNumber" : 14,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "Array",
              "resolvedMethod" : "Array",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 452,
              "columnNumber" : 8
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "(thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 447,
            "columnNumber" : 16,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 447,
            "columnNumber" : 16,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "isNumber",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:isNumber",
            "lineNumber" : 451,
            "columnNumber" : 7,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "isNumber",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:isNumber",
            "lineNumber" : 451,
            "columnNumber" : 7,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:toCamelCase",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 518,
      "columnNumber" : 20,
      "usages" : [
        {
          "targetObj" : {
            "name" : "str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 518,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 518,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "str",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 518,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "str",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 518,
            "columnNumber" : 20,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "toLowerCase",
              "resolvedMethod" : "__ecma.String:toLowerCase",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 519,
              "columnNumber" : 9
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:toFiniteNumber",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 598,
      "columnNumber" : 23,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 598,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 598,
            "columnNumber" : 23,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 598,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "value",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 598,
            "columnNumber" : 24,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isFinite",
              "resolvedMethod" : "Number.isFinite",
              "paramTypes" : [
                "void"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 600,
              "columnNumber" : 9
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:toFlatObject",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 394,
      "columnNumber" : 21,
      "usages" : [
        {
          "targetObj" : {
            "name" : "destObj",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 394,
            "columnNumber" : 33,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "destObj",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 394,
            "columnNumber" : 33,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "propFilter",
              "resolvedMethod" : "lib\\utils.js::program:propFilter",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.Boolean",
                "object"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 409,
              "columnNumber" : 26
            },
            {
              "callName" : "filter",
              "resolvedMethod" : "lib\\utils.js::program:filter",
              "paramTypes" : [
                "__ecma.Boolean",
                "object"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 415,
              "columnNumber" : 36
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "propFilter",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:propFilter",
            "lineNumber" : 409,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "propFilter",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:propFilter",
            "lineNumber" : 409,
            "columnNumber" : 26,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "(sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 394,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 394,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "sourceObj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 394,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "sourceObj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 394,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "getOwnPropertyNames",
              "resolvedMethod" : "Object.getOwnPropertyNames",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 405,
              "columnNumber" : 12
            },
            {
              "callName" : "propFilter",
              "resolvedMethod" : "lib\\utils.js::program:propFilter",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.Boolean",
                "object"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 409,
              "columnNumber" : 26
            },
            {
              "callName" : "getPrototypeOf",
              "resolvedMethod" : "lib\\utils.js::program:getPrototypeOf",
              "paramTypes" : [
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 414,
              "columnNumber" : 36
            },
            {
              "callName" : "filter",
              "resolvedMethod" : "lib\\utils.js::program:filter",
              "paramTypes" : [
                "__ecma.Boolean",
                "object"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 415,
              "columnNumber" : 36
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "prop",
            "typeFullName" : "__ecma.String",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "props[i]",
            "typeFullName" : "ANY",
            "resolvedMethod" : "<operator>.indexAccess",
            "lineNumber" : 408,
            "columnNumber" : 13,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "propFilter",
              "resolvedMethod" : "lib\\utils.js::program:propFilter",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.Boolean",
                "object"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 409,
              "columnNumber" : 26
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "filter",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:filter",
            "lineNumber" : 58,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "filter",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:filter",
            "lineNumber" : 58,
            "columnNumber" : 23,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:toJSONObject",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 634,
      "columnNumber" : 21,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 634,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 634,
            "columnNumber" : 21,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 634,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "obj",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 634,
            "columnNumber" : 22,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "visit",
              "resolvedMethod" : "lib\\utils.js::program:anonymous28:visit",
              "paramTypes" : [
                "object",
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 662,
              "columnNumber" : 9
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "stack",
            "typeFullName" : "undefined",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "new Array",
            "typeFullName" : "ANY",
            "resolvedMethod" : null,
            "lineNumber" : 635,
            "columnNumber" : 16,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "indexOf",
              "resolvedMethod" : "undefined:indexOf",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 640,
              "columnNumber" : 10
            }
          ],
          "argToCalls" : [
            {
              "callName" : "Array",
              "resolvedMethod" : "Array",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 635,
              "columnNumber" : 8
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:toObjectSet",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 582,
      "columnNumber" : 20,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 582,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 582,
            "columnNumber" : 20,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "arrayOrString",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 582,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "arrayOrString",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 582,
            "columnNumber" : 21,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "isArray",
              "resolvedMethod" : "lib\\utils.js::program:isArray",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 591,
              "columnNumber" : 2
            },
            {
              "callName" : "define",
              "resolvedMethod" : "lib\\utils.js::program:anonymous24:define",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 591,
              "columnNumber" : 27
            },
            {
              "callName" : "String",
              "resolvedMethod" : "String",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 591,
              "columnNumber" : 58
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "delimiter",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 582,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "delimiter",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 582,
            "columnNumber" : 36,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "split",
              "resolvedMethod" : "__ecma.String:split",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 591,
              "columnNumber" : 58
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:trim",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 219,
      "columnNumber" : 13,
      "usages" : [
        {
          "targetObj" : {
            "name" : "trim",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:trim",
            "lineNumber" : 37,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "trim",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:trim",
            "lineNumber" : 37,
            "columnNumber" : 10,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "str",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 219,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "str",
            "typeFullName" : "__ecma.String",
            "position" : 1,
            "lineNumber" : 219,
            "columnNumber" : 14,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "trim",
              "resolvedMethod" : "__ecma.String:trim",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 220,
              "columnNumber" : 2
            },
            {
              "callName" : "replace",
              "resolvedMethod" : "__ecma.String:replace",
              "paramTypes" : [
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 220,
              "columnNumber" : 15
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "lib\\utils.js::program:typeOfTest",
      "signature" : "",
      "fileName" : "lib\\utils.js",
      "lineNumber" : 20,
      "columnNumber" : 19,
      "usages" : [
        {
          "targetObj" : {
            "name" : "typeOfTest",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:typeOfTest",
            "lineNumber" : 103,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "typeOfTest",
            "typeFullName" : "ANY",
            "resolvedMethod" : "lib\\utils.js::program:typeOfTest",
            "lineNumber" : 103,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "sandbox\\client.js::program",
      "signature" : "",
      "fileName" : "sandbox\\client.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "axios",
            "typeFullName" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosStatic",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "sandbox\\client.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "get",
              "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosStatic:get",
              "paramTypes" : [
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 13,
              "columnNumber" : 0
            },
            {
              "callName" : "post",
              "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosStatic:post",
              "paramTypes" : [
                "__ecma.String",
                "{ foo: __ecma.String; baz: __ecma.Number; }"
              ],
              "returnType" : "ANY",
              "lineNumber" : 18,
              "columnNumber" : 0
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "sandbox\\client.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "sandbox\\client.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "get",
            "typeFullName" : "ANY",
            "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosStatic:get",
            "lineNumber" : 13,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "get",
            "typeFullName" : "ANY",
            "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosStatic:get",
            "lineNumber" : 13,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "post",
            "typeFullName" : "ANY",
            "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosStatic:post",
            "lineNumber" : 18,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "post",
            "typeFullName" : "ANY",
            "resolvedMethod" : "import(\"C:/msys64/home/user/sources/javascript/axios-1.4.0/index\").AxiosStatic:post",
            "lineNumber" : 18,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "sandbox\\client.js::program:handleFailure",
      "signature" : "",
      "fileName" : "sandbox\\client.js",
      "lineNumber" : 10,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function handleFailure(data) { console.log('error', data); }",
            "typeFullName" : "ANY",
            "lineNumber" : 10,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function handleFailure(data) { console.log('error', data); }",
            "typeFullName" : "ANY",
            "lineNumber" : 10,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "data",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 10,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "data",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 10,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "log",
              "resolvedMethod" : "__whatwg.console:log",
              "paramTypes" : [
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 2,
              "lineNumber" : 10,
              "columnNumber" : 31
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "sandbox\\client.js::program:handleSuccess",
      "signature" : "",
      "fileName" : "sandbox\\client.js",
      "lineNumber" : 9,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function handleSuccess(data) { console.log(data); }",
            "typeFullName" : "ANY",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function handleSuccess(data) { console.log(data); }",
            "typeFullName" : "ANY",
            "lineNumber" : 9,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "data",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 9,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "data",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 9,
            "columnNumber" : 23,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "log",
              "resolvedMethod" : "__whatwg.console:log",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 9,
              "columnNumber" : 31
            }
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "sandbox\\server.js::program",
      "signature" : "",
      "fileName" : "sandbox\\server.js",
      "lineNumber" : 1,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "fs",
            "typeFullName" : "fs:fs",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "sandbox\\server.js::program:require",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "createReadStream",
              "resolvedMethod" : "fs:fs:createReadStream",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 14,
              "columnNumber" : 2
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "sandbox\\server.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "sandbox\\server.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "url",
            "typeFullName" : "url:url",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "sandbox\\server.js::program:require",
            "lineNumber" : 2,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "parse",
              "resolvedMethod" : "url:url:parse",
              "paramTypes" : [
                "ANY",
                "__ecma.Boolean"
              ],
              "returnType" : "ANY",
              "lineNumber" : 20,
              "columnNumber" : 17
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "path",
            "typeFullName" : "path:path",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "sandbox\\server.js::program:require",
            "lineNumber" : 3,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "join",
              "resolvedMethod" : "path:path:join",
              "paramTypes" : [
                "ANY",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 14,
              "columnNumber" : 22
            },
            {
              "callName" : "resolve",
              "resolvedMethod" : "path:path:resolve",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 14,
              "columnNumber" : 32
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "http",
            "typeFullName" : "http:http",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "require",
            "typeFullName" : "ANY",
            "resolvedMethod" : "sandbox\\server.js::program:require",
            "lineNumber" : 4,
            "columnNumber" : 0,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "createServer",
              "resolvedMethod" : "http:http:createServer",
              "paramTypes" : [
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 17,
              "columnNumber" : 9
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : ":program",
            "typeFullName" : "ANY",
            "lineNumber" : 1,
            "columnNumber" : 0,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "createServer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "http:http:createServer",
            "lineNumber" : 17,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "createServer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "http:http:createServer",
            "lineNumber" : 17,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "server",
            "typeFullName" : "ANY",
            "lineNumber" : null,
            "columnNumber" : null,
            "label" : "LOCAL"
          },
          "definedBy" : {
            "name" : "http.createServer",
            "typeFullName" : "ANY",
            "resolvedMethod" : "http:http:createServer",
            "lineNumber" : 17,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
            {
              "callName" : "listen",
              "resolvedMethod" : "server.listen",
              "paramTypes" : [
                "__ecma.Number",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 74,
              "columnNumber" : 0
            },
            {
              "callName" : "on",
              "resolvedMethod" : "server.on",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 75,
              "columnNumber" : 0
            },
            {
              "callName" : "close",
              "resolvedMethod" : "server.close",
              "paramTypes" : [
              ],
              "returnType" : "ANY",
              "lineNumber" : 78,
              "columnNumber" : 4
            }
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "sandbox\\server.js::program:anonymous",
      "signature" : "",
      "fileName" : "sandbox\\server.js",
      "lineNumber" : 17,
      "columnNumber" : 27,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function (req, res) {\n  req.setEncoding('utf8');\n\n  const parsed = url.parse(req.url, true);\n  let pathname = parsed.pathname;\n\n  console.log('[' + new Date() + ']', req.method, pathname);\n\n  if (pathname === '/') {\n    pathname = '/index.html';\n  }\n\n  if (pathname === '/index.html') {\n    pipeFileToResponse(res, './client.html');\n  } else if (pathname === '/axios.js') {\n    pipeFileToResponse(res, '../dist/axios.js', 'text/javascript');\n  } else if (pathname === '/axios.js.map') {\n    pipeFileToResponse(res, '../dist/axios.js.map', 'text/javascript');\n  } else if (pathname === '/api') {\n    let status;\n    let result;\n    let data = '';\n\n    req.on('data', function (chunk) {\n      data += chunk;\n    });\n\n    req.on('end', function () {\n      try {\n        status = 200;\n        result = {\n          url: req.url,\n          data: data ? JSON.parse(data) : undefined,\n          method: req.method,\n          headers: req.headers\n        };\n      } catch (e) {\n        console.error('Error...",
            "typeFullName" : "ANY",
            "lineNumber" : 17,
            "columnNumber" : 27,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function (req, res) {\n  req.setEncoding('utf8');\n\n  const parsed = url.parse(req.url, true);\n  let pathname = parsed.pathname;\n\n  console.log('[' + new Date() + ']', req.method, pathname);\n\n  if (pathname === '/') {\n    pathname = '/index.html';\n  }\n\n  if (pathname === '/index.html') {\n    pipeFileToResponse(res, './client.html');\n  } else if (pathname === '/axios.js') {\n    pipeFileToResponse(res, '../dist/axios.js', 'text/javascript');\n  } else if (pathname === '/axios.js.map') {\n    pipeFileToResponse(res, '../dist/axios.js.map', 'text/javascript');\n  } else if (pathname === '/api') {\n    let status;\n    let result;\n    let data = '';\n\n    req.on('data', function (chunk) {\n      data += chunk;\n    });\n\n    req.on('end', function () {\n      try {\n        status = 200;\n        result = {\n          url: req.url,\n          data: data ? JSON.parse(data) : undefined,\n          method: req.method,\n          headers: req.headers\n        };\n      } catch (e) {\n        console.error('Error...",
            "typeFullName" : "ANY",
            "lineNumber" : 17,
            "columnNumber" : 27,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "req",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 17,
            "columnNumber" : 37,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "req",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 17,
            "columnNumber" : 37,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "setEncoding",
              "resolvedMethod" : "req.setEncoding",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 18,
              "columnNumber" : 2
            },
            {
              "callName" : "on",
              "resolvedMethod" : "req.on",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 40,
              "columnNumber" : 4
            },
            {
              "callName" : "on",
              "resolvedMethod" : "req.on",
              "paramTypes" : [
                "__ecma.String",
                "LAMBDA"
              ],
              "returnType" : "ANY",
              "lineNumber" : 44,
              "columnNumber" : 4
            }
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "res",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 17,
            "columnNumber" : 42,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "res",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 17,
            "columnNumber" : 42,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "writeHead",
              "resolvedMethod" : "res.writeHead",
              "paramTypes" : [
                "__ecma.Number",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 61,
              "columnNumber" : 6
            },
            {
              "callName" : "end",
              "resolvedMethod" : "res.end",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 64,
              "columnNumber" : 6
            },
            {
              "callName" : "writeHead",
              "resolvedMethod" : "res.writeHead",
              "paramTypes" : [
                "__ecma.Number"
              ],
              "returnType" : "ANY",
              "lineNumber" : 67,
              "columnNumber" : 4
            },
            {
              "callName" : "end",
              "resolvedMethod" : "res.end",
              "paramTypes" : [
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "lineNumber" : 68,
              "columnNumber" : 4
            }
          ],
          "argToCalls" : [
            {
              "callName" : "pipeFileToResponse",
              "resolvedMethod" : "sandbox\\server.js::program:pipeFileToResponse",
              "paramTypes" : [
                "ANY",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 30,
              "columnNumber" : 4
            },
            {
              "callName" : "pipeFileToResponse",
              "resolvedMethod" : "sandbox\\server.js::program:pipeFileToResponse",
              "paramTypes" : [
                "ANY",
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 32,
              "columnNumber" : 4
            },
            {
              "callName" : "pipeFileToResponse",
              "resolvedMethod" : "sandbox\\server.js::program:pipeFileToResponse",
              "paramTypes" : [
                "ANY",
                "__ecma.String",
                "__ecma.String"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 34,
              "columnNumber" : 4
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "parse",
            "typeFullName" : "ANY",
            "resolvedMethod" : "url:url:parse",
            "lineNumber" : 20,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "parse",
            "typeFullName" : "ANY",
            "resolvedMethod" : "url:url:parse",
            "lineNumber" : 20,
            "columnNumber" : 17,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "sandbox\\server.js::program:anonymous1",
      "signature" : "",
      "fileName" : "sandbox\\server.js",
      "lineNumber" : 75,
      "columnNumber" : 19,
      "usages" : [
        {
          "targetObj" : {
            "name" : "(error) => {\n  if (error.code === 'EADDRINUSE') {\n    console.log(`Address localhost:${PORT} in use please retry when the port is available!`);\n    server.close();\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 75,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "(error) => {\n  if (error.code === 'EADDRINUSE') {\n    console.log(`Address localhost:${PORT} in use please retry when the port is available!`);\n    server.close();\n  }\n}",
            "typeFullName" : "ANY",
            "lineNumber" : 75,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "sandbox\\server.js::program:anonymous:anonymous",
      "signature" : "",
      "fileName" : "sandbox\\server.js",
      "lineNumber" : 40,
      "columnNumber" : 19,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function (chunk) {\n      data += chunk;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 40,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function (chunk) {\n      data += chunk;\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 40,
            "columnNumber" : 19,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "sandbox\\server.js::program:anonymous:anonymous1",
      "signature" : "",
      "fileName" : "sandbox\\server.js",
      "lineNumber" : 44,
      "columnNumber" : 18,
      "usages" : [
        {
          "targetObj" : {
            "name" : "function () {\n      try {\n        status = 200;\n        result = {\n          url: req.url,\n          data: data ? JSON.parse(data) : undefined,\n          method: req.method,\n          headers: req.headers\n        };\n      } catch (e) {\n        console.error('Error:', e.message);\n        status = 400;\n        result = {\n          error: e.message\n        };\n      }\n\n      res.writeHead(status, {\n        'Content-Type': 'application/json'\n      });\n      res.end(JSON.stringify(result));\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 44,
            "columnNumber" : 18,
            "label" : "UNKNOWN"
          },
          "definedBy" : {
            "name" : "function () {\n      try {\n        status = 200;\n        result = {\n          url: req.url,\n          data: data ? JSON.parse(data) : undefined,\n          method: req.method,\n          headers: req.headers\n        };\n      } catch (e) {\n        console.error('Error:', e.message);\n        status = 400;\n        result = {\n          error: e.message\n        };\n      }\n\n      res.writeHead(status, {\n        'Content-Type': 'application/json'\n      });\n      res.end(JSON.stringify(result));\n    }",
            "typeFullName" : "ANY",
            "lineNumber" : 44,
            "columnNumber" : 18,
            "label" : "UNKNOWN"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "error",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__whatwg.console:error",
            "lineNumber" : 54,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "error",
            "typeFullName" : "ANY",
            "resolvedMethod" : "__whatwg.console:error",
            "lineNumber" : 54,
            "columnNumber" : 8,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        }
      ]
    },
    {
      "code" : "",
      "fullName" : "sandbox\\server.js::program:pipeFileToResponse",
      "signature" : "",
      "fileName" : "sandbox\\server.js",
      "lineNumber" : 7,
      "columnNumber" : 0,
      "usages" : [
        {
          "targetObj" : {
            "name" : "join",
            "typeFullName" : "ANY",
            "resolvedMethod" : "path:path:join",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "join",
            "typeFullName" : "ANY",
            "resolvedMethod" : "path:path:join",
            "lineNumber" : 41,
            "columnNumber" : 9,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "createReadStream",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs:fs:createReadStream",
            "lineNumber" : 14,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "createReadStream",
            "typeFullName" : "ANY",
            "resolvedMethod" : "fs:fs:createReadStream",
            "lineNumber" : 14,
            "columnNumber" : 2,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "res",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 7,
            "columnNumber" : 28,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "res",
            "typeFullName" : "ANY",
            "position" : 1,
            "lineNumber" : 7,
            "columnNumber" : 28,
            "label" : "PARAM"
          },
          "invokedCalls" : [
            {
              "callName" : "writeHead",
              "resolvedMethod" : "res.writeHead",
              "paramTypes" : [
                "__ecma.Number",
                "ANY"
              ],
              "returnType" : "ANY",
              "lineNumber" : 9,
              "columnNumber" : 4
            }
          ],
          "argToCalls" : [
            {
              "callName" : "pipe",
              "resolvedMethod" : "__ecma.Boolean:pipe",
              "paramTypes" : [
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 1,
              "lineNumber" : 14,
              "columnNumber" : 2
            }
          ]
        },
        {
          "targetObj" : {
            "name" : "pipeFileToResponse",
            "typeFullName" : "void",
            "resolvedMethod" : "sandbox\\server.js::program:pipeFileToResponse",
            "lineNumber" : 34,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "definedBy" : {
            "name" : "pipeFileToResponse",
            "typeFullName" : "void",
            "resolvedMethod" : "sandbox\\server.js::program:pipeFileToResponse",
            "lineNumber" : 34,
            "columnNumber" : 4,
            "label" : "CALL"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
          ]
        },
        {
          "targetObj" : {
            "name" : "file",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 7,
            "columnNumber" : 33,
            "label" : "PARAM"
          },
          "definedBy" : {
            "name" : "file",
            "typeFullName" : "ANY",
            "position" : 2,
            "lineNumber" : 7,
            "columnNumber" : 33,
            "label" : "PARAM"
          },
          "invokedCalls" : [
          ],
          "argToCalls" : [
            {
              "callName" : "join",
              "resolvedMethod" : "path:path:join",
              "paramTypes" : [
                "ANY",
                "__ecma.String",
                "ANY"
              ],
              "returnType" : "ANY",
              "position" : 3,
              "lineNumber" : 14,
              "columnNumber" : 22
            }
          ]
        }
      ]
    }
  ],
  "userDefinedTypes" : [
    {
      "name" : "bin\\contributors.js::program:anonymous8:anonymous:_anon_cdecl",
      "fields" : [
        {
          "name" : "name",
          "typeFullName" : "__ecma.String",
          "lineNumber" : 191,
          "columnNumber" : 31,
          "label" : "LOCAL"
        }
      ],
      "procedures" : [
      ],
      "fileName" : "bin\\contributors.js",
      "lineNumber" : 191,
      "columnNumber" : 30
    },
    {
      "name" : "bin\\pr.js::program:anonymous2:anonymous:_anon_cdecl",
      "fields" : [
        {
          "name" : "tag",
          "typeFullName" : "__ecma.String",
          "lineNumber" : 52,
          "columnNumber" : 29,
          "label" : "LOCAL"
        },
        {
          "name" : "size",
          "typeFullName" : "__ecma.Number",
          "lineNumber" : 52,
          "columnNumber" : 34,
          "label" : "LOCAL"
        }
      ],
      "procedures" : [
      ],
      "fileName" : "bin\\pr.js",
      "lineNumber" : 52,
      "columnNumber" : 28
    },
    {
      "name" : "bin\\pr.js::program:anonymous2:anonymous:{ sha: __ecma.String; tag: __ecma.String; size: __ecma.Number; }",
      "fields" : [
        {
          "name" : "tag",
          "typeFullName" : "__ecma.String",
          "lineNumber" : 52,
          "columnNumber" : 29,
          "label" : "LOCAL"
        },
        {
          "name" : "size",
          "typeFullName" : "__ecma.Number",
          "lineNumber" : 52,
          "columnNumber" : 34,
          "label" : "LOCAL"
        }
      ],
      "procedures" : [
      ],
      "fileName" : "bin\\pr.js",
      "lineNumber" : 52,
      "columnNumber" : 28
    },
    {
      "name" : "gulpfile.js::program:anonymous3:anonymous:_anon_cdecl",
      "fields" : [
        {
          "name" : "type",
          "typeFullName" : "ANY",
          "lineNumber" : 60,
          "columnNumber" : 10,
          "label" : "LOCAL"
        },
        {
          "name" : "contributions",
          "typeFullName" : "ANY",
          "lineNumber" : 60,
          "columnNumber" : 16,
          "label" : "LOCAL"
        }
      ],
      "procedures" : [
      ],
      "fileName" : "gulpfile.js",
      "lineNumber" : 60,
      "columnNumber" : 9
    },
    {
      "name" : "gulpfile.js::program:anonymous3:anonymous1:_anon_cdecl",
      "fields" : [
        {
          "name" : "login",
          "typeFullName" : "ANY",
          "lineNumber" : 62,
          "columnNumber" : 13,
          "label" : "LOCAL"
        },
        {
          "name" : "name",
          "typeFullName" : "__ecma.String",
          "lineNumber" : 62,
          "columnNumber" : 20,
          "label" : "LOCAL"
        },
        {
          "name" : "url",
          "typeFullName" : "ANY",
          "lineNumber" : 62,
          "columnNumber" : 26,
          "label" : "LOCAL"
        }
      ],
      "procedures" : [
      ],
      "fileName" : "gulpfile.js",
      "lineNumber" : 62,
      "columnNumber" : 12
    },
    {
      "name" : "lib\\cancel\\CancelToken.js::program:CancelToken",
      "fields" : [
        {
          "name" : "promise",
          "typeFullName" : "Promise<TResult1>",
          "lineNumber" : 20,
          "columnNumber" : 4,
          "label" : "LOCAL"
        },
        {
          "name" : "throwIfRequested",
          "typeFullName" : "() => void",
          "lineNumber" : 68,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "subscribe",
          "typeFullName" : "(listener: ANY) => void",
          "lineNumber" : 78,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "unsubscribe",
          "typeFullName" : "(listener: ANY) => void",
          "lineNumber" : 95,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "source",
          "typeFullName" : "lib\\cancel\\CancelToken.js::program:CancelToken:source",
          "lineNumber" : 109,
          "columnNumber" : 2,
          "label" : "LOCAL"
        }
      ],
      "procedures" : [
        {
          "callName" : "<init>",
          "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:CancelToken:<init>",
          "paramTypes" : [
            "lib\\cancel\\CancelToken.js::program:CancelToken",
            "ANY"
          ],
          "returnType" : "CancelToken",
          "lineNumber" : 13,
          "columnNumber" : 2
        },
        {
          "callName" : "throwIfRequested",
          "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:CancelToken:throwIfRequested",
          "paramTypes" : [
            "lib\\cancel\\CancelToken.js::program:CancelToken"
          ],
          "returnType" : "() => void",
          "lineNumber" : 68,
          "columnNumber" : 2
        },
        {
          "callName" : "subscribe",
          "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:CancelToken:subscribe",
          "paramTypes" : [
            "lib\\cancel\\CancelToken.js::program:CancelToken",
            "ANY"
          ],
          "returnType" : "(listener: ANY) => void",
          "lineNumber" : 78,
          "columnNumber" : 2
        },
        {
          "callName" : "unsubscribe",
          "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:CancelToken:unsubscribe",
          "paramTypes" : [
            "lib\\cancel\\CancelToken.js::program:CancelToken",
            "ANY"
          ],
          "returnType" : "(listener: ANY) => void",
          "lineNumber" : 95,
          "columnNumber" : 2
        },
        {
          "callName" : "source",
          "resolvedMethod" : "lib\\cancel\\CancelToken.js::program:CancelToken:source",
          "paramTypes" : [
            "lib\\cancel\\CancelToken.js::program:CancelToken"
          ],
          "returnType" : "ANY",
          "lineNumber" : 109,
          "columnNumber" : 2
        }
      ],
      "fileName" : "lib\\cancel\\CancelToken.js",
      "lineNumber" : 12,
      "columnNumber" : 0
    },
    {
      "name" : "lib\\core\\Axios.js::program:Axios",
      "fields" : [
        {
          "name" : "defaults",
          "typeFullName" : "this",
          "lineNumber" : 23,
          "columnNumber" : 4,
          "label" : "LOCAL"
        },
        {
          "name" : "interceptors",
          "typeFullName" : "this",
          "lineNumber" : 24,
          "columnNumber" : 4,
          "label" : "LOCAL"
        },
        {
          "name" : "request",
          "typeFullName" : "(configOrUrl: ANY, config: ANY) => Promise<any>",
          "lineNumber" : 38,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "getUri",
          "typeFullName" : "(config: ANY) => __ecma.String",
          "lineNumber" : 163,
          "columnNumber" : 2,
          "label" : "LOCAL"
        }
      ],
      "procedures" : [
        {
          "callName" : "<init>",
          "resolvedMethod" : "lib\\core\\Axios.js::program:Axios:<init>",
          "paramTypes" : [
            "lib\\core\\Axios.js::program:Axios",
            "ANY"
          ],
          "returnType" : "Axios",
          "lineNumber" : 22,
          "columnNumber" : 2
        },
        {
          "callName" : "request",
          "resolvedMethod" : "lib\\core\\Axios.js::program:Axios:request",
          "paramTypes" : [
            "lib\\core\\Axios.js::program:Axios",
            "ANY",
            "ANY"
          ],
          "returnType" : "(configOrUrl: ANY, config: ANY) => Promise<any>",
          "lineNumber" : 38,
          "columnNumber" : 2
        },
        {
          "callName" : "getUri",
          "resolvedMethod" : "lib\\core\\Axios.js::program:Axios:getUri",
          "paramTypes" : [
            "lib\\core\\Axios.js::program:Axios",
            "ANY"
          ],
          "returnType" : "(config: ANY) => __ecma.String",
          "lineNumber" : 163,
          "columnNumber" : 2
        }
      ],
      "fileName" : "lib\\core\\Axios.js",
      "lineNumber" : 21,
      "columnNumber" : 0
    },
    {
      "name" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
      "fields" : [
        {
          "name" : "set",
          "typeFullName" : "(header: ANY, valueOrRewrite: ANY, rewrite: ANY) => this",
          "lineNumber" : 79,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "get",
          "typeFullName" : "(header: ANY, parser: ANY) => ANY",
          "lineNumber" : 110,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "has",
          "typeFullName" : "(header: ANY, matcher: ANY) => __ecma.Boolean",
          "lineNumber" : 140,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "delete",
          "typeFullName" : "(header: ANY, matcher: ANY) => __ecma.Boolean",
          "lineNumber" : 152,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "clear",
          "typeFullName" : "(matcher: ANY) => __ecma.Boolean",
          "lineNumber" : 179,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "normalize",
          "typeFullName" : "(format: ANY) => this",
          "lineNumber" : 195,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "concat",
          "typeFullName" : "(...targets: ANY[]) => ANY",
          "lineNumber" : 222,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "toJSON",
          "typeFullName" : "(asStrings: ANY) => ANY",
          "lineNumber" : 226,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "Symbol.iterator",
          "typeFullName" : "() => IterableIterator<[string, ANY]>",
          "lineNumber" : 236,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "toString",
          "typeFullName" : "() => __ecma.String",
          "lineNumber" : 240,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "Symbol.toStringTag",
          "typeFullName" : "__ecma.String",
          "lineNumber" : 244,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "from",
          "typeFullName" : "AxiosHeaders",
          "lineNumber" : 248,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "concat1",
          "typeFullName" : "AxiosHeaders",
          "lineNumber" : 252,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "accessor",
          "typeFullName" : "AxiosHeaders",
          "lineNumber" : 260,
          "columnNumber" : 2,
          "label" : "LOCAL"
        }
      ],
      "procedures" : [
        {
          "callName" : "<init>",
          "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:<init>",
          "paramTypes" : [
            "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "ANY"
          ],
          "returnType" : "AxiosHeaders",
          "lineNumber" : 75,
          "columnNumber" : 2
        },
        {
          "callName" : "set",
          "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:set",
          "paramTypes" : [
            "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "ANY",
            "ANY",
            "ANY"
          ],
          "returnType" : "(header: ANY, valueOrRewrite: ANY, rewrite: ANY) => this",
          "lineNumber" : 79,
          "columnNumber" : 2
        },
        {
          "callName" : "get",
          "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:get",
          "paramTypes" : [
            "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "ANY",
            "ANY"
          ],
          "returnType" : "(header: ANY, parser: ANY) => ANY",
          "lineNumber" : 110,
          "columnNumber" : 2
        },
        {
          "callName" : "has",
          "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:has",
          "paramTypes" : [
            "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "ANY",
            "ANY"
          ],
          "returnType" : "(header: ANY, matcher: ANY) => __ecma.Boolean",
          "lineNumber" : 140,
          "columnNumber" : 2
        },
        {
          "callName" : "delete",
          "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:delete",
          "paramTypes" : [
            "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "ANY",
            "ANY"
          ],
          "returnType" : "(header: ANY, matcher: ANY) => __ecma.Boolean",
          "lineNumber" : 152,
          "columnNumber" : 2
        },
        {
          "callName" : "clear",
          "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:clear",
          "paramTypes" : [
            "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "ANY"
          ],
          "returnType" : "(matcher: ANY) => __ecma.Boolean",
          "lineNumber" : 179,
          "columnNumber" : 2
        },
        {
          "callName" : "normalize",
          "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:normalize",
          "paramTypes" : [
            "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "ANY"
          ],
          "returnType" : "(format: ANY) => this",
          "lineNumber" : 195,
          "columnNumber" : 2
        },
        {
          "callName" : "concat",
          "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:concat",
          "paramTypes" : [
            "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "ANY"
          ],
          "returnType" : "(...targets: ANY[]) => ANY",
          "lineNumber" : 222,
          "columnNumber" : 2
        },
        {
          "callName" : "toJSON",
          "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:toJSON",
          "paramTypes" : [
            "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "ANY"
          ],
          "returnType" : "(asStrings: ANY) => ANY",
          "lineNumber" : 226,
          "columnNumber" : 2
        },
        {
          "callName" : "Symbol.iterator",
          "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:Symbol.iterator",
          "paramTypes" : [
            "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
          ],
          "returnType" : "() => IterableIterator<[string, ANY]>",
          "lineNumber" : 236,
          "columnNumber" : 2
        },
        {
          "callName" : "toString",
          "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:toString",
          "paramTypes" : [
            "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
          ],
          "returnType" : "() => __ecma.String",
          "lineNumber" : 240,
          "columnNumber" : 2
        },
        {
          "callName" : "Symbol.toStringTag",
          "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:Symbol.toStringTag",
          "paramTypes" : [
            "lib\\core\\AxiosHeaders.js::program:AxiosHeaders"
          ],
          "returnType" : "__ecma.String",
          "lineNumber" : 244,
          "columnNumber" : 2
        },
        {
          "callName" : "from",
          "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:from",
          "paramTypes" : [
            "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "ANY"
          ],
          "returnType" : "AxiosHeaders",
          "lineNumber" : 248,
          "columnNumber" : 2
        },
        {
          "callName" : "concat1",
          "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:concat1",
          "paramTypes" : [
            "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "ANY",
            "ANY"
          ],
          "returnType" : "AxiosHeaders",
          "lineNumber" : 252,
          "columnNumber" : 2
        },
        {
          "callName" : "accessor",
          "resolvedMethod" : "lib\\core\\AxiosHeaders.js::program:AxiosHeaders:accessor",
          "paramTypes" : [
            "lib\\core\\AxiosHeaders.js::program:AxiosHeaders",
            "ANY"
          ],
          "returnType" : "AxiosHeaders",
          "lineNumber" : 260,
          "columnNumber" : 2
        }
      ],
      "fileName" : "lib\\core\\AxiosHeaders.js",
      "lineNumber" : 74,
      "columnNumber" : 0
    },
    {
      "name" : "lib\\core\\InterceptorManager.js::program:InterceptorManager",
      "fields" : [
        {
          "name" : "handlers",
          "typeFullName" : "__ecma.Array.factory",
          "lineNumber" : 7,
          "columnNumber" : 4,
          "label" : "LOCAL"
        },
        {
          "name" : "use",
          "typeFullName" : "(fulfilled: Function, rejected: Function, options: ANY) => __ecma.Number",
          "lineNumber" : 18,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "eject",
          "typeFullName" : "(id: __ecma.Number) => __ecma.Boolean",
          "lineNumber" : 35,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "clear",
          "typeFullName" : "() => void",
          "lineNumber" : 46,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "forEach",
          "typeFullName" : "(fn: Function) => void",
          "lineNumber" : 62,
          "columnNumber" : 2,
          "label" : "LOCAL"
        }
      ],
      "procedures" : [
        {
          "callName" : "<init>",
          "resolvedMethod" : "lib\\core\\InterceptorManager.js::program:InterceptorManager:<init>",
          "paramTypes" : [
            "lib\\core\\InterceptorManager.js::program:InterceptorManager"
          ],
          "returnType" : "InterceptorManager",
          "lineNumber" : 6,
          "columnNumber" : 2
        },
        {
          "callName" : "use",
          "resolvedMethod" : "lib\\core\\InterceptorManager.js::program:InterceptorManager:use",
          "paramTypes" : [
            "lib\\core\\InterceptorManager.js::program:InterceptorManager",
            "Function",
            "Function",
            "ANY"
          ],
          "returnType" : "(fulfilled: Function, rejected: Function, options: ANY) => __ecma.Number",
          "lineNumber" : 18,
          "columnNumber" : 2
        },
        {
          "callName" : "eject",
          "resolvedMethod" : "lib\\core\\InterceptorManager.js::program:InterceptorManager:eject",
          "paramTypes" : [
            "lib\\core\\InterceptorManager.js::program:InterceptorManager",
            "__ecma.Number"
          ],
          "returnType" : "(id: __ecma.Number) => __ecma.Boolean",
          "lineNumber" : 35,
          "columnNumber" : 2
        },
        {
          "callName" : "clear",
          "resolvedMethod" : "lib\\core\\InterceptorManager.js::program:InterceptorManager:clear",
          "paramTypes" : [
            "lib\\core\\InterceptorManager.js::program:InterceptorManager"
          ],
          "returnType" : "() => void",
          "lineNumber" : 46,
          "columnNumber" : 2
        },
        {
          "callName" : "forEach",
          "resolvedMethod" : "lib\\core\\InterceptorManager.js::program:InterceptorManager:forEach",
          "paramTypes" : [
            "lib\\core\\InterceptorManager.js::program:InterceptorManager",
            "Function"
          ],
          "returnType" : "(fn: Function) => void",
          "lineNumber" : 62,
          "columnNumber" : 2
        }
      ],
      "fileName" : "lib\\core\\InterceptorManager.js",
      "lineNumber" : 5,
      "columnNumber" : 0
    },
    {
      "name" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream",
      "fields" : [
        {
          "name" : "_read",
          "typeFullName" : "(size: ANY) => ANY",
          "lineNumber" : 87,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "_transform",
          "typeFullName" : "(chunk: ANY, encoding: ANY, callback: ANY) => void",
          "lineNumber" : 97,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "setLength",
          "typeFullName" : "(length: ANY) => this",
          "lineNumber" : 185,
          "columnNumber" : 2,
          "label" : "LOCAL"
        }
      ],
      "procedures" : [
        {
          "callName" : "<init>",
          "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:<init>",
          "paramTypes" : [
            "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream",
            "ANY"
          ],
          "returnType" : "AxiosTransformStream",
          "lineNumber" : 11,
          "columnNumber" : 2
        },
        {
          "callName" : "_read",
          "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_read",
          "paramTypes" : [
            "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream",
            "ANY"
          ],
          "returnType" : "(size: ANY) => ANY",
          "lineNumber" : 87,
          "columnNumber" : 2
        },
        {
          "callName" : "_transform",
          "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:_transform",
          "paramTypes" : [
            "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream",
            "ANY",
            "ANY",
            "ANY"
          ],
          "returnType" : "(chunk: ANY, encoding: ANY, callback: ANY) => void",
          "lineNumber" : 97,
          "columnNumber" : 2
        },
        {
          "callName" : "setLength",
          "resolvedMethod" : "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream:setLength",
          "paramTypes" : [
            "lib\\helpers\\AxiosTransformStream.js::program:AxiosTransformStream",
            "ANY"
          ],
          "returnType" : "(length: ANY) => this",
          "lineNumber" : 185,
          "columnNumber" : 2
        }
      ],
      "fileName" : "lib\\helpers\\AxiosTransformStream.js",
      "lineNumber" : 10,
      "columnNumber" : 0
    },
    {
      "name" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream",
      "fields" : [
        {
          "name" : "__transform",
          "typeFullName" : "(chunk: ANY, encoding: ANY, callback: ANY) => void",
          "lineNumber" : 6,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "_transform",
          "typeFullName" : "(chunk: ANY, encoding: ANY, callback: ANY) => void",
          "lineNumber" : 11,
          "columnNumber" : 2,
          "label" : "LOCAL"
        }
      ],
      "procedures" : [
        {
          "callName" : "<init>",
          "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:<init>",
          "paramTypes" : [
            "lib\\helpers\\ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream"
          ],
          "returnType" : "ANY",
          "lineNumber" : null,
          "columnNumber" : null
        },
        {
          "callName" : "__transform",
          "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:__transform",
          "paramTypes" : [
            "lib\\helpers\\ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream",
            "ANY",
            "ANY",
            "ANY"
          ],
          "returnType" : "(chunk: ANY, encoding: ANY, callback: ANY) => void",
          "lineNumber" : 6,
          "columnNumber" : 2
        },
        {
          "callName" : "_transform",
          "resolvedMethod" : "lib\\helpers\\ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream:_transform",
          "paramTypes" : [
            "lib\\helpers\\ZlibHeaderTransformStream.js::program:ZlibHeaderTransformStream",
            "ANY",
            "ANY",
            "ANY"
          ],
          "returnType" : "(chunk: ANY, encoding: ANY, callback: ANY) => void",
          "lineNumber" : 11,
          "columnNumber" : 2
        }
      ],
      "fileName" : "lib\\helpers\\ZlibHeaderTransformStream.js",
      "lineNumber" : 5,
      "columnNumber" : 0
    },
    {
      "name" : "lib\\helpers\\formDataToStream.js::program:FormDataPart",
      "fields" : [
        {
          "name" : "headers",
          "typeFullName" : "__ecma.String",
          "lineNumber" : 29,
          "columnNumber" : 4,
          "label" : "LOCAL"
        },
        {
          "name" : "contentLength",
          "typeFullName" : "this",
          "lineNumber" : 31,
          "columnNumber" : 4,
          "label" : "LOCAL"
        },
        {
          "name" : "size",
          "typeFullName" : "this",
          "lineNumber" : 33,
          "columnNumber" : 4,
          "label" : "LOCAL"
        },
        {
          "name" : "name",
          "typeFullName" : "__ecma.String",
          "lineNumber" : 35,
          "columnNumber" : 4,
          "label" : "LOCAL"
        },
        {
          "name" : "value",
          "typeFullName" : "Uint8Array",
          "lineNumber" : 36,
          "columnNumber" : 4,
          "label" : "LOCAL"
        },
        {
          "name" : "encode",
          "typeFullName" : "AsyncGenerator<any, void, ANY>",
          "lineNumber" : 39,
          "columnNumber" : 2,
          "label" : "LOCAL"
        },
        {
          "name" : "escapeName",
          "typeFullName" : "__ecma.String",
          "lineNumber" : 53,
          "columnNumber" : 2,
          "label" : "LOCAL"
        }
      ],
      "procedures" : [
        {
          "callName" : "<init>",
          "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:FormDataPart:<init>",
          "paramTypes" : [
            "lib\\helpers\\formDataToStream.js::program:FormDataPart",
            "ANY",
            "ANY"
          ],
          "returnType" : "FormDataPart",
          "lineNumber" : 15,
          "columnNumber" : 2
        },
        {
          "callName" : "encode",
          "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:FormDataPart:encode",
          "paramTypes" : [
            "lib\\helpers\\formDataToStream.js::program:FormDataPart"
          ],
          "returnType" : "AsyncGenerator<any, void, ANY>",
          "lineNumber" : 39,
          "columnNumber" : 2
        },
        {
          "callName" : "escapeName",
          "resolvedMethod" : "lib\\helpers\\formDataToStream.js::program:FormDataPart:escapeName",
          "paramTypes" : [
            "lib\\helpers\\formDataToStream.js::program:FormDataPart",
            "ANY"
          ],
          "returnType" : "__ecma.String",
          "lineNumber" : 53,
          "columnNumber" : 2
        }
      ],
      "fileName" : "lib\\helpers\\formDataToStream.js",
      "lineNumber" : 14,
      "columnNumber" : 0
    },
    {
      "name" : "lib\\utils.js::program:anonymous21:_anon_cdecl",
      "fields" : [
        {
          "name" : "hasOwnProperty",
          "typeFullName" : "(v: PropertyKey) => __ecma.Boolean",
          "lineNumber" : 527,
          "columnNumber" : 26,
          "label" : "LOCAL"
        }
      ],
      "procedures" : [
      ],
      "fileName" : "lib\\utils.js",
      "lineNumber" : 527,
      "columnNumber" : 25
    }
  ]
}