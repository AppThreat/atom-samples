name: Check for new atom release

on:
  workflow_dispatch:
    inputs:
      filter-projects:
        description: For use in troubleshooting to filter projects
        required: false
        default: ''
        type: string
  schedule:
    - cron: '0 4 * * TUE,FRI'

jobs:
  check_release:
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.check.outputs.release }}
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
      - name: Check for existing PR
        id: check_pr
        shell: bash
        run: |
          git fetch
          git_cmd='git branch --list -r "origin/update/slice-update"'
          pr=$(eval $git_cmd)
          if [ "$pr" != "  origin/update/slice-update" ]; then
            echo "BRANCH=new" >> "$GITHUB_ENV"
          else
            echo "BRANCH=exists" >> "$GITHUB_ENV"
            git checkout --force -B update/slice-update refs/remotes/origin/update/slice-update --
          fi
      - name: Check version
        id: check
        shell: bash
        run: |
          ver=$(npm view @appthreat/atom dist-tags.latest)
          current=$(cat atom_version.txt)
          if [ "$current" != "$ver" ]; then
              echo "release=true" >> "$GITHUB_OUTPUT"
          else
              echo "release=false" >> "$GITHUB_OUTPUT"
          fi

  run_generate:
    needs: check_release
    if: ${{ needs.check_release.outputs.release == 'true' }}
    uses: appthreat/atom-samples/.github/workflows/generate_samples.yml@main
    permissions:
      contents: write
      pull-requests: write
    with:
      commit-msg: "autoupdate"
      filter-projects: ${{ inputs.filter-projects }}
